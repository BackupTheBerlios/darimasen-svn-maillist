From no_reply at svn.berlios.de  Tue Apr  5 06:26:29 2005
From: no_reply at svn.berlios.de (no_reply at svn.berlios.de)
Date: Tue, 5 Apr 2005 06:26:29 +0200
Subject: [Darimasen-svn] r47 - in trunk: . src
Message-ID: <200504050426.j354QTk3016817@sheep.berlios.de>

Author: sudrien
Date: 2005-04-05 06:26:24 +0200 (Tue, 05 Apr 2005)
New Revision: 47

Modified:
   trunk/TODO
   trunk/src/darimasen.cpp
   trunk/src/darimasen.h
   trunk/src/iconmodes.cpp
   trunk/src/iconmodes.h
Log:
history more reliable/relied upon, tab labels

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2005-04-04 06:03:32 UTC (rev 46)
+++ trunk/TODO	2005-04-05 04:26:24 UTC (rev 47)
@@ -4,8 +4,6 @@
 
 getting submenus to popup in the correct position
 resetting menus where subsubdirs have been used
-reduce iconmodes' ustring passing by using history.
-"begining of history" segfault.
 
 
 

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-04 06:03:32 UTC (rev 46)
+++ trunk/src/darimasen.cpp	2005-04-05 04:26:24 UTC (rev 47)
@@ -16,9 +16,7 @@
 
   int entry = 0;
 
-  
 
-
   if( position < depth || ext != ""){
 
     Gtk::MenuItem * subdir = Gtk::manage( new Gtk::MenuItem(menulevel[position] + " "));
@@ -28,9 +26,9 @@
           subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
 
           subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring>(
+            sigc::bind<Glib::ustring,guint>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                 (path + menulevel[position]).substr(0, (path + menulevel[position]).length() - 1)));
+                 (path + menulevel[position]).substr(0, (path + menulevel[position]).length() - 1),position));
 
     Gtk::SeparatorMenuItem * sep = Gtk::manage( new Gtk::SeparatorMenuItem());
     MenuArray[position]->attach(*sep, 0 ,4, entry++, entry+1);
@@ -62,9 +60,9 @@
           subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
 
           subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring>(
+            sigc::bind<Glib::ustring,guint>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                 (path + refFileInfo->get_name())));
+                 (path + refFileInfo->get_name()), position));
 
           SubSubCount = CountSubdir(path + refFileInfo->get_name());
           }
@@ -73,9 +71,9 @@
           subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
 
           subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring>(
+            sigc::bind<Glib::ustring,guint>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                (path + ext.substr(1) + slash + refFileInfo->get_name())));
+                (path + ext.substr(1) + slash + refFileInfo->get_name()), position));
 
           SubSubCount = CountSubdir(path + ext + slash + refFileInfo->get_name());
           }
@@ -164,7 +162,7 @@
 //Decides the action of the menuItem, more sophisticated than the activate signal. 
 //its comment should always be somewhere.
 
-bool Darimasen::DarimasenMenu::DaMenuSelect(GdkEventButton* event, const Glib::ustring path){
+bool Darimasen::DarimasenMenu::DaMenuSelect(GdkEventButton* event, const Glib::ustring path, guint pos){
 
   if ((event->type == GDK_BUTTON_PRESS) && (event->button == 2) ) //middle
   {
@@ -173,7 +171,9 @@
   }
   if ((event->type == GDK_BUTTON_PRESS) && (event->button == 1) ) //left
   {
-  parent->ChangeCurrentPath(path);
+
+ // parent->history[pos].push(path);
+  parent->ChangeCurrentPath(path,true);
   return true;
   }
   if ((event->type == GDK_BUTTON_PRESS) && (event->button == 3) ) //right
@@ -227,7 +227,8 @@
 /**********************/
 
 // parses the path, builds the menu bar. 
-Darimasen::DarimasenMenu::DarimasenMenu(const Glib::ustring path, Darimasen& Myparent){
+Darimasen::DarimasenMenu::DarimasenMenu(const Glib::ustring & path, Darimasen& Myparent, guint pos){
+
   depth = 0;
   extended = -1;
 //usingSpecial = false;
@@ -302,9 +303,9 @@
           subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
 
           subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring>(
+            sigc::bind<Glib::ustring,guint>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                 "/"));
+                 "/",pos));
 
 
 
@@ -315,9 +316,9 @@
           subdir2->set_events(Gdk::BUTTON_RELEASE_MASK);
 
           subdir2->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring>(
+            sigc::bind<Glib::ustring,guint>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                getenv("HOME")));
+                getenv("HOME"),pos));
 
     Gtk::SeparatorMenuItem * sep = Gtk::manage( new Gtk::SeparatorMenuItem());
     MenuArray[0]->attach(*sep, 0 ,1, 2, 3);
@@ -374,9 +375,11 @@
 
 // this is for a signal handler.
 void Darimasen::tabberSwitched(GtkNotebookPage* sig, guint n){
+
+
   DarimasenMenuContainer->remove();
 
-  DaMenu = Gtk::manage(new DarimasenMenu(history[n].top(), *this));
+  DaMenu = Gtk::manage(new DarimasenMenu(history[n].top(), *this, n));
   DarimasenMenuContainer->add(*DaMenu);
 
   if (history[n].size() == 1)
@@ -400,11 +403,16 @@
     new Gtk::Image("/usr/share/icons/hicolor/16x16/stock/generic/stock_close.png"));
   xed->show();
 
-  Gtk::Label * tabNum = Gtk::manage(new Gtk::Label(
+  Gtk::Label * tabNum;
 
-  history[pos].top()
-//path.substr(path.rfind(slash, path.length() -2)+1) + "  "
-));
+if ( history[pos].top() == slash)
+tabNum = Gtk::manage(new Gtk::Label(slash + " "));
+else if ( history[pos].top() == (getenv("HOME") + slash))
+tabNum = Gtk::manage(new Gtk::Label("~ "));
+else
+  tabNum = Gtk::manage(new Gtk::Label(history[pos].top().substr(history[pos].top().rfind(slash,history[pos].top().length() - 2  ) + 1)));
+
+
   Gtk::HBox * arrangement= Gtk::manage(new Gtk::HBox()) ;
   Gtk::Button * closeButton = Gtk::manage( new Gtk::Button());
 
@@ -430,7 +438,7 @@
   MainEventBox->show();
 
   DaIconModes * foo;
-  foo = new DaIconModes(  history[pos].top(), *this);
+  foo = new DaIconModes(  pos, *this);
 
 
 
@@ -455,26 +463,37 @@
 /**********************/
 
 // changing directories actually is making a new tab to substitute for the old one.
-void Darimasen::ChangeCurrentPath(Glib::ustring pathin){
+void Darimasen::ChangeCurrentPath(Glib::ustring pathin, bool addPath){
   guint nth = Tabber->get_current_page();
 
 
+if (addPath){
+    if (pathin.substr(pathin.length()-1) != "/")
+      history[nth].push(pathin + slash);
+    else
+      history[nth].push(pathin); 
+}
+
   //there is a circumstance that only the menu should be rebuilt...
-  if( pathin !=  history[nth].top()){
+/*  if( pathin !=  history[nth].top()){
     if (pathin.substr(pathin.length()-1) != "/")
       history[nth].push(pathin + slash);
     else
-      history[nth].push(pathin);
+      history[nth].push(pathin); */
+
+if ( history[nth].size() > 1)
     BackButton->set_sensitive(true);
+else
+    BackButton->set_sensitive(false);
 
     Tabber->remove_page(nth);
     addTab(nth);
     Tabber->set_current_page(nth);
-    }
+  //  }
 
 
   DarimasenMenuContainer->remove();
-  DaMenu = Gtk::manage( new DarimasenMenu(history[nth].top(), *this));
+  DaMenu = Gtk::manage( new DarimasenMenu( history[nth].top(), *this,nth));
   DarimasenMenuContainer->add(*DaMenu);
 
   }
@@ -586,7 +605,7 @@
   HideTreePane.pack1(TreeScroller, Gtk::SHRINK);
 
   Tabber = Gtk::manage(new Gtk::Notebook);
-  Tabber->signal_switch_page().connect(sigc::mem_fun(*this, &Darimasen::tabberSwitched), true);
+  Tabber->signal_switch_page().connect(sigc::mem_fun(*this, &Darimasen::tabberSwitched));
   Tabber->set_show_border(false);
   Tabber->show();
 
@@ -662,24 +681,26 @@
 
 
   DarimasenMenuContainer->remove();
-  DaMenu = Gtk::manage( new DarimasenMenu(history[Tabber->get_current_page()].top(), *this));
+  DaMenu = Gtk::manage( new DarimasenMenu(history[Tabber->get_current_page()].top(), *this, Tabber->get_current_page()));
   DarimasenMenuContainer->add(*DaMenu);
 
 
 
 for( int i = 0; IconModeList.size() > i; i++)
-  IconModeList[i]->SwitchHidden();
+  IconModeList[i]->SwitchHidden(i);
 
   }
 
 /**********************/
 
 void Darimasen::fBack(){
+  //history[Tabber->get_current_page()].pop();
+  //Glib::ustring tmp = history[Tabber->get_current_page()].top();
   history[Tabber->get_current_page()].pop();
-  Glib::ustring tmp = history[Tabber->get_current_page()].top();
-  history[Tabber->get_current_page()].pop();
-  ChangeCurrentPath(tmp);
 
+
+  ChangeCurrentPath(history[Tabber->get_current_page()].top(),false);
+
   if (history[Tabber->get_current_page()].size() == 1)
     BackButton->set_sensitive(false);
  }

Modified: trunk/src/darimasen.h
===================================================================
--- trunk/src/darimasen.h	2005-04-04 06:03:32 UTC (rev 46)
+++ trunk/src/darimasen.h	2005-04-05 04:26:24 UTC (rev 47)
@@ -105,7 +105,7 @@
     void offClick();
 
     Glib::ustring CountSubdir(const Glib::ustring&);
-    bool DaMenuSelect(GdkEventButton*, const Glib::ustring);
+    bool DaMenuSelect(GdkEventButton*, const Glib::ustring,guint);
  
 
  //    void on_popup_menu_position(int& x, int& y, bool& push_in);
@@ -117,7 +117,7 @@
   public:
 short extended;
     void signal_deactivate ();
-    DarimasenMenu(const Glib::ustring, Darimasen&);
+    DarimasenMenu(const Glib::ustring&, Darimasen&, guint);
     ~DarimasenMenu();
     };
 
@@ -133,14 +133,14 @@
   Gtk::Statusbar Info;
 
 
-  std::vector< std::stack<Glib::ustring> > history;
+
   Gtk::ToolButton * BackButton;
 
   void fNewTab();
   void newTab(Glib::ustring);
   void tabberSwitched(GtkNotebookPage*, guint);
   void addTab(guint);
-  void ChangeCurrentPath(Glib::ustring path);
+  void ChangeCurrentPath(Glib::ustring path, bool);
   void removeTab(guint);
   void fBack();
   void fQuit();
@@ -157,6 +157,7 @@
   ~Darimasen();
   Gtk::CheckMenuItem * optShowHidden;
   void set_message(Glib::ustring);
+  std::vector< std::stack<Glib::ustring> > history;
   };
 
 /**********************/

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-04 06:03:32 UTC (rev 46)
+++ trunk/src/iconmodes.cpp	2005-04-05 04:26:24 UTC (rev 47)
@@ -5,12 +5,17 @@
 
 /**********************/
 
-DaIconModes::DaIconModes(Glib::ustring path,  Darimasen& myParent) {                        
+DaIconModes::DaIconModes(guint pos, Darimasen& myParent) {    
+
+  parent = &myParent;
+
+position = pos;
+
 lastclick = 0;
   filesAtPath = 0;
   try{
     Gnome::Vfs::DirectoryHandle handle;
-    handle.open(path, Gnome::Vfs::FILE_INFO_DEFAULT);
+    handle.open((parent->history[position].top()), Gnome::Vfs::FILE_INFO_DEFAULT);
     bool file_exists = true;
     while(file_exists){
       handle.read_next(file_exists);
@@ -18,10 +23,7 @@
       }
     }
   catch(const Gnome::Vfs::exception&){std::cout << "Miscount?\n";}
-
-parent = &myParent;
 
-  fullPath = path;
 
   iconmode = 0;
 
@@ -40,7 +42,7 @@
         // Call on_visit() for each file.
         // The options specify that we want to visit the files at input_uri_string,
         // get the mime type the fast way and protect against loops.
-      Gnome::Vfs::DirectoryHandle::visit(fullPath, Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
+      Gnome::Vfs::DirectoryHandle::visit( parent->history[position].top(), Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
                                              Gnome::Vfs::FILE_INFO_FORCE_FAST_MIME_TYPE |
                                              Gnome::Vfs::FILE_INFO_FOLLOW_LINKS ,
                                              Gnome::Vfs::DIRECTORY_VISIT_LOOPCHECK,
@@ -88,7 +90,7 @@
 
 switch(iconmode){
 case 0: {
-Sidecon * tempPathS = new Sidecon(fullPath, info, *this);
+Sidecon * tempPathS = new Sidecon( parent->history[position].top(), info, *this);
       tempPathS->show();
       sideconContainer[slotsUsed]->add(*tempPathS);
 	}
@@ -317,7 +319,7 @@
   Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
   
   try{
-    read_handle.open(fullPath + file, Gnome::Vfs::OPEN_READ);
+    read_handle.open( parent->history[position].top() + file, Gnome::Vfs::OPEN_READ);
     info = read_handle.get_file_info(
       Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
       Gnome::Vfs::FILE_INFO_FORCE_SLOW_MIME_TYPE );
@@ -334,7 +336,7 @@
     exec += info->get_mime_type().replace(info->get_mime_type().find("/"),1,"_");
     exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
 
-    exec += " \""  + fullPath + file + "\"";
+    exec += " \""  + parent->history[position].top() + file + "\"";
     Glib::spawn_command_line_async(exec);
 
     parent->set_message(exec + " was run.");
@@ -348,7 +350,7 @@
   try{
     exec = exec.substr(0, exec.rfind("_"));
     exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
-    exec += " \""  + fullPath + file + "\"";
+    exec += " \""  + parent->history[position].top() + file + "\"";
     Glib::spawn_command_line_async(exec);
 
     parent->set_message(exec + " was run.");
@@ -358,8 +360,8 @@
     }
 
   if (Gnome::Vfs::Mime::can_be_executable(info->get_mime_type())){
-    parent->set_message( "Running " +fullPath + file);
-    Glib::spawn_command_line_async(fullPath + file);
+    parent->set_message( "Running " + parent->history[position].top()  + file);
+    Glib::spawn_command_line_async( parent->history[position].top()  + file);
     return;
     }
   else {
@@ -379,7 +381,7 @@
     {
       Glib::ustring exec = getenv("HOME");
       exec += "/Choices/MIME-types/text_plain";
-      exec += " \""  + fullPath + file + "\"";
+      exec += " \""  + parent->history[position].top()  + file + "\"";
       Glib::spawn_command_line_async(exec);
     parent->set_message(exec + " was opened as a text file.");
       return;
@@ -406,7 +408,7 @@
   Glib::ustring exec_mimetype;
 
   try {
-    read_handle.open(fullPath + file, Gnome::Vfs::OPEN_READ);
+    read_handle.open( parent->history[position].top() + file, Gnome::Vfs::OPEN_READ);
     info = read_handle.get_file_info(
         Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
         Gnome::Vfs::FILE_INFO_FORCE_SLOW_MIME_TYPE );
@@ -684,11 +686,11 @@
   Glib::RefPtr<Gnome::Vfs::FileInfo> info;
 
   try {
-    read_handle.open(fullPath + file, Gnome::Vfs::OPEN_READ);
+    read_handle.open( parent->history[position].top() + file, Gnome::Vfs::OPEN_READ);
     info = read_handle.get_file_info(Gnome::Vfs::FILE_INFO_GET_ACCESS_RIGHTS);
 
     SetPermissionsDialogue * setPermissions;
-    setPermissions = new SetPermissionsDialogue(info,fullPath);
+    setPermissions = new SetPermissionsDialogue(info,parent->history[position].top());
     setPermissions->show();
     }
   catch(const Gnome::Vfs::exception& ex) {
@@ -873,9 +875,9 @@
 
 /**********************/
 
- void DaIconModes::SwitchHidden(){
+ void DaIconModes::SwitchHidden(guint pos){
 
-
+position = pos;
 if (parent->optShowHidden->get_active())
     parent->set_message("Showing Hidden Files");
 else

Modified: trunk/src/iconmodes.h
===================================================================
--- trunk/src/iconmodes.h	2005-04-04 06:03:32 UTC (rev 46)
+++ trunk/src/iconmodes.h	2005-04-05 04:26:24 UTC (rev 47)
@@ -82,34 +82,38 @@
 
   class Darimasen * parent;
 
- int * hidden;
 
+
   void RunFile(const Glib::ustring);
   void SetRunAction(const Glib::ustring);
   void SetPermissions(const Glib::ustring);
-
   bool on_eventbox_button_press(GdkEventButton*, const Glib::ustring);
   void on_size_allocate(Gtk::Allocation&);
   void redraw();
   bool addEntry(const Glib::ustring&, const Glib::RefPtr<const Gnome::Vfs::FileInfo>&, bool, bool&);
   Glib::RefPtr<Gdk::Pixbuf> getIcon(Glib::ustring, guint);
 
-
-  Glib::ustring fullPath;
-  int filesAtPath;
-  unsigned short iconmode;
-  //bool showHidden;
+
+
   Gtk::EventBox ** sideconContainer;
-  int slotsUsed;
-  int IconsHigh;
+
   Gtk::Menu m_Menu_Popup;
-guint32 lastclick;
+
+
+  unsigned short iconmode;
+  guint32 lastclick;
+  guint slotsUsed;
+  guint IconsHigh;
+  guint position;
+  guint filesAtPath;
+  int * hidden;
+
 
 public:
   ~DaIconModes();
-  DaIconModes(Glib::ustring, Darimasen&);
+  DaIconModes(guint, Darimasen&);
 
-  void SwitchHidden();
+  void SwitchHidden(guint);
   };
 
 /**********************/



From no_reply at svn.berlios.de  Wed Apr  6 07:22:03 2005
From: no_reply at svn.berlios.de (no_reply at svn.berlios.de)
Date: Wed, 6 Apr 2005 07:22:03 +0200
Subject: [Darimasen-svn] r48 - in trunk: . src
Message-ID: <200504060522.j365M388014834@sheep.berlios.de>

Author: sudrien
Date: 2005-04-06 07:21:35 +0200 (Wed, 06 Apr 2005)
New Revision: 48

Modified:
   trunk/TODO
   trunk/src/darimasen.cpp
   trunk/src/darimasen.h
Log:
Menus of * depth

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2005-04-05 04:26:24 UTC (rev 47)
+++ trunk/TODO	2005-04-06 05:21:35 UTC (rev 48)
@@ -2,7 +2,6 @@
 
 Must address:
 
-getting submenus to popup in the correct position
 resetting menus where subsubdirs have been used
 
 

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-05 04:26:24 UTC (rev 47)
+++ trunk/src/darimasen.cpp	2005-04-06 05:21:35 UTC (rev 48)
@@ -26,9 +26,9 @@
           subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
 
           subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint>(
+            sigc::bind<Glib::ustring,guint,bool>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                 (path + menulevel[position]).substr(0, (path + menulevel[position]).length() - 1),position));
+                 (path + menulevel[position]).substr(0, (path + menulevel[position]).length() - 1),position,true));
 
     Gtk::SeparatorMenuItem * sep = Gtk::manage( new Gtk::SeparatorMenuItem());
     MenuArray[position]->attach(*sep, 0 ,4, entry++, entry+1);
@@ -60,20 +60,20 @@
           subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
 
           subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint>(
+            sigc::bind<Glib::ustring,guint,bool>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                 (path + refFileInfo->get_name()), position));
+                 (path + refFileInfo->get_name()), position,false));
 
           SubSubCount = CountSubdir(path + refFileInfo->get_name());
           }
         else{
           subdir = Gtk::manage( new Gtk::MenuItem(ext + slash + refFileInfo->get_name() + slash + " "));
-          subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
 
+
           subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint>(
+            sigc::bind<Glib::ustring,guint,bool>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                (path + ext.substr(1) + slash + refFileInfo->get_name()), position));
+                (path + ext.substr(1) + slash + refFileInfo->get_name()), position,false));
 
           SubSubCount = CountSubdir(path + ext + slash + refFileInfo->get_name());
           }
@@ -84,7 +84,8 @@
           Gtk::MenuItem * subsubdir = Gtk::manage( new Gtk::MenuItem(*SubSubLabel));
           subsubdir->set_right_justified();
 
-          subsubdir->signal_activate().connect(
+
+          subsubdir->signal_button_release_event().connect(
             sigc::bind<int, Glib::ustring, Glib::ustring>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::SpecialMenuForPath),
                 position, path, ext+ slash + refFileInfo->get_name()));
@@ -102,67 +103,53 @@
       }
     }
   catch(const Gnome::Vfs::exception& ex){}
+
+
   }
 
 /**********************/
 
 // the function called for sub-sub-directories - when an arrow is selected in another menu. 
-void Darimasen::DarimasenMenu::SpecialMenuForPath(
+bool Darimasen::DarimasenMenu::SpecialMenuForPath(GdkEventButton* event,
        int position,
        Glib::ustring path,
        Glib::ustring ext){
 
-MenuArray[position]->imExtended = true;
-    extended = position; 
-  std::cout << extended << "/n";
+  extended = position; 
 
-  MenuItemArray[position]->remove_submenu();
-  delete MenuArray[position];
-  MenuArray[position] = Gtk::manage( new DirectoryMenu(*this));
+ MenuItemArray[position]->remove_submenu();
+ delete MenuArray[position];
+ MenuArray[position] =  new DirectoryMenu(*this);
 
-
-
   MenuItemArray[position]->set_submenu(*MenuArray[position]);
   MenuForPath(position, path, ext);
 
+  MenuItemArray[position]->select();
 
+  return true;
 
- // MenuArray[position]->signal_deactivate().connect(
- //   sigc::bind<guint, Glib::ustring>(sigc::mem_fun(*this, &Darimasen::DarimasenMenu::offClick),position, path) );
-
-
- // MenuArray[position]->popup( *this,  *MenuItemArray[position], sigc::mem_fun(*this,& Darimasen::DarimasenMenu::on_popup_menu_position), 1, gtk_get_current_event_time());
-  MenuArray[position]->popup( 1, gtk_get_current_event_time());
-
   }
 
-/**********************
-
-void Darimasen::DarimasenMenu::on_popup_menu_position(int& x, int& y, bool& push_in){
-x = 200;
-y = 200;
-push_in = true;
-}
-
-
 /**********************/
 
 void Darimasen::DarimasenMenu::offClick(){
-
+if( extended != -1 ){
+std::cout << extended << "\n";
   MenuItemArray[extended]->remove_submenu();
   delete MenuArray[extended];
-  MenuArray[extended] = Gtk::manage( new DirectoryMenu(*this));
+  MenuArray[extended] =  new DirectoryMenu(*this);
   MenuItemArray[extended]->set_submenu(*MenuArray[extended]);
   MenuForPath(extended, parent->history[extended].top() , "");
 extended = -1;
 }
+}
 
 /**********************/
 
 //Decides the action of the menuItem, more sophisticated than the activate signal. 
 //its comment should always be somewhere.
 
-bool Darimasen::DarimasenMenu::DaMenuSelect(GdkEventButton* event, const Glib::ustring path, guint pos){
+bool Darimasen::DarimasenMenu::DaMenuSelect(GdkEventButton* event, const Glib::ustring path, guint pos, bool first){
 
   if ((event->type == GDK_BUTTON_PRESS) && (event->button == 2) ) //middle
   {
@@ -171,9 +158,7 @@
   }
   if ((event->type == GDK_BUTTON_PRESS) && (event->button == 1) ) //left
   {
-
- // parent->history[pos].push(path);
-  parent->ChangeCurrentPath(path,true);
+  parent->ChangeCurrentPath(path,true,first);
   return true;
   }
   if ((event->type == GDK_BUTTON_PRESS) && (event->button == 3) ) //right
@@ -217,7 +202,7 @@
 
 }
 
-/**********************/
+/**********************
 
 void  Darimasen::DarimasenMenu::signal_deactivate (){
 std::cout << "on_unmap_event(GdkEventAny* event)\n";
@@ -231,8 +216,7 @@
 
   depth = 0;
   extended = -1;
-//usingSpecial = false;
-  //showHidden = false;
+
   Glib::ustring shortpath = path; //home = getenv("HOME");
   parent = &Myparent;
   
@@ -303,9 +287,9 @@
           subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
 
           subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint>(
+            sigc::bind<Glib::ustring,guint,bool>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                 "/",pos));
+                 "/",pos,false));
 
 
 
@@ -316,9 +300,9 @@
           subdir2->set_events(Gdk::BUTTON_RELEASE_MASK);
 
           subdir2->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint>(
+            sigc::bind<Glib::ustring,guint,bool>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                getenv("HOME"),pos));
+                getenv("HOME"),pos,false));
 
     Gtk::SeparatorMenuItem * sep = Gtk::manage( new Gtk::SeparatorMenuItem());
     MenuArray[0]->attach(*sep, 0 ,1, 2, 3);
@@ -326,10 +310,12 @@
 
     Gtk::MenuItem * subdir3 = Gtk::manage( new Gtk::MenuItem("Add a location to this list"));
     MenuArray[0]->attach(*subdir3, 0 ,1, 3, 4);
-  subdir3->set_sensitive(false);
+    subdir3->set_sensitive(false);
     subdir3->show();
 
+
   show();
+
   }
 
 /**********************/
@@ -440,8 +426,6 @@
   DaIconModes * foo;
   foo = new DaIconModes(  pos, *this);
 
-
-
   if ( IconModeList.size() == pos ){
     IconModeList.push_back(foo);
     }
@@ -463,35 +447,27 @@
 /**********************/
 
 // changing directories actually is making a new tab to substitute for the old one.
-void Darimasen::ChangeCurrentPath(Glib::ustring pathin, bool addPath){
+void Darimasen::ChangeCurrentPath(Glib::ustring pathin, bool addPath, bool menuOnly){
   guint nth = Tabber->get_current_page();
 
-
-if (addPath){
+  if (addPath && !menuOnly){
     if (pathin.substr(pathin.length()-1) != "/")
       history[nth].push(pathin + slash);
     else
       history[nth].push(pathin); 
-}
+    }
 
-  //there is a circumstance that only the menu should be rebuilt...
-/*  if( pathin !=  history[nth].top()){
-    if (pathin.substr(pathin.length()-1) != "/")
-      history[nth].push(pathin + slash);
+  if  (!menuOnly){
+    if ( history[nth].size() > 1)
+      BackButton->set_sensitive(true);
     else
-      history[nth].push(pathin); */
+      BackButton->set_sensitive(false);
 
-if ( history[nth].size() > 1)
-    BackButton->set_sensitive(true);
-else
-    BackButton->set_sensitive(false);
+      Tabber->remove_page(nth);
+      addTab(nth);
+      Tabber->set_current_page(nth);
+    }
 
-    Tabber->remove_page(nth);
-    addTab(nth);
-    Tabber->set_current_page(nth);
-  //  }
-
-
   DarimasenMenuContainer->remove();
   DaMenu = Gtk::manage( new DarimasenMenu( history[nth].top(), *this,nth));
   DarimasenMenuContainer->add(*DaMenu);
@@ -624,8 +600,6 @@
 
     addTab(Tabber->get_n_pages());
     }
-
-
  }
 
 /**********************/
@@ -645,32 +619,22 @@
 
 void Darimasen::fAbout(){
 
-
-
   Glib::RefPtr<Gdk::Pixbuf> loader=  
     Gdk::Pixbuf::create_from_file( 
       ((Glib::ustring)DATADIR + (Glib::ustring)"/pixmaps/darimasenInfo.svg" ));
 
-
-
    Gtk::Dialog aboutDarimasen;
 
    Gtk::Button * closebutton1 = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-close")));
    Gtk::Image * image1 = Gtk::manage(new class Gtk::Image(loader));
-
-
    aboutDarimasen.get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
-
-
    aboutDarimasen.get_vbox()->set_homogeneous(false);
    aboutDarimasen.get_vbox()->set_spacing(10);
    aboutDarimasen.get_vbox()->pack_start(*image1);
-
    aboutDarimasen.set_title("About Darimasen");
    aboutDarimasen.set_modal(true);
    aboutDarimasen.set_resizable(false);
    aboutDarimasen.add_action_widget(*closebutton1, -7);
-
   aboutDarimasen.show_all_children();
   aboutDarimasen.run();
   }
@@ -694,16 +658,13 @@
 /**********************/
 
 void Darimasen::fBack(){
-  //history[Tabber->get_current_page()].pop();
-  //Glib::ustring tmp = history[Tabber->get_current_page()].top();
   history[Tabber->get_current_page()].pop();
 
+  ChangeCurrentPath(history[Tabber->get_current_page()].top(),false,false);
 
-  ChangeCurrentPath(history[Tabber->get_current_page()].top(),false);
-
   if (history[Tabber->get_current_page()].size() == 1)
     BackButton->set_sensitive(false);
- }
+  }
 
 /**********************/
 

Modified: trunk/src/darimasen.h
===================================================================
--- trunk/src/darimasen.h	2005-04-05 04:26:24 UTC (rev 47)
+++ trunk/src/darimasen.h	2005-04-06 05:21:35 UTC (rev 48)
@@ -56,66 +56,42 @@
 #include <gtkmm/layout.h>
 
 #include "iconmodes.h"
-//#include <gdkmm/rectangle.h>
+
+
 /**********************/
 
 class Darimasen : public Gtk::Window {
   class DarimasenMenu : public Gtk::MenuBar {
+
     class DirectoryMenu : public Gtk::Menu {
     public:
-
-      bool imExtended;
-      DirectoryMenu(DarimasenMenu&){
-imExtended = false;
+      DirectoryMenu(DarimasenMenu& in ){
         Gtk::Menu::Menu();
         }
-      DarimasenMenu * parent; 
+      };
 
-      void on_hide(){
 
-      std::cout << "on_hide()\n";
-    //  if (imExtended)
-      //   parent->offClick();
-        Gtk::Widget::on_hide();
-     }
 
-/*
-      void on_size_allocate(Gtk::Allocation&  allocation){
-        std::cout << allocation.get_x() << ", " << allocation.get_y() << ", " << allocation.get_width() << ", " << allocation.get_height() << "\n";
-allocation.set_x (allocation.get_x() - 20);
-        Gtk::Widget::on_size_allocate(allocation);
-        }
-void on_size_request (Requisition* requisition){
-        std::cout << "Req = " << &requisition.x() << ", " << requisition.y() << ", " << requisition.width() << ", " << requisition.height() << "\n";
-}*/
 
-    };
-
     Darimasen * parent;
 
     int depth;
 
-     DirectoryMenu ** MenuArray; 
+    DirectoryMenu ** MenuArray; 
     Gtk::MenuItem ** MenuItemArray;
     Glib::ustring * menulevel;
 
     void MenuForPath(int, Glib::ustring , Glib::ustring); //extension
-    void SpecialMenuForPath(int, Glib::ustring  , Glib::ustring); //extension
+    bool SpecialMenuForPath(GdkEventButton* , int, Glib::ustring  , Glib::ustring); //extension
 
     void offClick();
 
     Glib::ustring CountSubdir(const Glib::ustring&);
-    bool DaMenuSelect(GdkEventButton*, const Glib::ustring,guint);
+    bool DaMenuSelect(GdkEventButton*, const Glib::ustring,guint,bool);
  
-
- //    void on_popup_menu_position(int& x, int& y, bool& push_in);
-
-
-
-
-
   public:
-short extended;
+
+    short extended;
     void signal_deactivate ();
     DarimasenMenu(const Glib::ustring&, Darimasen&, guint);
     ~DarimasenMenu();
@@ -140,7 +116,7 @@
   void newTab(Glib::ustring);
   void tabberSwitched(GtkNotebookPage*, guint);
   void addTab(guint);
-  void ChangeCurrentPath(Glib::ustring path, bool);
+  void ChangeCurrentPath(Glib::ustring path, bool, bool);
   void removeTab(guint);
   void fBack();
   void fQuit();
@@ -153,6 +129,7 @@
 
 
 public:
+
   Darimasen(std::vector<Glib::ustring>);
   ~Darimasen();
   Gtk::CheckMenuItem * optShowHidden;



From darimasen-svn-admin at lists.berlios.de  Fri Apr  8 08:12:48 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Fri, 8 Apr 2005 08:12:48 +0200
Subject: [Darimasen-svn] r49 - in trunk: . pixmaps pixmaps/scalable src
Message-ID: <200504080612.j386CmdK005467@sheep.berlios.de>

Author: sudrien
Date: 2005-04-08 08:12:40 +0200 (Fri, 08 Apr 2005)
New Revision: 49

Added:
   trunk/pixmaps/scalable/darimasen-lila.svg
Modified:
   trunk/TODO
   trunk/darimasen-0.0.7.ebuild
   trunk/darimasen-svn-0.1.ebuild
   trunk/distribute.sh
   trunk/pixmaps/darimasenInfo.svg
   trunk/pixmaps/scalable/Makefile.am
   trunk/src/darimasen.cpp
   trunk/src/darimasen.h
   trunk/src/iconmodes.cpp
   trunk/src/iconmodes.h
Log:
Optimization and Stuff. Valgrind-detected Memory leaks plugged

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2005-04-06 05:21:35 UTC (rev 48)
+++ trunk/TODO	2005-04-08 06:12:40 UTC (rev 49)
@@ -1,23 +1,18 @@
-version 0.0.7: Embetterment by Tab
+version 0.0.7: Embetterment by Tabs
 
 Must address:
 
 resetting menus where subsubdirs have been used
 
 
-
-Would like to address:
-
-limiting DaMenu expansion (preserve window width for long paths) - by shortening menu names
-
-Folder context menus.
-
-
-
 -----------------------------------------------
 version 0.0.8 and onwards
 -----------------------------------------------
 
+limiting DaMenu expansion (preserve window width for long paths) - by shortening menu names
+
+Full Folder & Icon context menus.
+
 --
 Detail view, how to handle icon mode switching now
 Ron <Rds> mentioned that Rox will be moving for ~/Choices to ~/.choices - should probably support that, or check both locations.

Modified: trunk/darimasen-0.0.7.ebuild
===================================================================
--- trunk/darimasen-0.0.7.ebuild	2005-04-06 05:21:35 UTC (rev 48)
+++ trunk/darimasen-0.0.7.ebuild	2005-04-08 06:12:40 UTC (rev 49)
@@ -1,3 +1,8 @@
+# Copyright 1999-2004 Gentoo Technologies, Inc.
+# Distributed under the terms of the GNU General Public License v2
+# $Header: $
+
+
 DESCRIPTION="A file manager with menu-based navigation"
 HOMEPAGE="http://darimasen.berlios.de/"
 SRC_URI="http://download.berlios.de/darimasen/${P}.tar.bz2"
@@ -7,6 +12,7 @@
 KEYWORDS="x86"
 
 IUSE=""
+SLOT="0"
 
 DEPEND=">=dev-libs/libsigc++-2.0.3
         >=dev-cpp/gtkmm-2.4.11

Modified: trunk/darimasen-svn-0.1.ebuild
===================================================================
--- trunk/darimasen-svn-0.1.ebuild	2005-04-06 05:21:35 UTC (rev 48)
+++ trunk/darimasen-svn-0.1.ebuild	2005-04-08 06:12:40 UTC (rev 49)
@@ -1,4 +1,8 @@
+# Copyright 1999-2004 Gentoo Technologies, Inc.
+# Distributed under the terms of the GNU General Public License v2
+# $Header: $
 
+
 ESVN_REPO_URI="svn://svn.berlios.de/darimasen/trunk"
 ESVN_PROJECT="darimasen"
 ESVN_BOOTSTRAP="autogen.sh"
@@ -12,6 +16,7 @@
 KEYWORDS="~x86"
 
 IUSE=""
+SLOT="0"
 
 DEPEND=">=dev-libs/libsigc++-2.0.3
         >=dev-cpp/gtkmm-2.4.11

Modified: trunk/distribute.sh
===================================================================
--- trunk/distribute.sh	2005-04-06 05:21:35 UTC (rev 48)
+++ trunk/distribute.sh	2005-04-08 06:12:40 UTC (rev 49)
@@ -1,9 +1,9 @@
 #!/bin/sh
 
 cd ..
-mkdir darimasen-0.0.7
-cp -R trunk/* darimasen-0.0.7/
-cd darimasen-0.0.7/
+mkdir darimasen-0.0.6.9
+cp -R trunk/* darimasen-0.0.6.9/
+cd darimasen-0.0.6.9/
 
 rm -Rf .svn/
 rm -Rf src/.svn/
@@ -26,4 +26,4 @@
 
 cd ..
 
-tar -cjvf darimasen-0.0.7.tar.bz2 darimasen-0.0.7/
+tar -cjvf darimasen-0.0.6.9.tar.bz2 darimasen-0.0.6.9/

Modified: trunk/pixmaps/darimasenInfo.svg
===================================================================
--- trunk/pixmaps/darimasenInfo.svg	2005-04-06 05:21:35 UTC (rev 48)
+++ trunk/pixmaps/darimasenInfo.svg	2005-04-08 06:12:40 UTC (rev 49)
@@ -14,6 +14,17 @@
   <defs
      id="defs3">
     <linearGradient
+       id="linearGradient2049">
+      <stop
+         id="stop2051"
+         offset="0.0000000"
+         style="stop-color:#d8d8d8;stop-opacity:1.0000000;" />
+      <stop
+         id="stop2053"
+         offset="1.0000000"
+         style="stop-color:#ffffff;stop-opacity:1.0000000;" />
+    </linearGradient>
+    <linearGradient
        id="linearGradient2439">
       <stop
          id="stop2441"
@@ -33,13 +44,22 @@
        x2="129.66743"
        y1="330.76971"
        x1="129.06119" />
+    <linearGradient
+       gradientUnits="userSpaceOnUse"
+       xlink:href="#linearGradient2049"
+       id="linearGradient2057"
+       y2="194.05247"
+       x2="141.06122"
+       y1="70.903793"
+       x1="29.854227" />
   </defs>
   <rect
-     id="rect2886"
-     style="fill:#ffffff;fill-opacity:1.0000000"
-     y="2.7185509e-14"
+     id="rect1287"
+     style="fill:url(#linearGradient2057);fill-opacity:1.0000000;stroke:#000000;stroke-opacity:1.0000000"
+     y="-5.3400210e-15"
      x="0.0000000"
-     ry="27.970919"
+     ry="0.0000000"
+     rx="0.0000000"
      height="256.00000"
      width="198.00000" />
   <g

Modified: trunk/pixmaps/scalable/Makefile.am
===================================================================
--- trunk/pixmaps/scalable/Makefile.am	2005-04-06 05:21:35 UTC (rev 48)
+++ trunk/pixmaps/scalable/Makefile.am	2005-04-08 06:12:40 UTC (rev 49)
@@ -2,7 +2,8 @@
 	$(datadir)/icons/hicolor/scalable/apps/
 
 appsicon_DATA = \
-	darimasen.svg
+	darimasen.svg \
+	darimasen-lila.svg
 
 EXTRA_DIST = \
 	$(appsicon_DATA)

Added: trunk/pixmaps/scalable/darimasen-lila.svg
===================================================================
--- trunk/pixmaps/scalable/darimasen-lila.svg	2005-04-06 05:21:35 UTC (rev 48)
+++ trunk/pixmaps/scalable/darimasen-lila.svg	2005-04-08 06:12:40 UTC (rev 49)
@@ -0,0 +1,190 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+<svg
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:xlink="http://www.w3.org/1999/xlink"
+   id="svg1275"
+   height="60.000000"
+   width="60.000000"
+   y="0.0000000"
+   x="0.0000000"
+   version="1.0">
+  <defs
+     id="defs3">
+    <linearGradient
+       id="linearGradient3373">
+      <stop
+         id="stop3375"
+         offset="0.0000000"
+         style="stop-color:#ffffff;stop-opacity:1.0000000;" />
+      <stop
+         id="stop3377"
+         offset="1.0000000"
+         style="stop-color:#000000;stop-opacity:0.0000000;" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient2540">
+      <stop
+         id="stop2542"
+         offset="0.0000000"
+         style="stop-color:#ffffff;stop-opacity:1.0000000;" />
+      <stop
+         id="stop2544"
+         offset="1.0000000"
+         style="stop-color:#d9cce6;stop-opacity:1.0000000;" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient2383">
+      <stop
+         id="stop2385"
+         offset="0.0000000"
+         style="stop-color:#d9cce6;stop-opacity:1.0000000;" />
+      <stop
+         id="stop2387"
+         offset="1.0000000"
+         style="stop-color:#73667f;stop-opacity:1.0000000;" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient2439">
+      <stop
+         id="stop2441"
+         offset="0.0000000"
+         style="stop-color:#002200;stop-opacity:1.0000000;" />
+      <stop
+         id="stop2443"
+         offset="1.0000000"
+         style="stop-color:#508350;stop-opacity:1.0000000;" />
+    </linearGradient>
+    <linearGradient
+       gradientTransform="matrix(0.632356,0.000000,0.000000,0.632356,-13.67091,-184.4702)"
+       gradientUnits="userSpaceOnUse"
+       xlink:href="#linearGradient2439"
+       id="linearGradient3207"
+       y2="444.66751"
+       x2="129.66743"
+       y1="330.76971"
+       x1="129.06119" />
+    <linearGradient
+       gradientTransform="matrix(0.995842,0.000000,0.000000,0.995842,56.75726,39.54780)"
+       gradientUnits="userSpaceOnUse"
+       xlink:href="#linearGradient2383"
+       id="linearGradient2434"
+       y2="84.711372"
+       x2="65.857155"
+       y1="-24.629734"
+       x1="-43.934826" />
+    <linearGradient
+       gradientTransform="matrix(0.995842,0.000000,0.000000,0.995842,-1.818949e-3,0.527042)"
+       gradientUnits="userSpaceOnUse"
+       xlink:href="#linearGradient2540"
+       id="linearGradient2546"
+       y2="100.00000"
+       x2="105.50000"
+       y1="12.500000"
+       x1="23.000000" />
+    <linearGradient
+       gradientTransform="matrix(0.995842,0.000000,0.000000,0.995842,56.75726,39.54780)"
+       gradientUnits="userSpaceOnUse"
+       xlink:href="#linearGradient2383"
+       id="linearGradient3319"
+       y2="84.711372"
+       x2="65.857155"
+       y1="-24.629734"
+       x1="-43.934826" />
+    <linearGradient
+       gradientTransform="matrix(0.995842,0.000000,0.000000,0.995842,-1.818949e-3,0.527042)"
+       gradientUnits="userSpaceOnUse"
+       xlink:href="#linearGradient2540"
+       id="linearGradient3321"
+       y2="100.00000"
+       x2="105.50000"
+       y1="12.500000"
+       x1="23.000000" />
+    <linearGradient
+       gradientTransform="matrix(0.995842,0.000000,0.000000,0.995842,0.435683,0.669235)"
+       gradientUnits="userSpaceOnUse"
+       xlink:href="#linearGradient2540"
+       id="linearGradient3325"
+       y2="100.00000"
+       x2="105.50000"
+       y1="12.500000"
+       x1="23.000000" />
+    <linearGradient
+       gradientTransform="matrix(0.995842,0.000000,0.000000,0.995842,57.19476,39.68999)"
+       gradientUnits="userSpaceOnUse"
+       xlink:href="#linearGradient2383"
+       id="linearGradient3328"
+       y2="84.711372"
+       x2="65.857155"
+       y1="-24.629734"
+       x1="-43.934826" />
+    <linearGradient
+       gradientTransform="matrix(0.995842,0.000000,0.000000,0.995842,57.19476,39.68999)"
+       gradientUnits="userSpaceOnUse"
+       xlink:href="#linearGradient2383"
+       id="linearGradient3337"
+       y2="84.711372"
+       x2="65.857155"
+       y1="-24.629734"
+       x1="-43.934826" />
+    <linearGradient
+       gradientTransform="matrix(0.995842,0.000000,0.000000,0.995842,0.435683,0.669235)"
+       gradientUnits="userSpaceOnUse"
+       xlink:href="#linearGradient2540"
+       id="linearGradient3339"
+       y2="100.00000"
+       x2="105.50000"
+       y1="12.500000"
+       x1="23.000000" />
+    <linearGradient
+       gradientUnits="userSpaceOnUse"
+       xlink:href="#linearGradient2540"
+       id="linearGradient3357"
+       y2="49.393398"
+       x2="35.708893"
+       y1="35.781590"
+       x1="20.329321" />
+    <linearGradient
+       gradientTransform="matrix(0.466801,0.000000,0.000000,0.466801,0.204227,0.313705)"
+       gradientUnits="userSpaceOnUse"
+       xlink:href="#linearGradient3373"
+       id="linearGradient3367"
+       y2="100.00000"
+       x2="105.50000"
+       y1="12.500000"
+       x1="23.000000" />
+    <linearGradient
+       gradientTransform="matrix(0.466801,0.000000,0.000000,0.466801,26.81004,18.60468)"
+       gradientUnits="userSpaceOnUse"
+       xlink:href="#linearGradient2383"
+       id="linearGradient3370"
+       y2="84.711372"
+       x2="65.857155"
+       y1="-24.629734"
+       x1="-43.934826" />
+  </defs>
+  <g
+     id="layer2">
+    <path
+       id="path2412"
+       style="fill:#000000;fill-opacity:0.29411766;stroke:none;stroke-opacity:1.0000000"
+       d="M 26.179065,5.0527489 C 18.228633,5.6676369 8.3983028,6.9386038 4.0610123,14.149692 C 2.2477532,17.164373 7.1890211,23.256159 8.7672733,21.833383 C 10.675547,20.113093 10.904130,13.689480 14.997413,11.886026 C 22.519366,8.5719416 30.981587,8.3950016 38.896055,9.2501183 C 44.601340,9.8665447 51.727712,10.441991 55.226157,15.192478 C 57.723469,18.583525 52.416104,21.882536 48.901969,22.153007 C 43.844755,22.542243 39.487009,17.900958 36.071819,16.002010 C 33.992083,14.845615 31.021293,21.005805 27.465103,19.370135 C 24.653919,18.077130 21.845383,13.472294 20.018390,14.039924 C 18.029394,14.657889 20.013432,20.392453 23.044306,21.918860 C 27.138331,23.980690 31.896482,22.604728 36.126702,22.052917 C 40.201249,21.521413 44.093536,26.023970 48.828737,25.263758 C 53.807537,24.464438 60.571543,21.435276 59.718422,15.716293 C 58.821638,9.7046324 51.790683,8.1085977 46.815268,6.6718124 C 40.141446,4.7445692 33.069314,4.5198553 26.179065,5.0527489 z M 7.2030934,24.605000 C !
 4.3676267,25.129939 3.4416672,29.120188 3.4371975,31.723997 C 3.4246358,39.042856 1.6871027,47.619066 6.4621656,53.706985 C 11.541038,60.182237 21.122382,59.564921 28.731149,59.387424 C 36.349154,59.209707 44.377693,60.298660 51.617569,57.507666 C 57.293504,55.319574 60.400069,49.120970 59.958554,43.142062 C 59.632979,38.733147 60.814196,33.644157 58.395197,29.789926 C 56.838971,27.310367 53.965693,29.779678 52.227104,30.946609 C 48.882019,33.191813 45.176515,34.517934 41.119185,34.569696 C 33.878811,34.662066 26.598775,34.361541 19.373236,34.020140 C 14.956795,33.811466 10.181468,31.429332 9.5082011,26.525923 C 9.3652623,25.484905 8.3272614,24.396880 7.2030934,24.605000 z " />
+    <path
+       id="path2426"
+       style="fill:url(#linearGradient3370);fill-opacity:1.0000000;stroke:none;stroke-width:1.8750000;stroke-miterlimit:4.0000000;stroke-opacity:1.0000000"
+       d="M 23.497902,1.1989411 C 15.547472,1.8138293 5.7171409,3.0847957 1.3798507,10.295884 C -0.43340842,13.310565 4.5078598,19.402351 6.0861123,17.979576 C 7.9943893,16.259286 8.2229687,9.8356719 12.316251,8.0322186 C 19.838204,4.7181336 28.300425,4.5411943 36.214893,5.3963108 C 41.920178,6.0127367 49.046546,6.5881827 52.545001,11.338671 C 55.042304,14.729717 49.734938,18.028728 46.220808,18.299200 C 41.163594,18.688436 36.805847,14.047150 33.390657,12.148203 C 31.310922,10.991807 28.340132,17.151998 24.783941,15.516328 C 21.972760,14.223323 19.164221,9.6184864 17.337228,10.186116 C 15.348232,10.804081 17.332271,16.538645 20.363145,18.065052 C 24.457170,20.126882 29.215322,18.750921 33.445540,18.199110 C 37.520087,17.667606 41.412375,22.170163 46.147580,21.409950 C 51.126366,20.610631 57.890377,17.581468 57.037252,11.862485 C 56.140472,5.8508249 49.109522,4.2547903 44.134105,2.8180049 C 37.460284,0.89076183 30.388152,0.66604795 23.497902,1.1989411 z M 4.5219320,20.75119!
 3 C 1.6864653,21.276131 0.76050547,25.266381 0.75603585,27.870191 C 0.74347424,35.189051 -0.99405897,43.765265 3.7810042,49.853176 C 8.8598809,56.328427 18.441221,55.711116 26.049987,55.533620 C 33.667992,55.355907 41.696531,56.444860 48.936404,53.653857 C 54.612338,51.465774 57.718904,45.267163 57.277393,39.288254 C 56.951818,34.879338 58.133035,29.790350 55.714032,25.936118 C 54.157810,23.456560 51.284527,25.925871 49.545947,27.092801 C 46.200861,29.338005 42.495353,30.664127 38.438023,30.715888 C 31.197649,30.808258 23.917612,30.507734 16.692075,30.166332 C 12.275633,29.957657 7.5003109,27.575525 6.8270397,22.672116 C 6.6841009,21.631097 5.6461000,20.543072 4.5219320,20.751193 z " />
+    <path
+       id="path2477"
+       style="fill:url(#linearGradient3367);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000"
+       d="M 27.249517,1.0284941 C 25.997607,1.0697617 24.743993,1.1073741 23.500521,1.2035445 C 15.550090,1.8184327 5.7231076,3.0804909 1.3858174,10.291579 C 0.53937899,11.698847 1.1783610,13.770050 2.2464820,15.440979 C 2.7854160,15.061900 3.1988119,14.456767 3.2092593,13.661300 C 3.2716816,8.9084535 8.7054826,6.1843855 12.734920,4.6024402 C 17.304172,2.8085652 23.136812,3.5369846 27.030704,1.4515326 C 27.213726,1.3535114 27.264190,1.2040006 27.249517,1.0284941 z M 32.573968,12.027496 C 30.987563,12.328948 28.979495,15.157629 26.680603,15.659792 C 28.120398,16.154584 30.241445,16.087350 31.202740,14.974178 C 31.776780,14.309442 32.973984,13.379241 33.959784,12.523472 C 33.776784,12.410758 33.568787,12.243124 33.390870,12.144196 C 33.130903,11.999646 32.861183,11.972918 32.573968,12.027496 z M 52.981927,12.275484 C 53.812346,14.743733 50.974168,16.909394 48.138868,17.804159 C 50.624227,17.822188 53.300490,16.949243 53.769657,14.434439 C 53.949638,13.469692 53.581866,12.7789!
 23 52.981927,12.275484 z M 4.5221375,20.750841 C 1.6866705,21.275780 0.76302299,25.265749 0.75855336,27.869559 C 0.75068628,32.453223 0.066892038,37.530029 0.72937832,42.179931 C 2.6728978,36.038384 0.37993362,28.855371 3.7635856,23.420360 C 4.1824026,22.747633 5.2943190,22.029205 6.1267665,21.363518 C 5.6965825,20.926724 5.1329659,20.637757 4.5221375,20.750841 z M 53.536257,24.908289 C 52.161732,25.128921 50.625887,26.367088 49.539272,27.096419 C 46.194187,29.341623 42.495487,30.662367 38.438157,30.714128 C 34.055120,30.770046 29.656829,30.663855 25.265612,30.509903 C 25.785497,30.711273 26.450571,31.046930 26.782716,31.122579 C 32.959983,32.529522 39.791422,34.342042 45.921562,32.099944 C 49.065699,30.949976 53.045682,28.232390 53.594607,24.908289 C 53.574676,24.911063 53.556249,24.905080 53.536257,24.908289 z " />
+    <path
+       id="path2548"
+       style="fill:none;fill-opacity:1.0000000;stroke:#000000;stroke-width:1.8750000;stroke-miterlimit:4.0000000;stroke-opacity:1.0000000"
+       d="M 23.497902,1.1989411 C 15.547472,1.8138293 5.7171409,3.0847957 1.3798507,10.295884 C -0.43340842,13.310565 4.5078598,19.402351 6.0861123,17.979576 C 7.9943893,16.259286 8.2229687,9.8356719 12.316251,8.0322186 C 19.838204,4.7181336 28.300425,4.5411943 36.214893,5.3963108 C 41.920178,6.0127367 49.046546,6.5881827 52.545001,11.338671 C 55.042304,14.729717 49.734938,18.028728 46.220808,18.299200 C 41.163594,18.688436 36.805847,14.047150 33.390657,12.148203 C 31.310922,10.991807 28.340132,17.151998 24.783941,15.516328 C 21.972760,14.223323 19.164221,9.6184864 17.337228,10.186116 C 15.348232,10.804081 17.332271,16.538645 20.363145,18.065052 C 24.457170,20.126882 29.215322,18.750921 33.445540,18.199110 C 37.520087,17.667606 41.412375,22.170163 46.147580,21.409950 C 51.126366,20.610631 57.890377,17.581468 57.037252,11.862485 C 56.140472,5.8508249 49.109522,4.2547903 44.134105,2.8180049 C 37.460284,0.89076183 30.388152,0.66604795 23.497902,1.1989411 z M 4.5219320,20.75119!
 3 C 1.6864653,21.276131 0.76050547,25.266381 0.75603585,27.870191 C 0.74347424,35.189051 -0.99405897,43.765265 3.7810042,49.853176 C 8.8598809,56.328427 18.441221,55.711116 26.049987,55.533620 C 33.667992,55.355907 41.696531,56.444860 48.936404,53.653857 C 54.612338,51.465774 57.718904,45.267163 57.277393,39.288254 C 56.951818,34.879338 58.133035,29.790350 55.714032,25.936118 C 54.157810,23.456560 51.284527,25.925871 49.545947,27.092801 C 46.200861,29.338005 42.495353,30.664127 38.438023,30.715888 C 31.197649,30.808258 23.917612,30.507734 16.692075,30.166332 C 12.275633,29.957657 7.5003109,27.575525 6.8270397,22.672116 C 6.6841009,21.631097 5.6461000,20.543072 4.5219320,20.751193 z " />
+    <path
+       id="text3341"
+       style="font-size:84.568108;font-style:normal;font-weight:normal;fill:url(#linearGradient3357);fill-opacity:1.0000000;stroke:#000000;stroke-width:0.25000000;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4.0000000;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans"
+       d="M 32.797855,34.794532 C 31.702536,36.153469 28.984254,34.944407 27.221498,35.478656 C 25.080140,35.626904 27.906792,37.170057 29.185157,36.741656 C 28.945206,37.347724 25.049336,37.090916 26.321036,38.230190 C 27.907011,39.015405 28.211262,37.628775 28.371485,39.440564 C 28.639659,40.660493 27.811713,41.110252 28.469128,42.192097 C 28.161499,43.648004 28.225352,45.297279 28.349788,46.762950 C 29.425114,48.348920 31.080829,46.321735 30.073475,45.354421 C 28.957477,44.039882 30.949346,43.108773 32.699430,43.547598 C 35.024339,43.702732 37.620857,43.468006 39.795424,43.846024 C 39.642050,44.899307 39.270145,45.857006 37.723408,46.266698 C 34.709081,47.133974 38.780497,47.699699 39.979856,47.033592 C 42.762051,45.376040 40.541127,42.497824 41.715687,40.402848 C 42.110294,39.115333 42.056645,36.940556 39.404899,37.090962 C 36.799582,37.425068 34.145606,37.586442 31.474284,37.478404 C 34.006119,36.010040 37.558077,36.962336 40.575061,36.798953 C 42.176447,36.943342 44.3!
 15610,36.770967 42.692090,35.568871 C 39.730595,34.750176 35.680526,36.442188 33.336919,34.343643 C 33.080391,34.045984 32.972998,34.730849 32.797855,34.794532 z M 19.627238,34.403604 C 17.450964,34.372566 17.339174,36.517084 17.425209,37.665397 C 17.915789,40.688918 17.621478,43.726087 17.858860,46.755431 C 19.586114,48.062586 20.218286,45.979461 19.823967,44.990085 C 19.889668,42.149115 19.479544,39.190579 19.822520,36.425906 C 20.975441,36.142140 23.086926,36.145152 23.966816,36.365763 C 23.396545,37.761657 20.342005,38.351653 20.744679,39.876599 C 22.051142,40.657376 25.056005,40.918176 24.650298,42.492811 C 23.056939,42.825923 20.973444,44.436523 23.933980,44.298257 C 27.390709,44.285453 27.508314,40.556552 24.411622,39.974331 C 22.349588,39.467790 24.083653,38.173806 25.040861,37.583654 C 26.202526,36.891593 26.828178,35.104896 24.682845,35.012549 C 22.914247,35.207254 21.196714,34.900089 19.627238,34.403604 z M 35.965746,38.726367 C 37.054012,38.904700 40.911052,38.3!
 85036 39.459706,39.692880 C 37.739329,40.097324 35.458524,39.6!
 43977 33
.524735,39.906670 C 32.069766,39.913824 29.460958,39.995934 29.879489,39.019564 C 31.813327,38.560226 33.952741,38.851847 35.965746,38.726367 z M 34.577083,41.094491 C 36.314200,41.257916 38.316430,40.829920 39.871365,41.417758 C 39.723221,43.142610 36.640561,42.124931 35.076134,42.372526 C 33.331413,42.389152 31.286099,42.743881 29.749302,42.056776 C 29.816883,40.724540 32.731844,41.303714 34.388397,41.099384 L 34.544536,41.094491 L 34.577083,41.094491 z M 31.289853,47.725234 C 30.336126,47.638205 28.971048,47.703303 28.534221,48.581759 C 24.935988,48.579685 21.337758,48.575311 17.739522,48.574751 C 18.174411,50.225352 20.679638,50.104413 22.545603,49.912927 C 25.042074,49.959186 27.610367,49.805200 30.014637,50.086825 C 33.670253,49.557318 37.463789,50.128731 41.184088,49.942999 C 40.746802,48.323089 38.292308,48.411214 36.453949,48.612340 C 34.059256,48.773340 32.745986,48.527565 31.886544,47.604948 C 31.689203,47.648621 31.374795,47.422904 31.289853,47.725234 z M 31.2356!
 07,48.589787 C 30.152026,48.848337 30.464395,47.971323 31.235607,48.589787 z M 29.261099,50.830105 C 24.592524,51.425062 19.723764,50.742865 14.973042,51.040605 C 16.015103,52.319166 18.037138,52.642263 19.996102,52.401336 C 27.635933,52.477226 35.279279,52.398280 42.919918,52.356228 C 43.477983,50.996925 41.353059,50.809825 39.904234,50.949984 C 36.465214,50.798689 32.852512,51.578366 29.554021,50.694784 L 29.265162,50.828229 L 29.261099,50.830105 z " />
+  </g>
+</svg>

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-06 05:21:35 UTC (rev 48)
+++ trunk/src/darimasen.cpp	2005-04-08 06:12:40 UTC (rev 49)
@@ -25,10 +25,18 @@
 
           subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
 
+    if ( ext != "" ){
           subdir->signal_button_press_event().connect(
             sigc::bind<Glib::ustring,guint,bool>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
                  (path + menulevel[position]).substr(0, (path + menulevel[position]).length() - 1),position,true));
+      }
+    else {
+          subdir->signal_button_press_event().connect(
+            sigc::bind<Glib::ustring,guint,bool>(
+              sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
+                 (path + menulevel[position]).substr(0, (path + menulevel[position]).length() - 1),position,false));
+      }
 
     Gtk::SeparatorMenuItem * sep = Gtk::manage( new Gtk::SeparatorMenuItem());
     MenuArray[position]->attach(*sep, 0 ,4, entry++, entry+1);
@@ -164,9 +172,7 @@
   if ((event->type == GDK_BUTTON_PRESS) && (event->button == 3) ) //right
   {
     Gtk::Menu * m_Menu_Popup = Gtk::manage( new Gtk::Menu);
-    Gtk::Menu::MenuList& menulist = m_Menu_Popup->items();
-
-    menulist.push_back( Gtk::Menu_Helpers::MenuElem("Open In new Tab"));
+    m_Menu_Popup->items().push_back( Gtk::Menu_Helpers::MenuElem("Open In new Tab"));
     m_Menu_Popup->popup(event->button, event->time);
   return true;
    }
@@ -202,13 +208,6 @@
 
 }
 
-/**********************
-
-void  Darimasen::DarimasenMenu::signal_deactivate (){
-std::cout << "on_unmap_event(GdkEventAny* event)\n";
-
-}
-
 /**********************/
 
 // parses the path, builds the menu bar. 
@@ -249,7 +248,7 @@
  
     Glib::ustring subin = CountSubdir(path);
     if ( subin != "0" ){
-      MenuItemArray[depth] =  Gtk::manage(new Gtk::MenuItem( subin + " \342\226\272" ));
+      MenuItemArray[depth] =  new Gtk::MenuItem( subin + " \342\226\272" );
       MenuItemArray[depth]->show();
       MenuItemArray[depth]->set_submenu(*MenuArray[depth]);
       prepend(*MenuItemArray[depth]);
@@ -326,8 +325,12 @@
     delete MenuArray[c];
     }
   delete menulevel;
-  delete MenuArray;
-  delete MenuItemArray;
+
+  for (int i = 0; i <=depth; i++){
+    delete MenuArray[i];
+    delete MenuItemArray[i];
+    }
+  
   }
 
 /**********************/
@@ -365,6 +368,7 @@
 
   DarimasenMenuContainer->remove();
 
+ 
   DaMenu = Gtk::manage(new DarimasenMenu(history[n].top(), *this, n));
   DarimasenMenuContainer->add(*DaMenu);
 
@@ -416,7 +420,7 @@
   arrangement->pack_start(*tabNum);
   arrangement->pack_end(*closeButton);
 
-  Gtk::EventBox * MainEventBox = Gtk::manage(new class Gtk::EventBox);
+  Gtk::EventBox * MainEventBox = new class Gtk::EventBox;
 
   Gdk::Color m_Color;
   m_Color.set_rgb(65535, 65535, 65535);
@@ -428,10 +432,13 @@
 
   if ( IconModeList.size() == pos ){
     IconModeList.push_back(foo);
+    EventBoxList.push_back(MainEventBox);
     }
   else {
     delete IconModeList[pos];
     IconModeList[pos] = foo;
+    delete EventBoxList[pos];
+    EventBoxList[pos] = MainEventBox;
     }
 
   Gtk::ScrolledWindow * MainScroller = Gtk::manage(new Gtk::ScrolledWindow);
@@ -490,6 +497,9 @@
   history.erase(history.begin()+pos,history.begin()+pos+1 );
   delete IconModeList[pos];
   IconModeList.erase(IconModeList.begin()+pos,IconModeList.begin()+pos+1 );
+
+  delete EventBoxList[pos];
+  EventBoxList.erase(EventBoxList.begin()+pos,EventBoxList.begin()+pos+1 );
   }
 
 
@@ -498,7 +508,7 @@
 Darimasen::Darimasen(std::vector<Glib::ustring> paths){
   set_title("Darimasen");
   set_default_size(500, 330);
-
+  set_icon_from_file( (Glib::ustring)DATADIR + (Glib::ustring)"/icons/hicolor/48x48/apps/darimasen.png"  );
   add(VerticalOrganizer);
   VerticalOrganizer.show();
 
@@ -508,30 +518,32 @@
   TopBar.set_toolbar_style(Gtk::TOOLBAR_ICONS); 
 
 
-  Gtk::ToolItem * CompactMenuContainer = Gtk::manage(new Gtk::ToolItem);
+  CompactMenuContainer = new Gtk::ToolItem;
   TopBar.append(*CompactMenuContainer);
   CompactMenuContainer->show();
 
-  Gtk::MenuBar * CompactMenu = Gtk::manage(new Gtk::MenuBar);
-  Gtk::Menu * m_Menu_File = Gtk::manage(new Gtk::Menu);
-  Gtk::Menu::MenuList& menulist = m_Menu_File->items();
+  CompactMenu = new Gtk::MenuBar;
+  m_Menu_File = new Gtk::Menu;
 
+
+
   CompactMenu->items().push_back( Gtk::Menu_Helpers::MenuElem("\342\226\274", *m_Menu_File) );
 
   // glade-- told me to do it....
-  menulist.push_back(Gtk::Menu_Helpers::CheckMenuElem(
+  m_Menu_File->items().push_back(Gtk::Menu_Helpers::CheckMenuElem(
     "Show Hidden",Gtk::AccelKey(GDK_H, Gdk::CONTROL_MASK), sigc::mem_fun(*this, &Darimasen::fShowHidden)));
-  optShowHidden = (Gtk::CheckMenuItem *)&menulist.back();
 
-  menulist.push_back(Gtk::Menu_Helpers::MenuElem(
+  optShowHidden = (Gtk::CheckMenuItem *)&m_Menu_File->items().back();
+
+  m_Menu_File->items().push_back(Gtk::Menu_Helpers::MenuElem(
     "Print history to Terminal",Gtk::AccelKey(GDK_P, Gdk::CONTROL_MASK), sigc::mem_fun(*this, &Darimasen::fPrintHist)));
 
-  menulist.push_back( Gtk::Menu_Helpers::MenuElem("About...",
+  m_Menu_File->items().push_back( Gtk::Menu_Helpers::MenuElem("About...",
     sigc::mem_fun(*this, &Darimasen::fAbout) ) );
 
-  menulist.push_back( Gtk::Menu_Helpers::SeparatorElem() ) ;
+  m_Menu_File->items().push_back( Gtk::Menu_Helpers::SeparatorElem() ) ;
 
-  menulist.push_back( Gtk::Menu_Helpers::StockMenuElem(Gtk::Stock::QUIT,
+  m_Menu_File->items().push_back( Gtk::Menu_Helpers::StockMenuElem(Gtk::Stock::QUIT,
     sigc::mem_fun(*this, &Darimasen::fQuit) ) );
     
   TopBar.set_show_arrow(false);
@@ -539,38 +551,38 @@
   CompactMenu->show();
 
 
-  Gtk::SeparatorToolItem * sep1  = Gtk::manage(new Gtk::SeparatorToolItem);
+  Gtk::SeparatorToolItem * sep1 = new Gtk::SeparatorToolItem;
   TopBar.append(*sep1);
   sep1->show();
 
-  DarimasenMenuContainer = Gtk::manage(new Gtk::ToolItem);
+  DarimasenMenuContainer = new Gtk::ToolItem;
   TopBar.append(*DarimasenMenuContainer);
   DarimasenMenuContainer->set_expand(true);
   DarimasenMenuContainer->show();
 
-  Gtk::SeparatorToolItem * sep2  = Gtk::manage(new Gtk::SeparatorToolItem);
+  Gtk::SeparatorToolItem * sep2  = new Gtk::SeparatorToolItem;
   TopBar.append(*sep2);
   sep2->show();
 
-  BackButton = Gtk::manage(new Gtk::ToolButton(Gtk::StockID("gtk-go-back")));
+  BackButton = new Gtk::ToolButton(Gtk::StockID("gtk-go-back"));
   BackButton->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fBack));
   TopBar.append(*BackButton);
   BackButton->set_sensitive(false);
   BackButton->show();
   
-  Gtk::ToolButton * ChangeIconMode = Gtk::manage(new Gtk::ToolButton(Gtk::StockID("gtk-convert")));
+  ChangeIconMode = new Gtk::ToolButton(Gtk::StockID("gtk-convert"));
   //ChangeIconMode->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fChangeIconMode));
   TopBar.append(*ChangeIconMode);
   ChangeIconMode->set_sensitive(false);
-  ChangeIconMode->show();
+  //ChangeIconMode->show();
    
-  Gtk::ToggleToolButton * ViewTree = Gtk::manage(new Gtk::ToggleToolButton(Gtk::StockID("gtk-index")));
+  ViewTree = new Gtk::ToggleToolButton(Gtk::StockID("gtk-index"));
   //ViewTree->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fViewTree));
   TopBar.append(*ViewTree);
   ViewTree->set_sensitive(false);
-  ViewTree -> show();
+  //ViewTree -> show();
 
-  Gtk::ToolButton * NewTab = Gtk::manage(new Gtk::ToolButton(Gtk::StockID("gtk-new")));
+  NewTab = new Gtk::ToolButton(Gtk::StockID("gtk-new"));
   NewTab->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fNewTab));
   TopBar.append(*NewTab);
   NewTab->show();
@@ -580,7 +592,7 @@
 
   HideTreePane.pack1(TreeScroller, Gtk::SHRINK);
 
-  Tabber = Gtk::manage(new Gtk::Notebook);
+  Tabber = new Gtk::Notebook;
   Tabber->signal_switch_page().connect(sigc::mem_fun(*this, &Darimasen::tabberSwitched));
   Tabber->set_show_border(false);
   Tabber->show();
@@ -611,36 +623,74 @@
 /**********************/
 
 void Darimasen::fQuit(){
+
+  delete Tabber;
+
+ // delete sep1;
+ // delete sep2;
+  delete BackButton;
+  delete ChangeIconMode;
+  delete ViewTree;
+  delete NewTab;
   DarimasenMenuContainer->remove();
+
+  delete DarimasenMenuContainer;
+  delete m_Menu_File;
+  delete CompactMenu;
+  delete CompactMenuContainer;
+
+  for (int i=0; i < IconModeList.size(); i++){
+     delete IconModeList[i];
+     delete EventBoxList[i];
+     }
+
   hide();
   }
 
 /**********************/
 
 void Darimasen::fAbout(){
+  aboutDa about;
+  Gtk::Main::run(about); 
+  }
 
-  Glib::RefPtr<Gdk::Pixbuf> loader=  
-    Gdk::Pixbuf::create_from_file( 
-      ((Glib::ustring)DATADIR + (Glib::ustring)"/pixmaps/darimasenInfo.svg" ));
+/**********************/
 
-   Gtk::Dialog aboutDarimasen;
+bool Darimasen::aboutDa::ch0wned(GdkEventButton*){
+  hide();
+  }
 
-   Gtk::Button * closebutton1 = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-close")));
-   Gtk::Image * image1 = Gtk::manage(new class Gtk::Image(loader));
-   aboutDarimasen.get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
-   aboutDarimasen.get_vbox()->set_homogeneous(false);
-   aboutDarimasen.get_vbox()->set_spacing(10);
-   aboutDarimasen.get_vbox()->pack_start(*image1);
-   aboutDarimasen.set_title("About Darimasen");
-   aboutDarimasen.set_modal(true);
-   aboutDarimasen.set_resizable(false);
-   aboutDarimasen.add_action_widget(*closebutton1, -7);
-  aboutDarimasen.show_all_children();
-  aboutDarimasen.run();
+/**********************/
+
+Darimasen::aboutDa::aboutDa(){
+  image1 = new class Gtk::Image(  Gdk::Pixbuf::create_from_file( 
+    (Glib::ustring)DATADIR + (Glib::ustring)"/pixmaps/darimasenInfo.svg" ) );
+  closer = new Gtk::EventBox;
+  closer->add(*image1);
+  closer->signal_button_press_event().connect(
+    sigc::mem_fun(*this, &Darimasen::aboutDa::ch0wned));
+
+  add(*closer);
+  set_title("About Darimasen");
+  set_modal(true);
+  set_resizable(false);
+  set_decorated (false);
+  set_position(Gtk::WIN_POS_CENTER);
+
+  show_all_children();
   }
 
 /**********************/
 
+Darimasen::aboutDa::~aboutDa(){
+  delete image1;
+  delete closer;
+  }
+
+
+
+/**********************/
+
 void Darimasen::fShowHidden(){
 
 

Modified: trunk/src/darimasen.h
===================================================================
--- trunk/src/darimasen.h	2005-04-06 05:21:35 UTC (rev 48)
+++ trunk/src/darimasen.h	2005-04-08 06:12:40 UTC (rev 49)
@@ -71,8 +71,6 @@
       };
 
 
-
-
     Darimasen * parent;
 
     int depth;
@@ -97,7 +95,14 @@
     ~DarimasenMenu();
     };
 
-
+  class aboutDa : public Gtk::Window {
+    Gtk::Image * image1;
+    Gtk::EventBox * closer;
+    bool ch0wned(GdkEventButton*);
+  public:
+    aboutDa();
+    ~aboutDa();
+    };
   
   Gtk::VBox VerticalOrganizer;
   Gtk::Toolbar TopBar;
@@ -108,10 +113,20 @@
   Gtk::Notebook * Tabber;
   Gtk::Statusbar Info;
 
+  Gtk::ToolItem * CompactMenuContainer;
+  Gtk::MenuBar * CompactMenu;
+  Gtk::Menu * m_Menu_File;
 
+  Gtk::SeparatorToolItem * sep1;
+  Gtk::SeparatorToolItem * sep2;
 
   Gtk::ToolButton * BackButton;
+Gtk::ToolButton * ChangeIconMode;
+ Gtk::ToggleToolButton * ViewTree;
+Gtk::ToolButton * NewTab;
 
+
+
   void fNewTab();
   void newTab(Glib::ustring);
   void tabberSwitched(GtkNotebookPage*, guint);
@@ -126,6 +141,7 @@
 
 
   std::vector< class DaIconModes* > IconModeList;
+  std::vector< class Gtk::EventBox* > EventBoxList;
 
 
 public:
@@ -140,7 +156,3 @@
 /**********************/
 
 #endif //DARIMASEN_H
-
-
-
-

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-06 05:21:35 UTC (rev 48)
+++ trunk/src/iconmodes.cpp	2005-04-08 06:12:40 UTC (rev 49)
@@ -70,8 +70,11 @@
   for(int c = 0; c < filesAtPath; c++){
     delete sideconContainer[c];
     }
-
   delete sideconContainer;
+  delete hidden;
+
+
+  //delete sideconContainer; //well, valgrind --tool=addrcheck said this line was bad.
 }
 }
 /**********************/
@@ -117,130 +120,63 @@
 /**********************/
 
 DaIconModes::Sidecon::Sidecon(
-    Glib::ustring path,
-    const Glib::RefPtr<const Gnome::Vfs::FileInfo>& info,
-    DaIconModes& above){
+      Glib::ustring path,
+      const Glib::RefPtr<const Gnome::Vfs::FileInfo>& info,
+      DaIconModes& above){
 
-
   parent = &above;
   filePath = path + info->get_name();
 
-  Glib::ustring shortnom = info->get_name();
-
   if (info->get_name().length() > 25){
-
     int last = info->get_name().rfind(".");
-
-    if (last != -1){ //fix for the missing extension bug
-      Glib::ustring ext = info->get_name().substr(last);  
-      shortnom = info->get_name().substr(0, 20) + ".." + ext;
+    if (last != -1){
+      FileName = new class Gtk::Label( info->get_name().substr(0, 20) + ".." + info->get_name().substr(last) );
       }
     else {
-      shortnom = info->get_name().substr(0,22) + "...";
+      FileName = new class Gtk::Label( info->get_name().substr(0,22) + "..." );
       }
-
-    }
+    }
+  else {
+  FileName = new class Gtk::Label( info->get_name() );
+  }
                    
-  resize(3,2);
 
 
-Glib::ustring ico;
+//  FileName = new class Gtk::Label(shortnom);
+  FileName->set_alignment(0,0.5);
+  FileName->set_justify(Gtk::JUSTIFY_LEFT);
+  attach(*FileName, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
 
-/*
 
-  try {
-  if(info->get_mime_type() == "image/jpeg"
-    || info->get_mime_type() == "image/gif"
-    || info->get_mime_type() == "image/png"){
+  // hand off getting the icon
+  image1 = new class Gtk::Image(parent->getIcon(info->get_mime_type(), 48));
+  attach(*image1, 0, 1, 0, 3, Gtk::FILL, Gtk::FILL, 0, 0);
 
-  ico = info->get_name();
-  }
-else{
-  ico = "/usr/share/icons/Lila/scalable/mimetypes/mime-";
-  ico += info->get_mime_type().replace(info->get_mime_type().find("/"), 1, ":");
-  ico += ".svg";
-   }
 
-    Glib::file_get_contents(ico);
-    }
-  catch(const Glib::Error) {
-ico = "/usr/share/icons/Lila/scalable/mimetypes/mime-";
-ico += info->get_mime_type().substr(0,info->get_mime_type().find("/"));
-ico += ".svg";
-    }
-Glib::RefPtr<Gdk::Pixbuf> xe = Gdk::Pixbuf::create_from_file(ico);
-Glib::RefPtr<Gdk::Pixbuf> xf = xe->scale_simple(48,48,Gdk::INTERP_TILES);
-
-
-  Gtk::Image * image1 = Gtk::manage(new class Gtk::Image(xf));
-///
-
-
-  try{
-    ico = "/usr/share/icons/gnome/48x48/mimetypes/gnome-mime-";
-    ico += info->get_mime_type().replace(info->get_mime_type().find("/"), 1, "-");
-    ico += ".png";
-    Glib::file_get_contents(ico);
-    }
-  catch(const Glib::Error) {
-    ico = "/usr/share/icons/gnome/48x48/mimetypes/gnome-mime-";
-    ico += info->get_mime_type().substr(0,info->get_mime_type().find("/"));
-    ico += ".png";
-
-    }
-
-  Gtk::Image * image1 = Gtk::manage(new class Gtk::Image(ico));
-*/
-
-
-Glib::RefPtr<Gdk::Pixbuf> img;
-img = parent->getIcon(info->get_mime_type(), 48);
-
-
-Gtk::Image * image1 = Gtk::manage (new class Gtk::Image(img));
-
-image1->show();
-
-
-
-  Gtk::Label * FileName = Gtk::manage(new class Gtk::Label(shortnom));
-
   // this is where the mimetype info goes
-  mimeInfo = info->get_mime_type();
-  Gtk::Label * FilePermissions = Gtk::manage( new class Gtk::Label(mimeInfo));
+  FilePermissions = new class Gtk::Label(info->get_mime_type());
+  FilePermissions->set_alignment(0,0.5);
+  FilePermissions->set_justify(Gtk::JUSTIFY_LEFT);
+  attach(*FilePermissions, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
 
-  // THis is simply file size - images an video could have more. Much later.
-  Glib::ustring size;
+
+  // This is simply file size - images an video could have more. Later.
   if( info->get_size() < 1024 ){
-    size = int2ustr(info->get_size()) + " B";
+    FileSizeInfo = new class Gtk::Label(int2ustr(info->get_size()) + " B");
     }
   else if ( info->get_size() < (1024 * 1024) ){
-    size = int2ustr(info->get_size() / 1024) + " KB";
+    FileSizeInfo = new class Gtk::Label(int2ustr(info->get_size() / 1024) + " KB");
     }
   else{
-    size = int2ustr(info->get_size() / 1024 / 1024) + " MB";
+    FileSizeInfo = new class Gtk::Label( int2ustr(info->get_size() / 1048576) + " MB");
     }
-
-  // ideally, this label would be 80% size of standard
-  Gtk::Label * FileSizeInfo = Gtk::manage( new class Gtk::Label(size));
-
-  FileName->set_alignment(0,0.5);
-  FileName->set_justify(Gtk::JUSTIFY_LEFT);
-  FilePermissions->set_alignment(0,0.5);
-  FilePermissions->set_justify(Gtk::JUSTIFY_LEFT);
   FileSizeInfo->set_alignment(0,0.5);
   FileSizeInfo->set_justify(Gtk::JUSTIFY_LEFT);
-  
-  attach(*image1, 0, 1, 0, 3, Gtk::FILL, Gtk::FILL, 0, 0);
-  attach(*FileName, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-  attach(*FilePermissions, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-  attach(*FileSizeInfo, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-  
-  image1->show();
-  FileName->show();
-  FilePermissions->show();
-  FileSizeInfo->show();
-  show();
  }
+  attach(*FileSizeInfo, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+
+
+  show_all_children();
  }
+
 /**********************
 
 DaIconModes::Detail::Detail(
@@ -549,24 +485,22 @@
 DaIconModes::ChooseActionDialogue::ChooseActionDialogue(Glib::ustring mimeType){
 
   mime = mimeType;
-  cancelbutton1 = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-close")));
-  okbutton1     = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-apply")));
-  label1 = Gtk::manage(new class Gtk::Label("Enter a Shell command:"));
-  entry1 = Gtk::manage(new class Gtk::Entry());
-  vbox1  = Gtk::manage(new class Gtk::VBox(false, 0));
+  cancelbutton1 = new class Gtk::Button(Gtk::StockID("gtk-close"));
+  okbutton1 = new class Gtk::Button(Gtk::StockID("gtk-apply"));
+  label1 = new class Gtk::Label("Enter a Shell command:");
+  entry1 = new class Gtk::Entry();
+  vbox1  = new class Gtk::VBox(false, 0);
 
 
-  radiobutton1 = Gtk::manage(
-      new class Gtk::RadioButton(_RadioBGroup_radiobutton1, 
-      "Set Mime For \"" + mimeType.substr(0, mimeType.find("_")) + "\"") );
+  radiobutton1 = new class Gtk::RadioButton(_RadioBGroup_radiobutton1, 
+    "Set Mime For \"" + mimeType.substr(0, mimeType.find("_")) + "\"" );
 
   radiobutton1->signal_clicked().connect(
       sigc::bind<Glib::ustring >( sigc::mem_fun(*this,
       &DaIconModes::ChooseActionDialogue::GetCurrentAction), mimeType.substr(0, mimeType.find("_")) ));
 
- radiobutton2 = Gtk::manage(
-      new class Gtk::RadioButton(_RadioBGroup_radiobutton1,
-      "Set Mime For \"" + mimeType + "\"") ) ;
+ radiobutton2 = new class Gtk::RadioButton(_RadioBGroup_radiobutton1,
+      "Set Mime For \"" + mimeType + "\"")  ;
 
   radiobutton2->signal_clicked().connect(
       sigc::bind<Glib::ustring >( sigc::mem_fun(*this,
@@ -609,14 +543,8 @@
   add_action_widget(*cancelbutton1, Gtk::RESPONSE_CANCEL);
   add_action_widget(*okbutton1, Gtk::RESPONSE_OK);
   set_default_response(Gtk::RESPONSE_OK);
-  cancelbutton1->show();
-  okbutton1->show();
-  radiobutton1->show();
-  radiobutton2->show();
-  label1->show();
-  entry1->show();
-  vbox1->show();
-  show();
+
+  show_all_children();
   }
 
 /**********************/
@@ -706,43 +634,43 @@
   set_title("Set file permissions");
   set_modal(true);
 
-   read = Gtk::manage(new class Gtk::Label("R"));
-   write = Gtk::manage(new class Gtk::Label("W"));
-   run = Gtk::manage(new class Gtk::Label("X"));
-   user = Gtk::manage(new class Gtk::Label("User"));
-   group = Gtk::manage(new class Gtk::Label("Group"));
-   others = Gtk::manage(new class Gtk::Label("Everybody"));
+   read = new class Gtk::Label("R");
+   write = new class Gtk::Label("W");
+   run = new class Gtk::Label("X");
+   user = new class Gtk::Label("User");
+   group = new class Gtk::Label("Group");
+   others = new class Gtk::Label("Everybody");
 
-   explaination = Gtk::manage(new class Gtk::Label("for \""+ info->get_name() + "\"..."));
+   explaination = new class Gtk::Label("for \""+ info->get_name() + "\"...");
 
-   layout = Gtk::manage(new class Gtk::Table(5, 6, false));
+   layout = new class Gtk::Table(5, 6, false);
 
-   u_r = Gtk::manage(new class Gtk::CheckButton(""));
+   u_r = new class Gtk::CheckButton("");
    if((info->get_permissions() & Gnome::Vfs::PERM_USER_READ) != 0)  u_r->set_active(true);
-   u_w = Gtk::manage(new class Gtk::CheckButton(""));
+   u_w = new class Gtk::CheckButton("");
    if((info->get_permissions() & Gnome::Vfs::PERM_USER_WRITE) != 0)  u_w->set_active(true);
-   u_x = Gtk::manage(new class Gtk::CheckButton(""));
+   u_x = new class Gtk::CheckButton("");
    if((info->get_permissions() & Gnome::Vfs::PERM_USER_EXEC) != 0)  u_x->set_active(true);
-   g_r = Gtk::manage(new class Gtk::CheckButton(""));
+   g_r = new class Gtk::CheckButton("");
    if((info->get_permissions() & Gnome::Vfs::PERM_GROUP_READ) != 0)  g_r->set_active(true);
-   g_w = Gtk::manage(new class Gtk::CheckButton(""));
+   g_w = new class Gtk::CheckButton("");
    if((info->get_permissions() & Gnome::Vfs::PERM_GROUP_WRITE) != 0)  g_w->set_active(true);
-   g_x = Gtk::manage(new class Gtk::CheckButton(""));
+   g_x = new class Gtk::CheckButton("");
    if((info->get_permissions() & Gnome::Vfs::PERM_GROUP_EXEC) != 0)  g_x->set_active(true);
-   o_r = Gtk::manage(new class Gtk::CheckButton(""));
+   o_r = new class Gtk::CheckButton("");
    if((info->get_permissions() & Gnome::Vfs::PERM_OTHER_READ) != 0)  o_r->set_active(true);
-   o_w = Gtk::manage(new class Gtk::CheckButton(""));
+   o_w = new class Gtk::CheckButton("");
    if((info->get_permissions() & Gnome::Vfs::PERM_OTHER_WRITE) != 0)  o_w->set_active(true);
-   o_x = Gtk::manage(new class Gtk::CheckButton(""));
+   o_x = new class Gtk::CheckButton("");
    if((info->get_permissions() & Gnome::Vfs::PERM_OTHER_EXEC) != 0)  o_x->set_active(true);
 
-   extra = Gtk::manage(new  Gtk::VSeparator);
+   extra = new  Gtk::VSeparator;
 
-   sticky = Gtk::manage(new class Gtk::CheckButton("Sticky"));
+   sticky = new class Gtk::CheckButton("Sticky");
    if((info->get_permissions() & Gnome::Vfs::PERM_STICKY) != 0)  sticky->set_active(true);
-   GID = Gtk::manage(new class Gtk::CheckButton("Group ID"));
+   GID = new class Gtk::CheckButton("Group ID");
    if((info->get_permissions() & Gnome::Vfs::PERM_SGID) != 0)  GID->set_active(true);
-   UID = Gtk::manage(new class Gtk::CheckButton("User ID"));;
+   UID = new class Gtk::CheckButton("User ID");
    if((info->get_permissions() & Gnome::Vfs::PERM_SUID) != 0)  UID->set_active(true);
 
    layout->attach(*u_r, 1, 2, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
@@ -769,13 +697,14 @@
    layout->attach(*others, 0, 1, 4, 5, Gtk::FILL , Gtk::FILL, 0, 0);
    layout->attach(*explaination, 0, 6, 0, 1, Gtk::FILL | Gtk::EXPAND, Gtk::FILL, 10, 0);
 
+
   get_vbox()->pack_start(*layout);
-  button1 = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
+  button1 = new class Gtk::Button(Gtk::StockID("gtk-cancel"));
   button1->signal_clicked().connect(
       sigc::mem_fun(*this, &DaIconModes::SetPermissionsDialogue::cancled) );
 
 
-  button2 = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-apply")));
+  button2 = new class Gtk::Button(Gtk::StockID("gtk-apply"));
   button2->signal_clicked().connect(
     sigc::bind<Glib::RefPtr<Gnome::Vfs::FileInfo> >(
       sigc::mem_fun(*this, &DaIconModes::SetPermissionsDialogue::apply), info ));
@@ -785,9 +714,6 @@
   add_action_widget(*button1, -6);
   add_action_widget(*button2, -10);
 
-  button1->show();
-  button2->show();
-
   set_modal(true);
   show_all_children();
   show();
@@ -795,7 +721,9 @@
 
 /**********************/
 
-void DaIconModes::SetPermissionsDialogue::cancled(){hide();}
+void DaIconModes::SetPermissionsDialogue::cancled(){
+  hide();
+  }
 
 /**********************/
 
@@ -829,6 +757,34 @@
 
 /**********************/
 
+DaIconModes::SetPermissionsDialogue::~SetPermissionsDialogue(){
+      delete read;
+      delete write;
+      delete run;
+      delete user;
+      delete group;
+      delete others;
+      delete explaination;
+      delete layout;
+      delete u_r;
+      delete u_w;
+      delete u_x;
+      delete g_r;
+      delete g_w;
+      delete g_x;
+      delete o_r;
+      delete o_w;
+      delete o_x;
+      delete extra;
+      delete sticky;
+      delete GID;
+      delete UID;
+      delete button1;
+      delete button2;
+      }
+
+/**********************/
+
 Glib::RefPtr<Gdk::Pixbuf> DaIconModes::getIcon(Glib::ustring mimeGiven, guint size){
   int i;
   static std::vector <Glib::ustring> mimeList;

Modified: trunk/src/iconmodes.h
===================================================================
--- trunk/src/iconmodes.h	2005-04-06 05:21:35 UTC (rev 48)
+++ trunk/src/iconmodes.h	2005-04-08 06:12:40 UTC (rev 49)
@@ -22,9 +22,21 @@
 
   class Sidecon : public Gtk::Table {
     Glib::ustring filePath, mimeInfo;
-    DaIconModes * parent;
+    DaIconModes * parent;
+    Gtk::Image * image1;
+    Gtk::Label * FileName;
+    Gtk::Label * FilePermissions ;
+  Gtk::Label * FileSizeInfo;
     public:
-    Sidecon(Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>&, DaIconModes&);
+    Sidecon(Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>&, DaIconModes&);
+~Sidecon(){
+delete image1;
+delete FileName;
+delete FilePermissions;
+delete FileSizeInfo;
+
+}
+
     };
 
 /*
@@ -50,6 +62,16 @@
     public:
 
     ChooseActionDialogue(Glib::ustring);
+    ~ChooseActionDialogue(){
+
+      delete cancelbutton1;
+      delete okbutton1;
+      delete label1;
+      delete entry1;
+      delete vbox1;
+      delete radiobutton1;
+      delete radiobutton2;
+      }
     };
 
 
@@ -78,6 +100,7 @@
     public:
 
     SetPermissionsDialogue(Glib::RefPtr<Gnome::Vfs::FileInfo> , Glib::ustring);
+    ~SetPermissionsDialogue();
     };
 
   class Darimasen * parent;



From darimasen-svn-admin at lists.berlios.de  Sat Apr  9 03:15:43 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Sat, 9 Apr 2005 03:15:43 +0200
Subject: [Darimasen-svn] r50 - in trunk: . src
Message-ID: <200504090115.j391FhMX013520@sheep.berlios.de>

Author: sudrien
Date: 2005-04-09 03:15:34 +0200 (Sat, 09 Apr 2005)
New Revision: 50

Modified:
   trunk/ChangeLog
   trunk/README
   trunk/TODO
   trunk/distribute.sh
   trunk/src/darimasen.cpp
   trunk/src/darimasen.h
Log:
0.0.7 - as said before

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2005-04-08 06:12:40 UTC (rev 49)
+++ trunk/ChangeLog	2005-04-09 01:15:34 UTC (rev 50)
@@ -1,4 +1,4 @@
-Darimasen 0.0.7 - ??
+Darimasen 0.0.7 - 20050408
 
   Sudirectory Navigation *MENU ALWAYS ONLY ONE LEVEL DEEP*
   Tab support:
@@ -11,7 +11,7 @@
   Blew away useless directory tree junk
   Stausbar actually shows messages
   
-Darimasen 0.0.6 - 20051802
+Darimasen 0.0.6 - 20050218
   
   Icon display bugs fixed
   Window resize now effects icons (speeding up)

Modified: trunk/README
===================================================================
--- trunk/README	2005-04-08 06:12:40 UTC (rev 49)
+++ trunk/README	2005-04-09 01:15:34 UTC (rev 50)
@@ -1,79 +1,52 @@
-Darimasen File Manager - 0.0.6 [Feature Incomplete - Only for Experimental Use]
+Darimasen File Manager - 0.0.7 [Feature Incomplete - Only for Experimental Use]
 
-Readme.txt - 18 Feb. 2005
+Readme.txt - 8 Apr. 2005
 
 --
 
-0.0.6 was released on the policy of, "Hey- I'm going to do some
-major breakage. Time for a tarball". This breakage is reimplementing
-for tab support, or at least this is what I would like you to believe.
+0.0.7 hs been released because:
 
-This tarball corresponds with SVN commit 25. There will be no branch, as
-this software shoukld not yet be considered stable enough for anything
-but seeing where I might be going with it, and even then it is only in a
-"works for me" state. If your files get eaten, this is probably a gnome-vfsmm
-issue. If they get chmod'ed to the great /dev/null in the sky, don't say you
-remained unwarned.
+1. Now with tabs, it is at least as stable as 0.0.6
+2. Except for DnD, THe navigation system is believed to be complete.
 
-There is no documentation.
+It has better stability and such. Pretty sure. It's faster at several points.
+
+--
 
-There is no support, unless you have the most current SVN checkout (> 25).
 
-That said, I do not regularly get segfaults on tests - though ROX is still
-my regular file manager.
+
+History (in a generic sense)
 
--Sud.
+Once upon a time there was a company. It made a Graphical User Interface (GUI), and it needed a method to sort through files. There had been file managers before, though perhaps not under that name. They helped you navigate through directories.
+
+But most everything in a GUI is represented as an icon. So what Icon do you give a directory that makes sense? They called them folders, which gave both an understandable icon and a person new to computers a way to understand files' organization.
+
+And then Microsoft copied the idea, and it was all over.
+
+Or was it?
+
+
+--
+
+
+History (in a specific sense)
+
+One day a computer science student, known as Sudrien, saw screenshots of a File Manafger called Evidence, and tried to compile it from CVS. It didn't look nearly as good as the screenshots, and clicking on the directory names in the path did very little, unlike expected.
+
+So Sudrien made a post on the Gentoo Forums - and there seemed to be nothing like the idea in Sudrien's head to be had. You can guess where this is going.
+
+Including the part where Sudrien is refered to in the third person.
+
+Darimasen is a file manager with no folders. You won't see one. Period. There are directories - menus of directories. and you can get anywhere you want with them.
+
+
+
+--
+
+
+http://darimasen.berlios.de
 
---
 
-Darimasen is based on one main idea: never say 'folder'; at least,
-not if you can't actually hold a folder. 
-
-Programming-wise, this means that there are not only folder icons,
-but you simply can't navigate the directory structure via the
-file view. There is (or will be) a directory tree, but even this is
-not displayed by default.
-
-Darimasen has menu-based directory navigation. It might be remind
-you of the Gnome 2.8 file chooser's buttons, or of the website
-navigation technique - but it has two major differences:
-
-1. They are all menus,
-
-2. Those menus show sibling directories, not child directories.
-
-For example, say you are in your home directory, which 
-has three subdirectories; work/, play/, and hack/. Two menus would be
-generated; the first, "~/", would switch you between home and
-other important areas, like your mounted drives. THe second, in this case,
-would be a "3>>"; the current folder has three subdirectories,
-and you access them through that menu. And look! "hack/" has a "2"
-beside it, meaning it has two subdirectories itself. So clicking
-"hack/", the menus change.
-
-
-~/  hack/  2>>
-
-
-The "~/" menu is the same, but the new "hack/" menu contains "work/"
- and "play/"... it's sibling directories.
-
-
-It's not the first thing people expect. Why do it then?
-
-Say that hack's subdirectories are live/ and die/. And that you want to
-go to live.
-
-
-~/  hack/  2>>
-           die/
-           live/
-
-
-
-Hey! you can read that left-to-right!
-
-
 Any suggestions can be sent to me at fusemail.com
 
 - Sudrien

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2005-04-08 06:12:40 UTC (rev 49)
+++ trunk/TODO	2005-04-09 01:15:34 UTC (rev 50)
@@ -1,51 +1,54 @@
-version 0.0.7: Embetterment by Tabs
+version 0.0.8
 
-Must address:
+Must do:
 
-resetting menus where subsubdirs have been used
+evaluate the " Gtk-CRITICAL **: gtk_widget_event: assertion `WIDGET_REALIZED_FOR_EVENT (widget, event)' failed" messages
+Full Folder & Icon context menus.
+Keyboard navigation of menus (Alt+1 opens root menu, Alt+2 opens first child, etc)
 
+Move, copy, delete of files
 
------------------------------------------------
-version 0.0.8 and onwards
------------------------------------------------
+move, copy, delete of folder
+move, copy of folder contents
 
-limiting DaMenu expansion (preserve window width for long paths) - by shortening menu names
+Traditional List and detail views
 
-Full Folder & Icon context menus.
 
---
-Detail view, how to handle icon mode switching now
-Ron <Rds> mentioned that Rox will be moving for ~/Choices to ~/.choices - should probably support that, or check both locations.
+Would like to do:
 
---
+limiting DaMenu expansion (preserve window width for long paths) - by shortening menu names
+AppDir Support
+Create new folder
+Ron <Rds> mentioned that Rox will be moving for ~/Choices to ~/.choices - should probably support that, or check both locations
+use existing thumbnails / create new thumbnails (a la ROX)
 
-int * MenuWidths; is for saving the lengths of the strings, to determine which should be shortened first. I think for 0.0.6 taht just replacing the title with single character should be good enough. 
 
-the other method - make another menu wih dirs a menus - well, am I going to do it? I dunno.
+version 0.0.9
+-----------------------------------------------
 
---
+Optional Directory tree, updated as needed
 
-   
-   
-   Generic detail view (Name, Size, Permissions, etc.) should be easy now with gnome_vfsmm; however, sorting them by this info is a bit more of a challenge. A ListView would probably be much better for this. This makes for some hey-my-scalp-is-bleeding type head-scratching problems, so a dummy label is in place for now.
-
-mime-type dependant icons, a la ROX.
-
+Package as appdir?
+ 
 ---
 
 @commit 11 -- With the ROX / Gnome-vfsmm work done, most of Ron's <Rds> code is gone. This would include the AppDir test. However, appdirs would never end up showing up in the main window, so this is not a huge loss as of yet. His test was for AppRun within the directory - it would require testing for that file's existance, then notifying that it is an executable and needs a unique icon.
 
 ---
 
- standard tree navigation
 
----
+-----------------------------------------------
 
-all the folder context menus...
+--version 0.1.0 (beta?)
 
----
+anouncement of usuable public release ^_^;
 
 
---version 0.1.0
+-----------------------------------------------
 
-anouncement of usuable public release ^_^;
+--version 0.1.1 and onwards
+
+Drag and drop. 
+Re-port to windows
+
+

Modified: trunk/distribute.sh
===================================================================
--- trunk/distribute.sh	2005-04-08 06:12:40 UTC (rev 49)
+++ trunk/distribute.sh	2005-04-09 01:15:34 UTC (rev 50)
@@ -1,9 +1,9 @@
 #!/bin/sh
 
 cd ..
-mkdir darimasen-0.0.6.9
-cp -R trunk/* darimasen-0.0.6.9/
-cd darimasen-0.0.6.9/
+mkdir darimasen-0.0.7
+cp -R trunk/* darimasen-0.0.7/
+cd darimasen-0.0.7/
 
 rm -Rf .svn/
 rm -Rf src/.svn/
@@ -26,4 +26,4 @@
 
 cd ..
 
-tar -cjvf darimasen-0.0.6.9.tar.bz2 darimasen-0.0.6.9/
+tar -cjvf darimasen-0.0.7.tar.bz2 darimasen-0.0.7/

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-08 06:12:40 UTC (rev 49)
+++ trunk/src/darimasen.cpp	2005-04-09 01:15:34 UTC (rev 50)
@@ -1,8 +1,8 @@
-/* Darimasen - darimasen.cpp - Copyright (C) 2004 - 2005 Sudrien, GPL */
-
-/**********************/
-
-#include "darimasen.h"
+/* Darimasen - darimasen.cpp - Copyright (C) 2004 - 2005 Sudrien, GPL */
+
+/**********************/
+
+#include "darimasen.h"
 #include <iostream>
 
 /**********************/
@@ -16,30 +16,31 @@
 
   int entry = 0;
 
+MenuItemArray[position]->signal_activate().connect_notify(sigc::bind<guint,Glib::ustring>(sigc::mem_fun(*this,&Darimasen::DarimasenMenu:: selection_reset),position,path));
 
   if( position < depth || ext != ""){
 
     Gtk::MenuItem * subdir = Gtk::manage( new Gtk::MenuItem(menulevel[position] + " "));
-    MenuArray[position]->attach(*subdir, 0 ,4, entry++, entry+1);
+    MenuArray[position]->attach(*subdir, 0 ,4, entry++, entry+1);
     subdir->show();
 
           subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
 
     if ( ext != "" ){
           subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint,bool>(
+            sigc::bind<Glib::ustring,guint,bool>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
                  (path + menulevel[position]).substr(0, (path + menulevel[position]).length() - 1),position,true));
       }
     else {
           subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint,bool>(
+            sigc::bind<Glib::ustring,guint,bool>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
                  (path + menulevel[position]).substr(0, (path + menulevel[position]).length() - 1),position,false));
       }
-
-    Gtk::SeparatorMenuItem * sep = Gtk::manage( new Gtk::SeparatorMenuItem());
-    MenuArray[position]->attach(*sep, 0 ,4, entry++, entry+1);
+
+    Gtk::SeparatorMenuItem * sep = Gtk::manage( new Gtk::SeparatorMenuItem());
+    MenuArray[position]->attach(*sep, 0 ,4, entry++, entry+1);
     sep->show();
     }
 
@@ -68,7 +69,7 @@
           subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
 
           subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint,bool>(
+            sigc::bind<Glib::ustring,guint,bool>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
                  (path + refFileInfo->get_name()), position,false));
 
@@ -79,34 +80,34 @@
 
 
           subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint,bool>(
+            sigc::bind<Glib::ustring,guint,bool>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
                 (path + ext.substr(1) + slash + refFileInfo->get_name()), position,false));
 
           SubSubCount = CountSubdir(path + ext + slash + refFileInfo->get_name());
           }
 
-        if (SubSubCount != "0"){
-          Gtk::Label * SubSubLabel = Gtk::manage(new class Gtk::Label(SubSubCount + " \342\226\272",1,0.5));
-          SubSubLabel->show();
-          Gtk::MenuItem * subsubdir = Gtk::manage( new Gtk::MenuItem(*SubSubLabel));
+        if (SubSubCount != "0"){
+          Gtk::Label * SubSubLabel = Gtk::manage(new class Gtk::Label(SubSubCount + " \342\226\272",1,0.5));
+          SubSubLabel->show();
+          Gtk::MenuItem * subsubdir = Gtk::manage( new Gtk::MenuItem(*SubSubLabel));
           subsubdir->set_right_justified();
 
 
           subsubdir->signal_button_release_event().connect(
-            sigc::bind<int, Glib::ustring, Glib::ustring>(
+            sigc::bind<int, Glib::ustring, Glib::ustring>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::SpecialMenuForPath),
                 position, path, ext+ slash + refFileInfo->get_name()));
-
-          MenuArray[position]->attach(*subsubdir, 3 ,4, entry, entry+1);
-          subsubdir->show();
+
+          MenuArray[position]->attach(*subsubdir, 3 ,4, entry, entry+1);
+          subsubdir->show();
           MenuArray[position]->attach(*subdir, 0 ,3, entry++, entry+1);
-          subdir->show();
-          }
-        else {
-          MenuArray[position]->attach(*subdir, 0 ,4, entry++, entry+1);
-          subdir->show();            
-          }
+          subdir->show();
+          }
+        else {
+          MenuArray[position]->attach(*subdir, 0 ,4, entry++, entry+1);
+          subdir->show();            
+          }
         }
       }
     }
@@ -123,34 +124,33 @@
        Glib::ustring path,
        Glib::ustring ext){
 
-  extended = position; 
-
- MenuItemArray[position]->remove_submenu();
- delete MenuArray[position];
- MenuArray[position] =  new DirectoryMenu(*this);
-
+  MenuItemArray[position]->remove_submenu();
+  delete MenuArray[position];
+  MenuArray[position] =  new DirectoryMenu(*this);
   MenuItemArray[position]->set_submenu(*MenuArray[position]);
   MenuForPath(position, path, ext);
-
   MenuItemArray[position]->select();
 
+  needsRebuild[position] = true;
+
   return true;
 
   }
 
 /**********************/
 
-void Darimasen::DarimasenMenu::offClick(){
-if( extended != -1 ){
-std::cout << extended << "\n";
-  MenuItemArray[extended]->remove_submenu();
-  delete MenuArray[extended];
-  MenuArray[extended] =  new DirectoryMenu(*this);
-  MenuItemArray[extended]->set_submenu(*MenuArray[extended]);
-  MenuForPath(extended, parent->history[extended].top() , "");
-extended = -1;
+void Darimasen::DarimasenMenu:: selection_reset(guint position, Glib::ustring path){
+  if ( needsRebuild[position] ){
+    MenuItemArray[position]->remove_submenu();
+    delete MenuArray[position];
+    MenuArray[position] =  new DirectoryMenu(*this);
+    MenuItemArray[position]->set_submenu(*MenuArray[position]);
+    MenuForPath(position, path, "");
+    MenuItemArray[position]->select();
+
+    needsRebuild[position] = false;
+    }
 }
-}
 
 /**********************/
 
@@ -179,7 +179,7 @@
 
   return false;
 
-  //DaFileLister(); //5:45pm, 24 Dec 2004, it worked! // leave this comment    
+  //DaFileLister(); //5:45pm, 24 Dec 2004, it worked! // leave this comment    
   }
 
 /**********************/
@@ -214,7 +214,6 @@
 Darimasen::DarimasenMenu::DarimasenMenu(const Glib::ustring & path, Darimasen& Myparent, guint pos){
 
   depth = 0;
-  extended = -1;
 
   Glib::ustring shortpath = path; //home = getenv("HOME");
   parent = &Myparent;
@@ -231,7 +230,11 @@
     }
 
   menulevel =  new Glib::ustring[depth+1];
+  needsRebuild = new bool[depth+1];
+  for( int i=0; i<=depth; i++)
+        needsRebuild[i] = false;
 
+
   startPos = 0;
   for(i = 0; shortpath.find(slash,startPos) !=  Glib::ustring::npos ; i++ ){
     menulevel[i] = shortpath.substr(startPos,shortpath.find(slash,startPos) - startPos + 1 );
@@ -280,36 +283,36 @@
     MenuArray[0]->show();
 
     Gtk::MenuItem * subdir = Gtk::manage( new Gtk::MenuItem("/ (root)"));
-    MenuArray[0]->attach(*subdir, 0 ,1, 0, 1);
+    MenuArray[0]->attach(*subdir, 0 ,1, 0, 1);
     subdir->show();
 
           subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
 
           subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint,bool>(
+            sigc::bind<Glib::ustring,guint,bool>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
                  "/",pos,false));
 
 
 
     Gtk::MenuItem * subdir2 = Gtk::manage( new Gtk::MenuItem("~ (home)"));
-    MenuArray[0]->attach(*subdir2, 0 ,1, 1, 2);
+    MenuArray[0]->attach(*subdir2, 0 ,1, 1, 2);
     subdir2->show();
 
           subdir2->set_events(Gdk::BUTTON_RELEASE_MASK);
 
           subdir2->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint,bool>(
+            sigc::bind<Glib::ustring,guint,bool>(
               sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
                 getenv("HOME"),pos,false));
 
-    Gtk::SeparatorMenuItem * sep = Gtk::manage( new Gtk::SeparatorMenuItem());
-    MenuArray[0]->attach(*sep, 0 ,1, 2, 3);
+    Gtk::SeparatorMenuItem * sep = Gtk::manage( new Gtk::SeparatorMenuItem());
+    MenuArray[0]->attach(*sep, 0 ,1, 2, 3);
     sep->show();
 
     Gtk::MenuItem * subdir3 = Gtk::manage( new Gtk::MenuItem("Add a location to this list"));
     MenuArray[0]->attach(*subdir3, 0 ,1, 3, 4);
-    subdir3->set_sensitive(false);
+    subdir3->set_sensitive(false);
     subdir3->show();
 
 
@@ -325,7 +328,7 @@
     delete MenuArray[c];
     }
   delete menulevel;
-
+  delete needsRebuild;
   for (int i = 0; i <=depth; i++){
     delete MenuArray[i];
     delete MenuItemArray[i];
@@ -339,7 +342,7 @@
 void Darimasen::fNewTab(){
     std::stack<Glib::ustring> empty;
     history.push_back(empty);
-
+
   history[history.size() -1].push(getenv("HOME") + slash);
   addTab(Tabber->get_n_pages());
 
@@ -354,7 +357,7 @@
 
 if( newpath.substr(newpath.length() - 1) != slash)
    newpath += slash;
-
+
   history[history.size() -1].push(newpath);
   addTab(Tabber->get_n_pages());
 
@@ -420,10 +423,10 @@
   arrangement->pack_start(*tabNum);
   arrangement->pack_end(*closeButton);
 
-  Gtk::EventBox * MainEventBox = new class Gtk::EventBox;
-
+  Gtk::EventBox * MainEventBox = new class Gtk::EventBox;
+
   Gdk::Color m_Color;
-  m_Color.set_rgb(65535, 65535, 65535);
+  m_Color.set_rgb(65535, 65535, 65535);
   MainEventBox->modify_bg(Gtk::STATE_NORMAL, m_Color);
   MainEventBox->show();
 
@@ -506,12 +509,12 @@
 /**********************/
 
 Darimasen::Darimasen(std::vector<Glib::ustring> paths){
-  set_title("Darimasen");
+  set_title("Darimasen");
   set_default_size(500, 330);
   set_icon_from_file( (Glib::ustring)DATADIR + (Glib::ustring)"/icons/hicolor/48x48/apps/darimasen.png"  );
   add(VerticalOrganizer);
   VerticalOrganizer.show();
-
+
   VerticalOrganizer.pack_start(TopBar, Gtk::PACK_SHRINK);
   TopBar.show();
 
@@ -524,9 +527,9 @@
 
   CompactMenu = new Gtk::MenuBar;
   m_Menu_File = new Gtk::Menu;
-
 
-
+
+
   CompactMenu->items().push_back( Gtk::Menu_Helpers::MenuElem("\342\226\274", *m_Menu_File) );
 
   // glade-- told me to do it....
@@ -544,10 +547,10 @@
   m_Menu_File->items().push_back( Gtk::Menu_Helpers::SeparatorElem() ) ;
 
   m_Menu_File->items().push_back( Gtk::Menu_Helpers::StockMenuElem(Gtk::Stock::QUIT,
-    sigc::mem_fun(*this, &Darimasen::fQuit) ) );
-    
-  TopBar.set_show_arrow(false);
-  CompactMenuContainer->add(*CompactMenu); 
+    sigc::mem_fun(*this, &Darimasen::fQuit) ) );
+    
+  TopBar.set_show_arrow(false);
+  CompactMenuContainer->add(*CompactMenu); 
   CompactMenu->show();
 
 
@@ -564,27 +567,27 @@
   TopBar.append(*sep2);
   sep2->show();
 
-  BackButton = new Gtk::ToolButton(Gtk::StockID("gtk-go-back"));
-  BackButton->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fBack));
+  BackButton = new Gtk::ToolButton(Gtk::StockID("gtk-go-back"));
+  BackButton->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fBack));
   TopBar.append(*BackButton);
-  BackButton->set_sensitive(false);
-  BackButton->show();
-  
-  ChangeIconMode = new Gtk::ToolButton(Gtk::StockID("gtk-convert"));
-  //ChangeIconMode->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fChangeIconMode));
+  BackButton->set_sensitive(false);
+  BackButton->show();
+  
+  ChangeIconMode = new Gtk::ToolButton(Gtk::StockID("gtk-convert"));
+  //ChangeIconMode->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fChangeIconMode));
   TopBar.append(*ChangeIconMode);
-  ChangeIconMode->set_sensitive(false);
-  //ChangeIconMode->show();
-   
-  ViewTree = new Gtk::ToggleToolButton(Gtk::StockID("gtk-index"));
-  //ViewTree->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fViewTree));
+  ChangeIconMode->set_sensitive(false);
+  //ChangeIconMode->show();
+   
+  ViewTree = new Gtk::ToggleToolButton(Gtk::StockID("gtk-index"));
+  //ViewTree->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fViewTree));
   TopBar.append(*ViewTree);
-  ViewTree->set_sensitive(false);
+  ViewTree->set_sensitive(false);
   //ViewTree -> show();
 
-  NewTab = new Gtk::ToolButton(Gtk::StockID("gtk-new"));
-  NewTab->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fNewTab));
-  TopBar.append(*NewTab);
+  NewTab = new Gtk::ToolButton(Gtk::StockID("gtk-new"));
+  NewTab->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fNewTab));
+  TopBar.append(*NewTab);
   NewTab->show();
 
   VerticalOrganizer.add(HideTreePane);
@@ -596,11 +599,11 @@
   Tabber->signal_switch_page().connect(sigc::mem_fun(*this, &Darimasen::tabberSwitched));
   Tabber->set_show_border(false);
   Tabber->show();
-
+
   HideTreePane.pack2(*Tabber, Gtk::EXPAND|Gtk::SHRINK);
    
-  Info.set_has_resize_grip();
-  Info.show();
+  Info.set_has_resize_grip();
+  Info.show();
   VerticalOrganizer.pack_start(Info, Gtk::PACK_SHRINK);
 
   show();
@@ -626,8 +629,6 @@
 
   delete Tabber;
 
- // delete sep1;
- // delete sep2;
   delete BackButton;
   delete ChangeIconMode;
   delete ViewTree;

Modified: trunk/src/darimasen.h
===================================================================
--- trunk/src/darimasen.h	2005-04-08 06:12:40 UTC (rev 49)
+++ trunk/src/darimasen.h	2005-04-09 01:15:34 UTC (rev 50)
@@ -82,17 +82,17 @@
     void MenuForPath(int, Glib::ustring , Glib::ustring); //extension
     bool SpecialMenuForPath(GdkEventButton* , int, Glib::ustring  , Glib::ustring); //extension
 
-    void offClick();
-
     Glib::ustring CountSubdir(const Glib::ustring&);
     bool DaMenuSelect(GdkEventButton*, const Glib::ustring,guint,bool);
+    void selection_reset(guint, Glib::ustring);
  
+    bool * needsRebuild;
   public:
 
-    short extended;
     void signal_deactivate ();
     DarimasenMenu(const Glib::ustring&, Darimasen&, guint);
     ~DarimasenMenu();
+
     };
 
   class aboutDa : public Gtk::Window {
@@ -102,6 +102,8 @@
   public:
     aboutDa();
     ~aboutDa();
+
+
     };
   
   Gtk::VBox VerticalOrganizer;



From darimasen-svn-admin at lists.berlios.de  Sun Apr 10 04:57:38 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Sun, 10 Apr 2005 04:57:38 +0200
Subject: [Darimasen-svn] r51 - trunk/src
Message-ID: <200504100257.j3A2vcOE016674@sheep.berlios.de>

Author: sudrien
Date: 2005-04-10 04:57:34 +0200 (Sun, 10 Apr 2005)
New Revision: 51

Added:
   trunk/src/firsttime.cpp
   trunk/src/firsttime.h
Modified:
   trunk/src/Makefile.am
   trunk/src/darimasen.cpp
   trunk/src/iconmodes.cpp
   trunk/src/main.cpp
Log:
First run dialogue to set up actions

Modified: trunk/src/Makefile.am
===================================================================
--- trunk/src/Makefile.am	2005-04-09 01:15:34 UTC (rev 50)
+++ trunk/src/Makefile.am	2005-04-10 02:57:34 UTC (rev 51)
@@ -1,16 +1,11 @@
-# generated 2004/8/20 13:05:31 CEST by nick at frisbee.mnc.ch.(none)
-# using glademm V2.6.0_cvs
-#
-# newer (non customized) versions of this file go to Makefile.am_new
+
 bin_PROGRAMS = darimasen
 
-
-
-
 darimasen_SOURCES = \
 	darimasen.cpp \
 	iconmodes.cpp \
 	supplimental.cpp \
+        firsttime.cpp \
 	main.cpp \
         prefix.c
 
@@ -18,6 +13,7 @@
 	darimasen.h \
 	iconmodes.h \
 	supplimental.h \
+        firsttime.h \
 	main.h \
         prefix.h
 

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-09 01:15:34 UTC (rev 50)
+++ trunk/src/darimasen.cpp	2005-04-10 02:57:34 UTC (rev 51)
@@ -392,6 +392,7 @@
   else
     Tabber->set_show_tabs(true);
 
+
   Gtk::Image * xed = Gtk::manage(
     new Gtk::Image("/usr/share/icons/hicolor/16x16/stock/generic/stock_close.png"));
   xed->show();
@@ -511,7 +512,10 @@
 Darimasen::Darimasen(std::vector<Glib::ustring> paths){
   set_title("Darimasen");
   set_default_size(500, 330);
-  set_icon_from_file( (Glib::ustring)DATADIR + (Glib::ustring)"/icons/hicolor/48x48/apps/darimasen.png"  );
+  try{
+    set_icon_from_file( (Glib::ustring)DATADIR + (Glib::ustring)"/icons/hicolor/48x48/apps/darimasen.png"  );
+  }
+  catch(const Glib::Error) {/*non-existant file OR folder*/}
   add(VerticalOrganizer);
   VerticalOrganizer.show();
 

Added: trunk/src/firsttime.cpp
===================================================================
--- trunk/src/firsttime.cpp	2005-04-09 01:15:34 UTC (rev 50)
+++ trunk/src/firsttime.cpp	2005-04-10 02:57:34 UTC (rev 51)
@@ -0,0 +1,150 @@
+/* Darimasen - firsttime.cpp - Copyright (C) 2004 - 2005 Sudrien, GPL */
+
+#include "firsttime.h"
+
+/**********************/
+
+dialog1_glade::dialog1_glade(
+)
+{  
+   okbutton1 = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
+   image1 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-dialog-question"), Gtk::IconSize(6)));
+   label1 = Gtk::manage(new class Gtk::Label("It looks like this is your first time\n"
+		"running Darimasen.\n\n"
+		"It would be a good time to set up\n"
+		"some default \"Run Actions\"\n\n"
+		"Simply replace the wildcard (*)\n"
+		"with your prefered program."));
+   hbox1 = Gtk::manage(new class Gtk::HBox(false, 0));
+   label2 = Gtk::manage(new class Gtk::Label("Text Files:"));
+   label3 = Gtk::manage(new class Gtk::Label("Music FIles:"));
+   label4 = Gtk::manage(new class Gtk::Label("Video Files:\n"
+		""));
+   label5 = Gtk::manage(new class Gtk::Label("Image files:\n"
+		""));
+   entry1 = Gtk::manage(new class Gtk::Entry());
+   entry2 = Gtk::manage(new class Gtk::Entry());
+   entry3 = Gtk::manage(new class Gtk::Entry());
+   entry4 = Gtk::manage(new class Gtk::Entry());
+   table1 = Gtk::manage(new class Gtk::Table(2, 2, false));
+   hbox2 = Gtk::manage(new class Gtk::HBox(false, 0));
+   vbox1 = Gtk::manage(new class Gtk::VBox(false, 0));
+   okbutton1->set_flags(Gtk::CAN_FOCUS);
+   okbutton1->set_flags(Gtk::CAN_DEFAULT);
+   okbutton1->set_relief(Gtk::RELIEF_NORMAL);
+   get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
+   image1->set_alignment(0.5,0.5);
+   image1->set_padding(6,0);
+   label1->set_alignment(0.5,0.5);
+   label1->set_padding(0,0);
+   label1->set_justify(Gtk::JUSTIFY_LEFT);
+   label1->set_line_wrap(true);
+   label1->set_use_markup(false);
+   label1->set_selectable(false);
+   hbox1->pack_start(*image1, Gtk::PACK_SHRINK, 0);
+   hbox1->pack_start(*label1);
+
+   entry1->set_flags(Gtk::CAN_FOCUS);
+   entry1->set_text("* \"$@\"");
+
+   entry2->set_flags(Gtk::CAN_FOCUS);
+   entry2->set_text("* \"$@\"");
+
+   entry3->set_flags(Gtk::CAN_FOCUS);
+   entry3->set_text("* \"$@\"");
+
+
+   entry4->set_flags(Gtk::CAN_FOCUS);
+   entry4->set_text("* \"$@\"");
+
+   table1->set_border_width(2);
+   table1->set_row_spacings(5);
+   table1->set_col_spacings(4);
+   table1->attach(*label2, 0, 1, 0, 1, Gtk::FILL);
+   table1->attach(*label3, 0, 1, 1, 2, Gtk::FILL);
+   table1->attach(*label4, 0, 1, 2, 3, Gtk::FILL);
+   table1->attach(*label5, 0, 1, 3, 4, Gtk::FILL);
+   table1->attach(*entry1, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL);
+   table1->attach(*entry2, 1, 2, 1, 2, Gtk::EXPAND|Gtk::FILL);
+   table1->attach(*entry3, 1, 2, 2, 3, Gtk::EXPAND|Gtk::FILL);
+   table1->attach(*entry4, 1, 2, 3, 4, Gtk::EXPAND|Gtk::FILL);
+   hbox2->pack_start(*table1);
+   vbox1->pack_start(*hbox1);
+   vbox1->pack_start(*hbox2);
+
+   get_vbox()->pack_start(*vbox1);
+   set_title("Darimasen: first run");
+
+
+   add_action_widget(*okbutton1, -5);
+
+
+   okbutton1->signal_clicked().connect(sigc::mem_fun(*this, &dialog1_glade::confirm));
+
+
+   show_all_children();
+}
+
+
+/**********************/
+
+void dialog1_glade::confirm(){
+
+  if ( entry1->get_text() != "* \"$@\""){ //don't intentionally make a broken script.
+    Glib::ustring command = "#! /bin/sh\nexec " + entry1->get_text() + "\n";
+    try {
+      Glib::ustring exec1 = (getenv("HOME") +  (Glib::ustring)("/Choices/MIME-types/text"));
+      Gnome::Vfs::Handle write_handle;
+      write_handle.create(exec1, Gnome::Vfs::OPEN_WRITE, false, 0755);
+      write_handle.seek(Gnome::Vfs::SEEK_POS_START, 0);
+      GnomeVFSFileSize bytes_written = write_handle.write(command.data(), command.size());
+      }
+    catch(const Gnome::Vfs::exception) {}
+}
+
+  if ( entry2->get_text() != "* \"$@\""){ //don't intentionally make a broken script.
+    Glib::ustring command = "#! /bin/sh\nexec " + entry2->get_text() + "\n";
+    try {
+      Glib::ustring exec1 = (getenv("HOME") +  (Glib::ustring)("/Choices/MIME-types/audio"));
+      Gnome::Vfs::Handle write_handle;
+      write_handle.create(exec1, Gnome::Vfs::OPEN_WRITE, false, 0755);
+      write_handle.seek(Gnome::Vfs::SEEK_POS_START, 0);
+      GnomeVFSFileSize bytes_written = write_handle.write(command.data(), command.size());
+      }
+    catch(const Gnome::Vfs::exception) {}
+}
+
+  if ( entry3->get_text() != "* \"$@\""){ //don't intentionally make a broken script.
+    Glib::ustring command = "#! /bin/sh\nexec " + entry3->get_text() + "\n";
+    try {
+      Glib::ustring exec1 = (getenv("HOME") +  (Glib::ustring)("/Choices/MIME-types/video"));
+      Gnome::Vfs::Handle write_handle;
+      write_handle.create(exec1, Gnome::Vfs::OPEN_WRITE, false, 0755);
+      write_handle.seek(Gnome::Vfs::SEEK_POS_START, 0);
+      GnomeVFSFileSize bytes_written = write_handle.write(command.data(), command.size());
+      }
+    catch(const Gnome::Vfs::exception) {}
+}
+
+  if ( entry4->get_text() != "* \"$@\""){ //don't intentionally make a broken script.
+    Glib::ustring command = "#! /bin/sh\nexec " + entry4->get_text() + "\n";
+    try {
+      Glib::ustring exec1 = (getenv("HOME") +  (Glib::ustring)("/Choices/MIME-types/image"));
+      Gnome::Vfs::Handle write_handle;
+      write_handle.create(exec1, Gnome::Vfs::OPEN_WRITE, false, 0755);
+      write_handle.seek(Gnome::Vfs::SEEK_POS_START, 0);
+      GnomeVFSFileSize bytes_written = write_handle.write(command.data(), command.size());
+      }
+    catch(const Gnome::Vfs::exception) {}
+}
+
+      hide();
+      return;
+      }
+    
+
+
+
+
+
+/**********************/

Added: trunk/src/firsttime.h
===================================================================
--- trunk/src/firsttime.h	2005-04-09 01:15:34 UTC (rev 50)
+++ trunk/src/firsttime.h	2005-04-10 02:57:34 UTC (rev 51)
@@ -0,0 +1,48 @@
+/* Darimasen - firsttime.h - Copyright (C) 2004 - 2005 Sudrien, GPL */
+
+#ifndef FIRSTTIME_H
+#define FIRSTTIME_H
+
+#include "main.h"
+#include <gtkmm/dialog.h>
+#include <gtkmm/button.h>
+#include <gtkmm/buttonbox.h>
+#include <gtkmm/image.h>
+#include <gtkmm/label.h>
+#include <gtkmm/box.h>
+#include <gtkmm/entry.h>
+#include <gtkmm/table.h>
+
+/**********************/
+
+
+class dialog1_glade : public Gtk::Dialog
+{  
+
+
+        class Gtk::Button * okbutton1;
+        class Gtk::Image * image1;
+        class Gtk::Label * label1;
+        class Gtk::HBox * hbox1;
+        class Gtk::Label * label2;
+        class Gtk::Label * label3;
+        class Gtk::Label * label4;
+        class Gtk::Label * label5;
+        class Gtk::Entry * entry1;
+        class Gtk::Entry * entry2;
+        class Gtk::Entry * entry3;
+        class Gtk::Entry * entry4;
+        class Gtk::Table * table1;
+        class Gtk::HBox * hbox2;
+        class Gtk::VBox * vbox1;
+
+        void confirm();
+      
+public:
+        
+        dialog1_glade();
+};
+
+/**********************/
+
+#endif //FIRSTTIME_H

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-09 01:15:34 UTC (rev 50)
+++ trunk/src/iconmodes.cpp	2005-04-10 02:57:34 UTC (rev 51)
@@ -493,14 +493,14 @@
 
 
   radiobutton1 = new class Gtk::RadioButton(_RadioBGroup_radiobutton1, 
-    "Set Mime For \"" + mimeType.substr(0, mimeType.find("_")) + "\"" );
+    "Set Action For \"" + mimeType.substr(0, mimeType.find("_")) + "\"" );
 
   radiobutton1->signal_clicked().connect(
       sigc::bind<Glib::ustring >( sigc::mem_fun(*this,
       &DaIconModes::ChooseActionDialogue::GetCurrentAction), mimeType.substr(0, mimeType.find("_")) ));
 
  radiobutton2 = new class Gtk::RadioButton(_RadioBGroup_radiobutton1,
-      "Set Mime For \"" + mimeType + "\"")  ;
+      "Set Action For \"" + mimeType + "\"")  ;
 
   radiobutton2->signal_clicked().connect(
       sigc::bind<Glib::ustring >( sigc::mem_fun(*this,
@@ -593,7 +593,6 @@
       write_handle.create(exec1, Gnome::Vfs::OPEN_WRITE, false, 0755);
       write_handle.seek(Gnome::Vfs::SEEK_POS_START, 0);
       GnomeVFSFileSize bytes_written = write_handle.write(command.data(), command.size());
-  //  parent->set_message("New action set.");
       }
     catch(const Gnome::Vfs::exception) {
   //  parent->set_message("Couldn't write new definition.");

Modified: trunk/src/main.cpp
===================================================================
--- trunk/src/main.cpp	2005-04-09 01:15:34 UTC (rev 50)
+++ trunk/src/main.cpp	2005-04-10 02:57:34 UTC (rev 51)
@@ -1,15 +1,43 @@
 /* Darimasen - main.cpp - Copyright (C) 2004 - 2005 Sudrien, GPL */
  
 
-#include "main.h"
+#include "main.h"
+#include "firsttime.h"
 
 /**********************/
 
 int main(int argc, char *argv[])
 {
   Gtk::Main kit(argc, argv);
-  Gnome::Vfs::init();
+  Gnome::Vfs::init();
 
+  // check for mime definitions. 
+  { 
+    Glib::ustring fuz = getenv("HOME") ;
+    fuz += "/Choices";
+    Glib::RefPtr<Gnome::Vfs::Uri> fuzz = Gnome::Vfs::Uri::create(fuz);
+    if (!fuzz->uri_exists()){
+
+  gnome_vfs_make_directory(fuz.c_str(),493);
+  
+      }
+
+
+
+   fuz += "/MIME-types";
+   Glib::RefPtr<Gnome::Vfs::Uri> fuz2 = Gnome::Vfs::Uri::create(fuz);
+    if (!fuz2->uri_exists()){
+
+  gnome_vfs_make_directory(fuz.c_str(),493);
+    dialog1_glade window;
+  Gtk::Main::run(window); 
+
+      }
+
+  }
+
+
+
   std::vector<Glib::ustring> path;
 
   for( int i=1; i < argc; i++){
@@ -38,12 +66,8 @@
           }
         // URL is relative, but pointing to file
         else{
-          try{
-            Glib::file_get_contents(x->get_path().substr(0,x->get_path().length()-1) );
             x = x->get_parent();
             path.push_back(x->get_path()+slash);
-            }
-          catch(const Glib::Error) {/*non-existant file OR folder*/}
           }
         }
       }
@@ -58,10 +82,7 @@
 
   std::cout << "Tabs opened should be for:\n";
   for(int i =0; i< path.size();i++)
-      std::cout << path[i]
-                << /*" " 
-                << path[i].substr(path[i].rfind(slash, path[i].length() -2)+1)
-                <<*/ "\n";
+      std::cout << path[i] <<  "\n";
 
   Darimasen window(path);
   Gtk::Main::run(window); 



From darimasen-svn-admin at lists.berlios.de  Mon Apr 11 07:24:19 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Mon, 11 Apr 2005 07:24:19 +0200
Subject: [Darimasen-svn] r52 - trunk/src
Message-ID: <200504110524.j3B5OJF8000752@sheep.berlios.de>

Author: sudrien
Date: 2005-04-11 07:23:30 +0200 (Mon, 11 Apr 2005)
New Revision: 52

Modified:
   trunk/src/darimasen.cpp
   trunk/src/iconmodes.cpp
   trunk/src/iconmodes.h
Log:
cp mv ln del started - doesn't update listing

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-10 02:57:34 UTC (rev 51)
+++ trunk/src/darimasen.cpp	2005-04-11 05:23:30 UTC (rev 52)
@@ -157,7 +157,11 @@
 //Decides the action of the menuItem, more sophisticated than the activate signal. 
 //its comment should always be somewhere.
 
-bool Darimasen::DarimasenMenu::DaMenuSelect(GdkEventButton* event, const Glib::ustring path, guint pos, bool first){
+bool Darimasen::DarimasenMenu::DaMenuSelect(
+      GdkEventButton* event,
+      const Glib::ustring path,
+      guint pos,
+      bool first){
 
   if ((event->type == GDK_BUTTON_PRESS) && (event->button == 2) ) //middle
   {

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-10 02:57:34 UTC (rev 51)
+++ trunk/src/iconmodes.cpp	2005-04-11 05:23:30 UTC (rev 52)
@@ -80,10 +80,10 @@
 /**********************/
 
 bool DaIconModes::addEntry(
-    const Glib::ustring& rel_path,
-    const Glib::RefPtr<const Gnome::Vfs::FileInfo>& info,
+    Glib::ustring rel_path,
+    Glib::RefPtr<const Gnome::Vfs::FileInfo> info,
     bool recursing_will_loop,
-    bool& recurse) {
+    bool recurse) {
 
   if (info->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY){
       sideconContainer[slotsUsed]->set_visible_window(false);
@@ -336,6 +336,48 @@
 
 /**********************/
 
+
+void DaIconModes::RunFileAsText(const Glib::ustring file) {
+
+  // see if the file is executable 
+
+  Gnome::Vfs::Handle read_handle;
+  Gnome::Vfs::Handle exec_handle;
+  Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
+  
+  try{
+    read_handle.open( parent->history[position].top() + file, Gnome::Vfs::OPEN_READ);
+    info = read_handle.get_file_info(
+      Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
+      Gnome::Vfs::FILE_INFO_FORCE_SLOW_MIME_TYPE );
+    }
+  catch(const Gnome::Vfs::exception& ex){
+    std::cout << "Does not exist.\n";
+    return;
+    }
+
+
+  Glib::ustring exec = getenv("HOME");
+  try{
+    exec += "/Choices/MIME-types/text";
+    exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
+
+    exec += " \""  + parent->history[position].top() + file + "\"";
+    Glib::spawn_command_line_async(exec);
+
+    parent->set_message(exec + " was run.");
+    return;
+
+    }
+  catch(const Gnome::Vfs::exception& ex){
+    }
+
+}
+
+
+
+/**********************/
+
 void DaIconModes::SetRunAction(const Glib::ustring file) {
 
   Gnome::Vfs::Handle read_handle;
@@ -367,50 +409,65 @@
 // make a generic icon action
 bool DaIconModes::on_eventbox_button_press(GdkEventButton* event, const Glib::ustring Icon){
 
-
-
   if ((event->type == GDK_BUTTON_PRESS) && (event->button == 1)  && (lastclick < event->time)){
-lastclick = event->time + 1000;
-
-     RunFile(Icon);
-     static int x;
-     return true;
+    lastclick = event->time + 1000;
+    RunFile(Icon);
+ //   static int x;
+    return true;
     }
 
   if ((event->type == GDK_BUTTON_PRESS) && (event->button == 3)){
-    Gtk::Menu::MenuList& menulist = m_Menu_Popup.items();
+    //Gtk::Menu::MenuList& menulist = m_Menu_Popup.items();
 
 
-    for( int i=9; i > 0; i--)
+    for( int i=10; i > 0; i--)
       m_Menu_Popup.items().pop_back();
+//std::cout << Icon << "\n";
 
-
         int startAtPos = 0;
     // following is needed so underscores show correctly
-    menulist.push_back( Gtk::Menu_Helpers::MenuElem("Open \"" + underscoreSafe(Icon) + "\"",
+    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Open \"" + underscoreSafe(Icon) + "\"",
       sigc::bind<Glib::ustring >(
         sigc::mem_fun(*this, &DaIconModes::RunFile),Icon)));
 
-    menulist.push_back( Gtk::Menu_Helpers::MenuElem("Set Run Action...",
+
+    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Open as text ",
+      sigc::bind<Glib::ustring >(
+        sigc::mem_fun(*this, &DaIconModes::RunFileAsText),Icon)));
+
+
+    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::SeparatorElem());
+
+
+    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Set Run Action...",
       sigc::bind<Glib::ustring>(
         sigc::mem_fun(*this, &DaIconModes::SetRunAction), Icon  )));
 
-    menulist.push_back( Gtk::Menu_Helpers::MenuElem("Permissions...",
+    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Permissions...",
       sigc::bind<Glib::ustring>(
         sigc::mem_fun(*this, &DaIconModes::SetPermissions), Icon  )));
 
-    menulist.push_back( Gtk::Menu_Helpers::SeparatorElem());
+    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::SeparatorElem());
 
+    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Copy To...",
+      sigc::bind<Glib::ustring>(
+        sigc::mem_fun(*this, &DaIconModes::copy), Icon  )));
 
-// this stuff needs tab completion to be usefull.
-    //menulist.push_back( Gtk::Menu_Helpers::MenuElem("Move To..."));
-    //menulist.push_back( Gtk::Menu_Helpers::MenuElem("Copy To..."));
 
-    //menulist.push_back( Gtk::Menu_Helpers::MenuElem("Delete "));
-    //menulist.push_back( Gtk::Menu_Helpers::MenuElem("Link"));
-    //menulist.push_back( Gtk::Menu_Helpers::SeparatorElem());
-    //menulist.push_back( Gtk::Menu_Helpers::MenuElem("Properties... "));
 
+    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Move To...",
+      sigc::bind<Glib::ustring>(
+        sigc::mem_fun(*this, &DaIconModes::move), Icon  )));
+
+    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Link To...",
+      sigc::bind<Glib::ustring>(
+        sigc::mem_fun(*this, &DaIconModes::link), Icon  )));
+
+    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Delete ",
+      sigc::bind<Glib::ustring>(
+        sigc::mem_fun(*this, &DaIconModes::unlinkify), Icon  )));
+
+
     m_Menu_Popup.popup(event->button, event->time);
     return true;
     }
@@ -624,9 +681,37 @@
     parent->set_message("Err... Setting error?");
     }
   }
+
+/**********************/
+
+void DaIconModes::copy(const Glib::ustring file) {
+  CopyDialogue * cp =  new CopyDialogue( parent->history[position].top() + file );
+  cp->show();
+  }
 
 /**********************/
 
+void DaIconModes::move(const Glib::ustring file) {
+  MoveDialogue * mv =  new MoveDialogue( parent->history[position].top() + file );
+  mv->show();
+  }
+
+/**********************/
+
+void DaIconModes::link(const Glib::ustring file) {
+  LinkDialogue * ln =  new LinkDialogue( parent->history[position].top() + file );
+  ln->show();
+  }
+
+/**********************/
+
+void DaIconModes::unlinkify(const Glib::ustring file) {
+  DeleteDialogue * del =  new DeleteDialogue( parent->history[position].top() + file );
+  del->show();
+  }
+
+/**********************/
+
 DaIconModes::SetPermissionsDialogue::SetPermissionsDialogue(
     Glib::RefPtr<Gnome::Vfs::FileInfo> info, Glib::ustring path){
 fullPath = path;
@@ -841,5 +926,214 @@
   redraw();
   }
 
+/**********************/
 
+DaIconModes::CopyDialogue::CopyDialogue(Glib::ustring file){
+   cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
+   okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
+   label = Gtk::manage(new class Gtk::Label(file));
+   entry = Gtk::manage(new class Gtk::Entry());
+
+   okbutton->set_flags(Gtk::CAN_FOCUS);
+   okbutton->set_flags(Gtk::CAN_DEFAULT);
+   cancelbutton->set_flags(Gtk::CAN_FOCUS);
+
+   set_title("Copy File to");
+   set_modal(true);
+
+   get_vbox()->pack_start(*label, Gtk::PACK_SHRINK, 0);
+   get_vbox()->pack_start(*entry, Gtk::PACK_SHRINK, 0);
+
+
+   entry->set_text(file);
+
+   add_action_widget(*cancelbutton, -6);
+   add_action_widget(*okbutton, -5);
+
+
+   okbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::CopyDialogue::onOk));
+   cancelbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::CopyDialogue::onCancel));
+
+
+   show_all_children();
+  }
+
 /**********************/
+
+void DaIconModes::CopyDialogue::onOk(){
+  std::cout << "copying " << label->get_text()
+    << "\nto " << entry->get_text() << "\n\n";
+
+//rename(label->get_text().c_str(), entry->get_text().c_str());
+    Glib::spawn_command_line_async((Glib::ustring)"cp "  + label->get_text().c_str() + (Glib::ustring)" " + entry->get_text().c_str());
+  hide();
+  }
+
+/**********************/
+
+void DaIconModes::CopyDialogue::onCancel(){
+  hide();
+  }
+
+/**********************/
+
+DaIconModes::CopyDialogue::~CopyDialogue(){}
+
+/**********************/
+/**********************/
+
+DaIconModes::MoveDialogue::MoveDialogue(Glib::ustring file){
+   cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
+   okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
+   label = Gtk::manage(new class Gtk::Label(file));
+   entry = Gtk::manage(new class Gtk::Entry());
+
+   okbutton->set_flags(Gtk::CAN_FOCUS);
+   okbutton->set_flags(Gtk::CAN_DEFAULT);
+   cancelbutton->set_flags(Gtk::CAN_FOCUS);
+
+   set_title("Move File to");
+   set_modal(true);
+
+   get_vbox()->pack_start(*label, Gtk::PACK_SHRINK, 0);
+   get_vbox()->pack_start(*entry, Gtk::PACK_SHRINK, 0);
+
+
+   entry->set_text(file);
+
+   add_action_widget(*cancelbutton, -6);
+   add_action_widget(*okbutton, -5);
+
+
+   okbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::MoveDialogue::onOk));
+   cancelbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::MoveDialogue::onCancel));
+
+
+   show_all_children();
+  }
+
+/**********************/
+
+void DaIconModes::MoveDialogue::onOk(){
+  std::cout << "moveing " << label->get_text()
+    << "\nto " << entry->get_text() << "\n\n";
+
+ // rename(label->get_text().c_str(), entry->get_text().c_str());
+
+    Glib::spawn_command_line_async((Glib::ustring)"mv "  + label->get_text().c_str() + (Glib::ustring)" " + entry->get_text().c_str());
+  hide();
+  }
+
+/**********************/
+
+void DaIconModes::MoveDialogue::onCancel(){
+  hide();
+  }
+
+/**********************/
+
+DaIconModes::MoveDialogue::~MoveDialogue(){}
+
+/**********************/
+/**********************/
+
+DaIconModes::LinkDialogue::LinkDialogue(Glib::ustring file){
+   cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
+   okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
+   label = Gtk::manage(new class Gtk::Label(file));
+   entry = Gtk::manage(new class Gtk::Entry());
+
+   okbutton->set_flags(Gtk::CAN_FOCUS);
+   okbutton->set_flags(Gtk::CAN_DEFAULT);
+   cancelbutton->set_flags(Gtk::CAN_FOCUS);
+
+   set_title("Link File to");
+   set_modal(true);
+
+   get_vbox()->pack_start(*label, Gtk::PACK_SHRINK, 0);
+   get_vbox()->pack_start(*entry, Gtk::PACK_SHRINK, 0);
+
+
+   entry->set_text(file);
+
+   add_action_widget(*cancelbutton, -6);
+   add_action_widget(*okbutton, -5);
+
+
+   okbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::LinkDialogue::onOk));
+   cancelbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::LinkDialogue::onCancel));
+
+
+   show_all_children();
+  }
+
+/**********************/
+
+void DaIconModes::LinkDialogue::onOk(){
+  std::cout << "linking " << label->get_text()
+    << "\nto " << entry->get_text() << "\n\n";
+
+  //symlink(label->get_text().c_str(), entry->get_text().c_str());
+    Glib::spawn_command_line_async((Glib::ustring)"ln -s "  + label->get_text().c_str() + (Glib::ustring)" " + entry->get_text().c_str());
+  hide();
+  }
+
+/**********************/
+
+void DaIconModes::LinkDialogue::onCancel(){
+  hide();
+  }
+
+/**********************/
+
+DaIconModes::LinkDialogue::~LinkDialogue(){}
+
+/**********************/
+/**********************/
+
+DaIconModes::DeleteDialogue::DeleteDialogue(Glib::ustring file){
+   cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
+   okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
+   label = Gtk::manage(new class Gtk::Label(file));
+
+   okbutton->set_flags(Gtk::CAN_FOCUS);
+   okbutton->set_flags(Gtk::CAN_DEFAULT);
+   cancelbutton->set_flags(Gtk::CAN_FOCUS);
+
+   set_title("Delete File");
+   set_modal(true);
+
+   get_vbox()->pack_start(*label, Gtk::PACK_SHRINK, 0);
+
+   add_action_widget(*cancelbutton, -6);
+   add_action_widget(*okbutton, -5);
+
+
+   okbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::DeleteDialogue::onOk));
+   cancelbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::DeleteDialogue::onCancel));
+
+
+   show_all_children();
+  }
+
+/**********************/
+
+void DaIconModes::DeleteDialogue::onOk(){
+  std::cout << "delete " << label->get_text() << "\n\n";
+
+ // unlink( label->get_text().c_str() );
+    Glib::spawn_command_line_async((Glib::ustring)"rm "  + label->get_text().c_str());
+  hide();
+  }
+
+/**********************/
+
+void DaIconModes::DeleteDialogue::onCancel(){
+  hide();
+  }
+
+/**********************/
+
+DaIconModes::DeleteDialogue::~DeleteDialogue(){}
+
+/**********************/

Modified: trunk/src/iconmodes.h
===================================================================
--- trunk/src/iconmodes.h	2005-04-10 02:57:34 UTC (rev 51)
+++ trunk/src/iconmodes.h	2005-04-11 05:23:30 UTC (rev 52)
@@ -14,6 +14,7 @@
 #include "iconmodes.h"
 #include "darimasen.h"
 #include <gtkmm/separator.h>
+#include <unistd.h>
 
 /**********************/
 
@@ -26,16 +27,15 @@
     Gtk::Image * image1;
     Gtk::Label * FileName;
     Gtk::Label * FilePermissions ;
-  Gtk::Label * FileSizeInfo;
-    public:
+    Gtk::Label * FileSizeInfo;
+  public:
     Sidecon(Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>&, DaIconModes&);
-~Sidecon(){
-delete image1;
-delete FileName;
-delete FilePermissions;
-delete FileSizeInfo;
-
-}
+    ~Sidecon(){
+      delete image1;
+      delete FileName;
+      delete FilePermissions;
+      delete FileSizeInfo;
+      }
 
     };
 
@@ -103,17 +103,77 @@
     ~SetPermissionsDialogue();
     };
 
+  class CopyDialogue : public Gtk::Dialog {
+    class Gtk::Button * cancelbutton;
+    class Gtk::Button * okbutton;
+    class Gtk::Label * label;
+    class Gtk::Entry * entry;
+    void onOk();
+    void onCancel();
+
+  public:
+    CopyDialogue(Glib::ustring);
+    ~CopyDialogue();
+    };
+//
+  class LinkDialogue : public Gtk::Dialog {
+    class Gtk::Button * cancelbutton;
+    class Gtk::Button * okbutton;
+    class Gtk::Label * label;
+    class Gtk::Entry * entry;
+    void onOk();
+    void onCancel();
+
+  public:
+    LinkDialogue(Glib::ustring);
+    ~LinkDialogue();
+    };
+//
+  class MoveDialogue : public Gtk::Dialog {
+    class Gtk::Button * cancelbutton;
+    class Gtk::Button * okbutton;
+    class Gtk::Label * label;
+    class Gtk::Entry * entry;
+    void onOk();
+    void onCancel();
+
+  public:
+    MoveDialogue(Glib::ustring);
+    ~MoveDialogue();
+    };
+//
+  class DeleteDialogue : public Gtk::Dialog {
+    class Gtk::Button * cancelbutton;
+    class Gtk::Button * okbutton;
+    class Gtk::Label * label;
+    void onOk();
+    void onCancel();
+
+  public:
+    DeleteDialogue(Glib::ustring);
+    ~DeleteDialogue();
+    };
+//
+
   class Darimasen * parent;
 
 
 
   void RunFile(const Glib::ustring);
+  void RunFileAsText(const Glib::ustring);
+
   void SetRunAction(const Glib::ustring);
   void SetPermissions(const Glib::ustring);
+
+  void copy(const Glib::ustring);
+  void move(const Glib::ustring);
+  void link(const Glib::ustring);
+  void unlinkify(const Glib::ustring);
+
   bool on_eventbox_button_press(GdkEventButton*, const Glib::ustring);
   void on_size_allocate(Gtk::Allocation&);
   void redraw();
-  bool addEntry(const Glib::ustring&, const Glib::RefPtr<const Gnome::Vfs::FileInfo>&, bool, bool&);
+  bool addEntry(Glib::ustring, Glib::RefPtr<const Gnome::Vfs::FileInfo>, bool, bool);
   Glib::RefPtr<Gdk::Pixbuf> getIcon(Glib::ustring, guint);
 
 



From darimasen-svn-admin at lists.berlios.de  Tue Apr 12 07:08:09 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Tue, 12 Apr 2005 07:08:09 +0200
Subject: [Darimasen-svn] r53 - in trunk: . src
Message-ID: <200504120508.j3C589x8006570@sheep.berlios.de>

Author: sudrien
Date: 2005-04-12 07:07:52 +0200 (Tue, 12 Apr 2005)
New Revision: 53

Modified:
   trunk/TODO
   trunk/src/darimasen.cpp
   trunk/src/darimasen.h
   trunk/src/iconmodes.cpp
   trunk/src/iconmodes.h
Log:
updating the window on operations

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2005-04-11 05:23:30 UTC (rev 52)
+++ trunk/TODO	2005-04-12 05:07:52 UTC (rev 53)
@@ -6,7 +6,7 @@
 Full Folder & Icon context menus.
 Keyboard navigation of menus (Alt+1 opens root menu, Alt+2 opens first child, etc)
 
-Move, copy, delete of files
+Move, copy, delete of files needs more checking
 
 move, copy, delete of folder
 move, copy of folder contents

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-11 05:23:30 UTC (rev 52)
+++ trunk/src/darimasen.cpp	2005-04-12 05:07:52 UTC (rev 53)
@@ -516,6 +516,9 @@
 Darimasen::Darimasen(std::vector<Glib::ustring> paths){
   set_title("Darimasen");
   set_default_size(500, 330);
+
+  mode = 0;
+
   try{
     set_icon_from_file( (Glib::ustring)DATADIR + (Glib::ustring)"/icons/hicolor/48x48/apps/darimasen.png"  );
   }
@@ -582,10 +585,10 @@
   BackButton->show();
   
   ChangeIconMode = new Gtk::ToolButton(Gtk::StockID("gtk-convert"));
-  //ChangeIconMode->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fChangeIconMode));
+  ChangeIconMode->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fChangeIconMode));
   TopBar.append(*ChangeIconMode);
-  ChangeIconMode->set_sensitive(false);
-  //ChangeIconMode->show();
+  //ChangeIconMode->set_sensitive(false);
+  ChangeIconMode->show();
    
   ViewTree = new Gtk::ToggleToolButton(Gtk::StockID("gtk-index"));
   //ViewTree->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fViewTree));
@@ -745,4 +748,32 @@
    Info.pop();
    Info.push(in);
 }
+
 /**********************/
+
+
+// this is called on file operations - since there is more then one tab,
+// all of them should be checked to see if they should be updated.
+void Darimasen::updateView(Glib::ustring sourceDir, Glib::ustring targetDir){
+//  std::cout << sourceDir << "\n" << targetDir << "\n\n";
+
+  for(int i = 0; i < history.size(); i++){
+    if( history[i].top() == sourceDir || history[i].top() == targetDir ){
+      ChangeCurrentPath(history[i].top(),false,false);
+      }
+    }
+}
+
+/**********************/
+
+ void Darimasen::fChangeIconMode(){
+  mode = (mode + 1) % 2; // increment, mod of possibilities.
+  std::cout << "mode = " << mode << "\n"; 
+
+ // for(int i = 0; i < history.size(); i++){
+ //     ChangeCurrentPath(history[i].top(),false,false);
+ //   } 
+
+  }
+
+/**********************/

Modified: trunk/src/darimasen.h
===================================================================
--- trunk/src/darimasen.h	2005-04-11 05:23:30 UTC (rev 52)
+++ trunk/src/darimasen.h	2005-04-12 05:07:52 UTC (rev 53)
@@ -140,8 +140,10 @@
   void fAbout();
   void fShowHidden();
   void fPrintHist();
+  void fChangeIconMode();
 
 
+
   std::vector< class DaIconModes* > IconModeList;
   std::vector< class Gtk::EventBox* > EventBoxList;
 
@@ -153,6 +155,8 @@
   Gtk::CheckMenuItem * optShowHidden;
   void set_message(Glib::ustring);
   std::vector< std::stack<Glib::ustring> > history;
+  void updateView(Glib::ustring, Glib::ustring);
+  short mode;
   };
 
 /**********************/

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-11 05:23:30 UTC (rev 52)
+++ trunk/src/iconmodes.cpp	2005-04-12 05:07:52 UTC (rev 53)
@@ -25,14 +25,14 @@
   catch(const Gnome::Vfs::exception&){std::cout << "Miscount?\n";}
 
 
-  iconmode = 0;
+ // iconmode = 0;
 
   slotsUsed = 0;
   IconsHigh = 0;
   set_visible_window(false);
   hidden = new int[filesAtPath];
 
-  if(iconmode == 0){
+  if(parent->mode == 0){
     sideconContainer = new Gtk::EventBox*[filesAtPath];
     for(int c = 0; c < filesAtPath; c++){
       sideconContainer[c] = new Gtk::EventBox;
@@ -60,23 +60,21 @@
 DaIconModes::~DaIconModes(){
 
   // cleanup on aisles 1, 2, 3 ... and so on.
-  if(iconmode == 0){
-  for(int c = 0; c < filesAtPath; c++){
-    Gtk::Widget * tmp = sideconContainer[c]->get_child();
-    if (tmp)
-      delete tmp;
-    }
+// there is an issue that this could be deleting while in the wrong mode - yeah.
+  if(parent->mode == 0 ){
+    for(int c = 0; c < filesAtPath; c++){
+      Gtk::Widget * tmp = sideconContainer[c]->get_child();
+      if (tmp)
+        delete tmp;
+        }
 
-  for(int c = 0; c < filesAtPath; c++){
-    delete sideconContainer[c];
-    }
-  delete sideconContainer;
-  delete hidden;
-
-
-  //delete sideconContainer; //well, valgrind --tool=addrcheck said this line was bad.
+    for(int c = 0; c < filesAtPath; c++){
+      delete sideconContainer[c];
+      }
+    delete sideconContainer;
+    delete hidden;
+  }
 }
-}
 /**********************/
 
 bool DaIconModes::addEntry(
@@ -91,7 +89,7 @@
 
 hidden[slotsUsed] = (info->get_name().substr(0,1) == ".");
 
-switch(iconmode){
+switch(parent->mode){
 case 0: {
 Sidecon * tempPathS = new Sidecon( parent->history[position].top(), info, *this);
       tempPathS->show();
@@ -480,7 +478,7 @@
 void DaIconModes::on_size_allocate(Gtk::Allocation& allocation){
 
 
-  if(iconmode == 0){
+  if(parent->mode == 0){
     int oldie = IconsHigh;
     IconsHigh = allocation.get_height() / 58;
   
@@ -492,7 +490,7 @@
     }
 
 
-  if(iconmode == 1 ){
+  if(parent->mode == 1 ){
    
     Gtk::Widget * tmp = get_child();
 if (!tmp){
@@ -525,7 +523,7 @@
               Gtk::FILL, Gtk::FILL, 4, 4);
           sideconContainer[i]->show();
           y_pos++; 
-          if(iconmode == 0){
+          if(parent->mode == 0){
             if ( y_pos + 1 > IconsHigh){
               y_pos = 0;
               x_pos++;
@@ -685,28 +683,28 @@
 /**********************/
 
 void DaIconModes::copy(const Glib::ustring file) {
-  CopyDialogue * cp =  new CopyDialogue( parent->history[position].top() + file );
+  CopyDialogue * cp =  new CopyDialogue( parent->history[position].top() + file , *parent);
   cp->show();
   }
 
 /**********************/
 
 void DaIconModes::move(const Glib::ustring file) {
-  MoveDialogue * mv =  new MoveDialogue( parent->history[position].top() + file );
+  MoveDialogue * mv =  new MoveDialogue( parent->history[position].top() + file , *parent);
   mv->show();
   }
 
 /**********************/
 
 void DaIconModes::link(const Glib::ustring file) {
-  LinkDialogue * ln =  new LinkDialogue( parent->history[position].top() + file );
+  LinkDialogue * ln =  new LinkDialogue( parent->history[position].top() + file , *parent);
   ln->show();
   }
 
 /**********************/
 
 void DaIconModes::unlinkify(const Glib::ustring file) {
-  DeleteDialogue * del =  new DeleteDialogue( parent->history[position].top() + file );
+  DeleteDialogue * del =  new DeleteDialogue( parent->history[position].top() + file , *parent);
   del->show();
   }
 
@@ -928,7 +926,9 @@
 
 /**********************/
 
-DaIconModes::CopyDialogue::CopyDialogue(Glib::ustring file){
+DaIconModes::CopyDialogue::CopyDialogue(Glib::ustring file, Darimasen& parent){
+
+grandparent = &parent;
    cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
    okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
    label = Gtk::manage(new class Gtk::Label(file));
@@ -961,11 +961,16 @@
 /**********************/
 
 void DaIconModes::CopyDialogue::onOk(){
-  std::cout << "copying " << label->get_text()
-    << "\nto " << entry->get_text() << "\n\n";
+//  std::cout << "copying " << label->get_text()
+//    << "\nto " << entry->get_text() << "\n\n";
 
 //rename(label->get_text().c_str(), entry->get_text().c_str());
-    Glib::spawn_command_line_async((Glib::ustring)"cp "  + label->get_text().c_str() + (Glib::ustring)" " + entry->get_text().c_str());
+    Glib::spawn_command_line_async((Glib::ustring)"cp \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str()+ "\"");
+
+  grandparent->updateView(
+    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
+    entry->get_text().substr(0, entry->get_text().rfind(slash,entry->get_text().length())+1));
+
   hide();
   }
 
@@ -982,7 +987,9 @@
 /**********************/
 /**********************/
 
-DaIconModes::MoveDialogue::MoveDialogue(Glib::ustring file){
+DaIconModes::MoveDialogue::MoveDialogue(Glib::ustring file, Darimasen& parent){
+
+grandparent = &parent;
    cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
    okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
    label = Gtk::manage(new class Gtk::Label(file));
@@ -1015,12 +1022,17 @@
 /**********************/
 
 void DaIconModes::MoveDialogue::onOk(){
-  std::cout << "moveing " << label->get_text()
-    << "\nto " << entry->get_text() << "\n\n";
+//  std::cout << "moveing " << label->get_text()
+//    << "\nto " << entry->get_text() << "\n\n";
 
  // rename(label->get_text().c_str(), entry->get_text().c_str());
 
-    Glib::spawn_command_line_async((Glib::ustring)"mv "  + label->get_text().c_str() + (Glib::ustring)" " + entry->get_text().c_str());
+    Glib::spawn_command_line_async((Glib::ustring)"mv \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str()+ "\"");
+
+  grandparent->updateView(
+    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
+    entry->get_text().substr(0, entry->get_text().rfind(slash,entry->get_text().length())+1));
+
   hide();
   }
 
@@ -1037,7 +1049,9 @@
 /**********************/
 /**********************/
 
-DaIconModes::LinkDialogue::LinkDialogue(Glib::ustring file){
+DaIconModes::LinkDialogue::LinkDialogue(Glib::ustring file, Darimasen& parent){
+
+grandparent = &parent;
    cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
    okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
    label = Gtk::manage(new class Gtk::Label(file));
@@ -1070,11 +1084,16 @@
 /**********************/
 
 void DaIconModes::LinkDialogue::onOk(){
-  std::cout << "linking " << label->get_text()
-    << "\nto " << entry->get_text() << "\n\n";
+//  std::cout << "linking " << label->get_text()
+ //   << "\nto " << entry->get_text() << "\n\n";
 
   //symlink(label->get_text().c_str(), entry->get_text().c_str());
-    Glib::spawn_command_line_async((Glib::ustring)"ln -s "  + label->get_text().c_str() + (Glib::ustring)" " + entry->get_text().c_str());
+    Glib::spawn_command_line_async((Glib::ustring)"ln -s \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str() + "\"");
+
+  grandparent->updateView(
+    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
+    entry->get_text().substr(0, entry->get_text().rfind(slash,entry->get_text().length())+1));
+
   hide();
   }
 
@@ -1091,7 +1110,9 @@
 /**********************/
 /**********************/
 
-DaIconModes::DeleteDialogue::DeleteDialogue(Glib::ustring file){
+DaIconModes::DeleteDialogue::DeleteDialogue(Glib::ustring file, Darimasen& parent){
+
+grandparent = &parent;
    cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
    okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
    label = Gtk::manage(new class Gtk::Label(file));
@@ -1119,10 +1140,15 @@
 /**********************/
 
 void DaIconModes::DeleteDialogue::onOk(){
-  std::cout << "delete " << label->get_text() << "\n\n";
+//  std::cout << "delete " << label->get_text() << "\n\n";
 
  // unlink( label->get_text().c_str() );
-    Glib::spawn_command_line_async((Glib::ustring)"rm "  + label->get_text().c_str());
+  Glib::spawn_command_line_async((Glib::ustring)"rm \""  + label->get_text().c_str() + "\"");
+
+  grandparent->updateView(
+    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
+    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1));
+   //std::cout << label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1) ;
   hide();
   }
 

Modified: trunk/src/iconmodes.h
===================================================================
--- trunk/src/iconmodes.h	2005-04-11 05:23:30 UTC (rev 52)
+++ trunk/src/iconmodes.h	2005-04-12 05:07:52 UTC (rev 53)
@@ -111,8 +111,10 @@
     void onOk();
     void onCancel();
 
+    class Darimasen * grandparent;
+
   public:
-    CopyDialogue(Glib::ustring);
+    CopyDialogue(Glib::ustring, Darimasen&);
     ~CopyDialogue();
     };
 //
@@ -124,8 +126,10 @@
     void onOk();
     void onCancel();
 
+    class Darimasen * grandparent;
+
   public:
-    LinkDialogue(Glib::ustring);
+    LinkDialogue(Glib::ustring, Darimasen&);
     ~LinkDialogue();
     };
 //
@@ -137,8 +141,10 @@
     void onOk();
     void onCancel();
 
+    class Darimasen * grandparent;
+
   public:
-    MoveDialogue(Glib::ustring);
+    MoveDialogue(Glib::ustring, Darimasen&);
     ~MoveDialogue();
     };
 //
@@ -149,8 +155,10 @@
     void onOk();
     void onCancel();
 
+    class Darimasen * grandparent;
+
   public:
-    DeleteDialogue(Glib::ustring);
+    DeleteDialogue(Glib::ustring, Darimasen&);
     ~DeleteDialogue();
     };
 //
@@ -183,7 +191,7 @@
   Gtk::Menu m_Menu_Popup;
 
 
-  unsigned short iconmode;
+//  unsigned short iconmode;
   guint32 lastclick;
   guint slotsUsed;
   guint IconsHigh;



From darimasen-svn-admin at lists.berlios.de  Wed Apr 13 05:54:31 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Wed, 13 Apr 2005 05:54:31 +0200
Subject: [Darimasen-svn] r54 - trunk/src
Message-ID: <200504130354.j3D3sVZH027550@sheep.berlios.de>

Author: sudrien
Date: 2005-04-13 05:53:41 +0200 (Wed, 13 Apr 2005)
New Revision: 54

Modified:
   trunk/src/darimasen.cpp
   trunk/src/darimasen.h
   trunk/src/iconmodes.cpp
   trunk/src/iconmodes.h
   trunk/src/main.cpp
Log:
List icon view

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-12 05:07:52 UTC (rev 53)
+++ trunk/src/darimasen.cpp	2005-04-13 03:53:41 UTC (rev 54)
@@ -170,7 +170,7 @@
   }
   if ((event->type == GDK_BUTTON_PRESS) && (event->button == 1) ) //left
   {
-  parent->ChangeCurrentPath(path,true,first);
+  parent->ChangeTab(pos,path,true,first);
   return true;
   }
   if ((event->type == GDK_BUTTON_PRESS) && (event->button == 3) ) //right
@@ -462,8 +462,8 @@
 /**********************/
 
 // changing directories actually is making a new tab to substitute for the old one.
-void Darimasen::ChangeCurrentPath(Glib::ustring pathin, bool addPath, bool menuOnly){
-  guint nth = Tabber->get_current_page();
+void Darimasen::ChangeTab(guint nth, Glib::ustring pathin, bool addPath, bool menuOnly){
+ // guint nth = Tabber->get_current_page();
 
   if (addPath && !menuOnly){
     if (pathin.substr(pathin.length()-1) != "/")
@@ -722,7 +722,7 @@
 void Darimasen::fBack(){
   history[Tabber->get_current_page()].pop();
 
-  ChangeCurrentPath(history[Tabber->get_current_page()].top(),false,false);
+  ChangeTab(Tabber->get_current_page(),history[Tabber->get_current_page()].top(),false,false);
 
   if (history[Tabber->get_current_page()].size() == 1)
     BackButton->set_sensitive(false);
@@ -755,25 +755,31 @@
 // this is called on file operations - since there is more then one tab,
 // all of them should be checked to see if they should be updated.
 void Darimasen::updateView(Glib::ustring sourceDir, Glib::ustring targetDir){
-//  std::cout << sourceDir << "\n" << targetDir << "\n\n";
 
+  guint tmp = Tabber->get_current_page();
+
   for(int i = 0; i < history.size(); i++){
     if( history[i].top() == sourceDir || history[i].top() == targetDir ){
-      ChangeCurrentPath(history[i].top(),false,false);
+      ChangeTab(i,history[i].top(),false,false);
       }
     }
+
+  Tabber->set_current_page (tmp);
 }
 
 /**********************/
 
- void Darimasen::fChangeIconMode(){
+void Darimasen::fChangeIconMode(){
   mode = (mode + 1) % 2; // increment, mod of possibilities.
   std::cout << "mode = " << mode << "\n"; 
 
- // for(int i = 0; i < history.size(); i++){
- //     ChangeCurrentPath(history[i].top(),false,false);
- //   } 
+  guint tmp = Tabber->get_current_page();
 
+  for(int i = 0; i < history.size(); i++){
+      ChangeTab(i, history[i].top(),false,false);
+      } 
+
+  Tabber->set_current_page (tmp);
   }
 
 /**********************/

Modified: trunk/src/darimasen.h
===================================================================
--- trunk/src/darimasen.h	2005-04-12 05:07:52 UTC (rev 53)
+++ trunk/src/darimasen.h	2005-04-13 03:53:41 UTC (rev 54)
@@ -133,7 +133,7 @@
   void newTab(Glib::ustring);
   void tabberSwitched(GtkNotebookPage*, guint);
   void addTab(guint);
-  void ChangeCurrentPath(Glib::ustring path, bool, bool);
+  void ChangeTab(guint, Glib::ustring, bool, bool);
   void removeTab(guint);
   void fBack();
   void fQuit();

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-12 05:07:52 UTC (rev 53)
+++ trunk/src/iconmodes.cpp	2005-04-13 03:53:41 UTC (rev 54)
@@ -8,10 +8,10 @@
 DaIconModes::DaIconModes(guint pos, Darimasen& myParent) {    
 
   parent = &myParent;
-
-position = pos;
+  position = pos;
+  mode = parent->mode;
 
-lastclick = 0;
+  lastclick = 0;
   filesAtPath = 0;
   try{
     Gnome::Vfs::DirectoryHandle handle;
@@ -24,57 +24,82 @@
     }
   catch(const Gnome::Vfs::exception&){std::cout << "Miscount?\n";}
 
-
- // iconmode = 0;
-
-  slotsUsed = 0;
-  IconsHigh = 0;
   set_visible_window(false);
   hidden = new int[filesAtPath];
+
 
-  if(parent->mode == 0){
-    sideconContainer = new Gtk::EventBox*[filesAtPath];
-    for(int c = 0; c < filesAtPath; c++){
-      sideconContainer[c] = new Gtk::EventBox;
-      }
+      slotsUsed = 0;
+      IconsHigh = 0;
+
+  switch(mode){
+    case 0: // sidecon
+      //slotsUsed = 0;
+      //IconsHigh = 0;
+      sideconContainer = new Gtk::EventBox*[filesAtPath];
+      for(int c = 0; c < filesAtPath; c++){
+        sideconContainer[c] = new Gtk::EventBox;
+        }
 
-    try {
-        // Call on_visit() for each file.
-        // The options specify that we want to visit the files at input_uri_string,
-        // get the mime type the fast way and protect against loops.
-      Gnome::Vfs::DirectoryHandle::visit( parent->history[position].top(), Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
-                                             Gnome::Vfs::FILE_INFO_FORCE_FAST_MIME_TYPE |
-                                             Gnome::Vfs::FILE_INFO_FOLLOW_LINKS ,
-                                             Gnome::Vfs::DIRECTORY_VISIT_LOOPCHECK,
-                                             sigc::mem_fun(*this,&DaIconModes::addEntry));
-      }
-    catch(const Gnome::Vfs::exception& ex){/*this is required.*/}
-    }      
+      try {
+          // Call on_visit() for each file.
+          // The options specify that we want to visit the files at input_uri_string,
+          // get the mime type the fast way and protect against loops.
+        Gnome::Vfs::DirectoryHandle::visit( parent->history[position].top(), 
+           Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
+           Gnome::Vfs::FILE_INFO_FORCE_FAST_MIME_TYPE |
+           Gnome::Vfs::FILE_INFO_FOLLOW_LINKS ,
+           Gnome::Vfs::DIRECTORY_VISIT_LOOPCHECK,
+           sigc::mem_fun(*this,&DaIconModes::addEntry));
+        }
+      catch(const Gnome::Vfs::exception& ex){/*this is required.*/}
+      break;
 
+    case 1: // List view
 
+      sideconContainer = new Gtk::EventBox*[filesAtPath];
+      for(int c = 0; c < filesAtPath; c++){
+        sideconContainer[c] = new Gtk::EventBox;
+        }
 
+      try {
+          // Call on_visit() for each file.
+          // The options specify that we want to visit the files at input_uri_string,
+          // get the mime type the fast way and protect against loops.
+        Gnome::Vfs::DirectoryHandle::visit( parent->history[position].top(), 
+           Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
+           Gnome::Vfs::FILE_INFO_FORCE_FAST_MIME_TYPE |
+           Gnome::Vfs::FILE_INFO_FOLLOW_LINKS ,
+           Gnome::Vfs::DIRECTORY_VISIT_LOOPCHECK,
+           sigc::mem_fun(*this,&DaIconModes::addEntry));
+        }
+      catch(const Gnome::Vfs::exception& ex){/*this is required.*/}
+      break;
+      }
+
+      
   }
 
 /**********************/
 
 DaIconModes::~DaIconModes(){
 
-  // cleanup on aisles 1, 2, 3 ... and so on.
-// there is an issue that this could be deleting while in the wrong mode - yeah.
-  if(parent->mode == 0 ){
+// cleanup on aisles 1, 2, 3 ... and so on.
+
+  if(mode == 0 || mode == 1){
     for(int c = 0; c < filesAtPath; c++){
       Gtk::Widget * tmp = sideconContainer[c]->get_child();
       if (tmp)
         delete tmp;
         }
 
-    for(int c = 0; c < filesAtPath; c++){
-      delete sideconContainer[c];
-      }
-    delete sideconContainer;
-    delete hidden;
+      for(int c = 0; c < filesAtPath; c++){
+        delete sideconContainer[c];
+        }
+      delete sideconContainer;
+      delete hidden;
+    }
   }
-}
+
 /**********************/
 
 bool DaIconModes::addEntry(
@@ -89,19 +114,18 @@
 
 hidden[slotsUsed] = (info->get_name().substr(0,1) == ".");
 
-switch(parent->mode){
-case 0: {
-Sidecon * tempPathS = new Sidecon( parent->history[position].top(), info, *this);
-      tempPathS->show();
-      sideconContainer[slotsUsed]->add(*tempPathS);
-	}
+switch(mode){
+  case 0: 
+    Sidecon * tempPathS = new Sidecon( parent->history[position].top(), info, *this);
+    tempPathS->show();
+    sideconContainer[slotsUsed]->add(*tempPathS);
+    break;
+case 1: 
+    ListIcon * tempPathL = new ListIcon( parent->history[position].top(), info, *this);
+    tempPathL->show();
+    sideconContainer[slotsUsed]->add(*tempPathL);
+    break;
 break;
-case 1: {
-//Detail * tempPathD = new Detail(fullPath, info); 
-//      tempPathD->show();
-//     sideconContainer[slotsUsed]->add(*tempPathD);
-	}
-break;
 }
 
 
@@ -128,14 +152,14 @@
   if (info->get_name().length() > 25){
     int last = info->get_name().rfind(".");
     if (last != -1){
-      FileName = new class Gtk::Label( info->get_name().substr(0, 20) + ".." + info->get_name().substr(last) );
+      FileName = new class Gtk::Label( " " + info->get_name().substr(0, 20) + ".." + info->get_name().substr(last) );
       }
     else {
-      FileName = new class Gtk::Label( info->get_name().substr(0,22) + "..." );
+      FileName = new class Gtk::Label( " " + info->get_name().substr(0,22) + "..." );
       }
     }
   else {
-  FileName = new class Gtk::Label( info->get_name() );
+  FileName = new class Gtk::Label( " " + info->get_name() );
   }
                    
 
@@ -152,7 +176,7 @@
 
 
   // this is where the mimetype info goes
-  FilePermissions = new class Gtk::Label(info->get_mime_type());
+  FilePermissions = new class Gtk::Label(" " + info->get_mime_type());
   FilePermissions->set_alignment(0,0.5);
   FilePermissions->set_justify(Gtk::JUSTIFY_LEFT);
   attach(*FilePermissions, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
@@ -160,13 +184,13 @@
 
   // This is simply file size - images an video could have more. Later.
   if( info->get_size() < 1024 ){
-    FileSizeInfo = new class Gtk::Label(int2ustr(info->get_size()) + " B");
+    FileSizeInfo = new class Gtk::Label(" " + int2ustr(info->get_size()) + " B");
     }
   else if ( info->get_size() < (1024 * 1024) ){
-    FileSizeInfo = new class Gtk::Label(int2ustr(info->get_size() / 1024) + " KB");
+    FileSizeInfo = new class Gtk::Label(" " + int2ustr(info->get_size() / 1024) + " KB");
     }
   else{
-    FileSizeInfo = new class Gtk::Label( int2ustr(info->get_size() / 1048576) + " MB");
+    FileSizeInfo = new class Gtk::Label(" " + int2ustr(info->get_size() / 1048576) + " MB");
     }
   FileSizeInfo->set_alignment(0,0.5);
   FileSizeInfo->set_justify(Gtk::JUSTIFY_LEFT);
@@ -174,7 +198,46 @@
 
 
   show_all_children();
  }
+/**********************/
+
+DaIconModes::Sidecon::~Sidecon(){
+  delete image1;
+  delete FileName;
+  delete FilePermissions;
+  delete FileSizeInfo;
+  }
+
 
+/**********************/
+
+DaIconModes::ListIcon::ListIcon(
+      Glib::ustring path,
+      const Glib::RefPtr<const Gnome::Vfs::FileInfo>& info,
+      DaIconModes& above){
+
+  parent = &above;
+  filePath = path + info->get_name();
+
+  FileName = new class Gtk::Label( " " + info->get_name() );
+
+  FileName->set_alignment(0,0.5);
+  FileName->set_justify(Gtk::JUSTIFY_LEFT);
+  attach(*FileName, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+
+
+  // hand off getting the icon
+  image1 = new class Gtk::Image(parent->getIcon(info->get_mime_type(), 16));
+  attach(*image1, 0, 1, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
+
+  show_all_children();
  }
+/**********************/
+
+DaIconModes::ListIcon::~ListIcon(){
+  delete image1;
+  delete FileName;
+  }
+
+
 /**********************
 
 DaIconModes::Detail::Detail(
@@ -477,30 +540,33 @@
 
 void DaIconModes::on_size_allocate(Gtk::Allocation& allocation){
 
-
-  if(parent->mode == 0){
-    int oldie = IconsHigh;
-    IconsHigh = allocation.get_height() / 58;
-  
+int oldie = IconsHigh;
+switch (mode){
+  case 0:
+    IconsHigh = allocation.get_height() / 57;
     if ( oldie != IconsHigh ){
-
-redraw(); // if resize is needed
-     
+      redraw(); // if resize is needed
       }
-    }
+    break;
+  case 1:
+    IconsHigh = allocation.get_height() / 25;
+    if ( oldie != IconsHigh ){
+      redraw(); // if resize is needed
+      }
+    break;
+  }
 
-
-  if(parent->mode == 1 ){
-   
+/*  case 2:
     Gtk::Widget * tmp = get_child();
-if (!tmp){
-    IconsHigh = 0;
-    if (tmp)
-      delete tmp; // actually DisposableTable, but segfaulted otherwise
-    Gtk::Label * x = new Gtk::Label("Details go here.");
-    x->show();
-    add(*x);
-    }}
+    if (!tmp){
+      IconsHigh = 0;
+      if (tmp)
+        delete tmp; // actually DisposableTable, but segfaulted otherwise
+      Gtk::Label * x = new Gtk::Label("Details go here.");
+      x->show();
+      add(*x);
+      }
+}*/
   Gtk::EventBox::on_size_allocate(allocation);
   }
 
@@ -511,7 +577,7 @@
   
    if (tmp)
         delete tmp; // actually DisposableTable, but segfaulted otherwise
-      Gtk::Table * DisposableTable = new Gtk::Table((filesAtPath)/IconsHigh+1,IconsHigh);
+      Gtk::Table * DisposableTable = new Gtk::Table;//((filesAtPath)/IconsHigh+1,IconsHigh);
       add(*DisposableTable);
       int y_pos = 0;
       int x_pos = 0;
@@ -523,7 +589,7 @@
               Gtk::FILL, Gtk::FILL, 4, 4);
           sideconContainer[i]->show();
           y_pos++; 
-          if(parent->mode == 0){
+          if(mode == 0 || mode == 1){
             if ( y_pos + 1 > IconsHigh){
               y_pos = 0;
               x_pos++;
@@ -886,7 +952,6 @@
     ico = "/usr/share/icons/gnome/48x48/mimetypes/gnome-mime-";
     ico += mimeGiven.replace(mimeGiven.find("/"), 1, "-");
     ico += ".png";
-
     Glib::file_get_contents(ico);
     }
   catch(const Glib::Error) {

Modified: trunk/src/iconmodes.h
===================================================================
--- trunk/src/iconmodes.h	2005-04-12 05:07:52 UTC (rev 53)
+++ trunk/src/iconmodes.h	2005-04-13 03:53:41 UTC (rev 54)
@@ -20,7 +20,17 @@
 
 class DaIconModes : public Gtk::EventBox {
 
+  class ListIcon : public Gtk::Table {
+    Glib::ustring filePath, mimeInfo;
+    DaIconModes * parent;
+    Gtk::Image * image1;
+    Gtk::Label * FileName;
+  public:
+    ListIcon(Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>&, DaIconModes&);
+    ~ ListIcon();
+    };
 
+
   class Sidecon : public Gtk::Table {
     Glib::ustring filePath, mimeInfo;
     DaIconModes * parent;
@@ -30,13 +40,7 @@
     Gtk::Label * FileSizeInfo;
   public:
     Sidecon(Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>&, DaIconModes&);
-    ~Sidecon(){
-      delete image1;
-      delete FileName;
-      delete FilePermissions;
-      delete FileSizeInfo;
-      }
-
+    ~Sidecon();
     };
 
 /*
@@ -198,7 +202,7 @@
   guint position;
   guint filesAtPath;
   int * hidden;
-
+  short mode;
 
 public:
   ~DaIconModes();

Modified: trunk/src/main.cpp
===================================================================
--- trunk/src/main.cpp	2005-04-12 05:07:52 UTC (rev 53)
+++ trunk/src/main.cpp	2005-04-13 03:53:41 UTC (rev 54)
@@ -84,8 +84,10 @@
   for(int i =0; i< path.size();i++)
       std::cout << path[i] <<  "\n";
 
-  Darimasen window(path);
-  Gtk::Main::run(window); 
+  Darimasen * window = new Darimasen(path);
+  Gtk::Main::run(*window); 
+
+delete window;
   return 0;
 }
 



From darimasen-svn-admin at lists.berlios.de  Fri Apr 15 08:00:32 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Fri, 15 Apr 2005 08:00:32 +0200
Subject: [Darimasen-svn] r55 - trunk/src
Message-ID: <200504150600.j3F60WwF032235@sheep.berlios.de>

Author: sudrien
Date: 2005-04-15 08:00:18 +0200 (Fri, 15 Apr 2005)
New Revision: 55

Modified:
   trunk/src/darimasen.cpp
   trunk/src/iconmodes.cpp
   trunk/src/iconmodes.h
Log:
Detail view started

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-13 03:53:41 UTC (rev 54)
+++ trunk/src/darimasen.cpp	2005-04-15 06:00:18 UTC (rev 55)
@@ -770,7 +770,7 @@
 /**********************/
 
 void Darimasen::fChangeIconMode(){
-  mode = (mode + 1) % 2; // increment, mod of possibilities.
+  mode = (mode + 1) % 3; // increment, mod of possibilities.
   std::cout << "mode = " << mode << "\n"; 
 
   guint tmp = Tabber->get_current_page();

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-13 03:53:41 UTC (rev 54)
+++ trunk/src/iconmodes.cpp	2005-04-15 06:00:18 UTC (rev 55)
@@ -10,6 +10,10 @@
   parent = &myParent;
   position = pos;
   mode = parent->mode;
+
+
+//Glib::RefPtr<Gnome::Vfs::VolumeMonitor> nx = Gnome::Vfs::VolumeMonitor::create();
+//Glib::ListHandle< Glib::RefPtr<Gnome::Vfs::Volume> > ny = nx->get_mounted_volumes();
 
   lastclick = 0;
   filesAtPath = 0;
@@ -33,8 +37,7 @@
 
   switch(mode){
     case 0: // sidecon
-      //slotsUsed = 0;
-      //IconsHigh = 0;
+
       sideconContainer = new Gtk::EventBox*[filesAtPath];
       for(int c = 0; c < filesAtPath; c++){
         sideconContainer[c] = new Gtk::EventBox;
@@ -62,9 +65,6 @@
         }
 
       try {
-          // Call on_visit() for each file.
-          // The options specify that we want to visit the files at input_uri_string,
-          // get the mime type the fast way and protect against loops.
         Gnome::Vfs::DirectoryHandle::visit( parent->history[position].top(), 
            Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
            Gnome::Vfs::FILE_INFO_FORCE_FAST_MIME_TYPE |
@@ -74,6 +74,33 @@
         }
       catch(const Gnome::Vfs::exception& ex){/*this is required.*/}
       break;
+
+    case 2: // Detail view
+      try {
+        m_Columns = new ModelColumns;
+        add(m_TreeView);
+        m_TreeView.show();
+        m_refTreeModel = Gtk::ListStore::create(*m_Columns);
+        m_TreeView.set_model(m_refTreeModel);
+
+
+        Gnome::Vfs::DirectoryHandle::visit( parent->history[position].top(), 
+           Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
+           Gnome::Vfs::FILE_INFO_FORCE_FAST_MIME_TYPE |
+           Gnome::Vfs::FILE_INFO_FOLLOW_LINKS ,
+           Gnome::Vfs::DIRECTORY_VISIT_LOOPCHECK,
+           sigc::mem_fun(*this,&DaIconModes::addEntry));
+
+
+
+  m_TreeView.append_column("Name", m_Columns->m_col_name);
+  m_TreeView.append_column("Size", m_Columns->m_col_size);
+  m_TreeView.append_column("Mime Type", m_Columns->m_col_mime);
+
+           m_TreeView.show_all_children();
+        }
+      catch(const Gnome::Vfs::exception& ex){/*this is required.*/}
+      break;
       }
 
       
@@ -98,6 +125,11 @@
       delete sideconContainer;
       delete hidden;
     }
+  if(mode == 3){
+    delete m_Columns;
+    delete hidden;
+    }
+
   }
 
 /**********************/
@@ -109,32 +141,60 @@
     bool recurse) {
 
   if (info->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY){
-      sideconContainer[slotsUsed]->set_visible_window(false);
-      sideconContainer[slotsUsed]->show();
+    hidden[slotsUsed] = (info->get_name().substr(0,1) == ".");
 
-hidden[slotsUsed] = (info->get_name().substr(0,1) == ".");
+    switch(mode){
 
-switch(mode){
-  case 0: 
-    Sidecon * tempPathS = new Sidecon( parent->history[position].top(), info, *this);
-    tempPathS->show();
-    sideconContainer[slotsUsed]->add(*tempPathS);
-    break;
-case 1: 
-    ListIcon * tempPathL = new ListIcon( parent->history[position].top(), info, *this);
-    tempPathL->show();
-    sideconContainer[slotsUsed]->add(*tempPathL);
-    break;
-break;
-}
+      case 0: 
+        sideconContainer[slotsUsed]->set_visible_window(false);
+        sideconContainer[slotsUsed]->show();
+        Sidecon * tempPathS = new Sidecon( parent->history[position].top(), info, *this);
+        tempPathS->show();
+        sideconContainer[slotsUsed]->add(*tempPathS);
+        sideconContainer[slotsUsed]->set_events(Gdk::BUTTON_RELEASE_MASK);
+        sideconContainer[slotsUsed]->signal_button_press_event().connect(
+          sigc::bind<Glib::ustring >(
+            sigc::mem_fun(*this, &DaIconModes::on_eventbox_button_press), info->get_name() ));
+        break;
 
-
-      sideconContainer[slotsUsed]->set_events(Gdk::BUTTON_RELEASE_MASK);
-      sideconContainer[slotsUsed]->signal_button_press_event().connect(
-        sigc::bind<Glib::ustring >(
-          sigc::mem_fun(*this, &DaIconModes::on_eventbox_button_press), info->get_name() ));
-      slotsUsed++;
+      case 1: 
+        sideconContainer[slotsUsed]->set_visible_window(false);
+        sideconContainer[slotsUsed]->show();
+        ListIcon * tempPathL = new ListIcon( parent->history[position].top(), info, *this);
+        tempPathL->show();
+        sideconContainer[slotsUsed]->add(*tempPathL);
+        sideconContainer[slotsUsed]->set_events(Gdk::BUTTON_RELEASE_MASK);
+        sideconContainer[slotsUsed]->signal_button_press_event().connect(
+          sigc::bind<Glib::ustring >(
+            sigc::mem_fun(*this, &DaIconModes::on_eventbox_button_press), info->get_name() ));
+        break;
+
+      case 2: 
+        Gtk::TreeModel::Row row = *(m_refTreeModel->append());
+
+        row[m_Columns->m_col_name] = info->get_name();
+
+
+        if( info->get_size() < 1024 ){
+          row[m_Columns->m_col_size] = (" " + int2ustr(info->get_size()) + " B");
+          }
+        else if ( info->get_size() < (1024 * 1024) ){
+          row[m_Columns->m_col_size] = (" " + int2ustr(info->get_size() / 1024) + " KB");
+          }
+        else{
+          row[m_Columns->m_col_size] = (" " + int2ustr(info->get_size() / 1048576) + " MB");
+          }
+
+        row[m_Columns->m_col_mime] = info->get_mime_type();
+
+
+        break;
+
+      }
+
+    slotsUsed++;
     }
+
   recurse = false; 
   return true;
   }
@@ -152,7 +212,8 @@
   if (info->get_name().length() > 25){
     int last = info->get_name().rfind(".");
     if (last != -1){
-      FileName = new class Gtk::Label( " " + info->get_name().substr(0, 20) + ".." + info->get_name().substr(last) );
+      FileName = new class Gtk::Label(
+        " " + info->get_name().substr(0, 20) + ".." + info->get_name().substr(last) );
       }
     else {
       FileName = new class Gtk::Label( " " + info->get_name().substr(0,22) + "..." );
@@ -163,8 +224,6 @@
   }
                    
 
-
-//  FileName = new class Gtk::Label(shortnom);
   FileName->set_alignment(0,0.5);
   FileName->set_justify(Gtk::JUSTIFY_LEFT);
   attach(*FileName, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
@@ -236,81 +295,12 @@
   delete image1;
   delete FileName;
   }
-
 
-/**********************
-
-DaIconModes::Detail::Detail(
-    Glib::ustring path,
-    const Glib::RefPtr<const Gnome::Vfs::FileInfo>& info){
-
-
-  filePath = path + info->get_name();
-
-  Glib::ustring shortnom = info->get_name();
-
-  if (info->get_name().length() > 25){
-
-    int last = info->get_name().rfind(".");
-
-    if (last != -1){ //fix for the missing extension bug
-      Glib::ustring ext = info->get_name().substr(last);  
-      shortnom = info->get_name().substr(0, 20) + ".." + ext;
-      }
-    else {
-      shortnom = info->get_name().substr(0,22) + "...";
-      }
-
-    }
-                   
-  resize(1,3);
-  //Gtk::Image * image1 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-dnd"), Gtk::IconSize(6)));
-  Gtk::Label * FileName = Gtk::manage(new class Gtk::Label(shortnom));
-
-  // this is where the mimetype info goes
-  mimeInfo = info->get_mime_type();
-  Gtk::Label * FilePermissions = Gtk::manage( new class Gtk::Label(mimeInfo));
-
-  // THis is simply file size - images an video could have more. Much later.
-  Glib::ustring size;
-  if( info->get_size() < 1024 ){
-    size = int2ustr(info->get_size()) + " B";
-    }
-  else if ( info->get_size() < (1024 * 1024) ){
-    size = int2ustr(info->get_size() / 1024) + " KB";
-    }
-  else{
-    size = int2ustr(info->get_size() / 1024 / 1024) + " MB";  std::cout << "2\n";
-    }
-
-  // ideally, this label would be 80% size of standard
-  Gtk::Label * FileSizeInfo = Gtk::manage( new class Gtk::Label(size));
-
-  FileName->set_alignment(0,0.5);
-  FileName->set_justify(Gtk::JUSTIFY_LEFT);
-  FilePermissions->set_alignment(0,0.5);
-  FilePermissions->set_justify(Gtk::JUSTIFY_LEFT);
-  FileSizeInfo->set_alignment(0,0.5);
-  FileSizeInfo->set_justify(Gtk::JUSTIFY_LEFT);
-  
-  //attach(*image1, 0, 1, 0, 3, Gtk::FILL, Gtk::FILL, 0, 0);
-  attach(*FileName, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-  attach(*FilePermissions, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-  attach(*FileSizeInfo, 2, 3, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-  
-  //image1->show();
-  FileName->show();
-  FilePermissions->show();
-  FileSizeInfo->show();
-  show();
  }
-
 /**********************/
 
-
 void DaIconModes::RunFile(const Glib::ustring file) {
 
   // see if the file is executable 
-
   Gnome::Vfs::Handle read_handle;
   Gnome::Vfs::Handle exec_handle;
   Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
@@ -540,33 +530,24 @@
 
 void DaIconModes::on_size_allocate(Gtk::Allocation& allocation){
 
-int oldie = IconsHigh;
-switch (mode){
-  case 0:
-    IconsHigh = allocation.get_height() / 57;
-    if ( oldie != IconsHigh ){
-      redraw(); // if resize is needed
-      }
-    break;
-  case 1:
-    IconsHigh = allocation.get_height() / 25;
-    if ( oldie != IconsHigh ){
-      redraw(); // if resize is needed
-      }
-    break;
-  }
+  int oldie = IconsHigh;
+  switch (mode){
+    case 0:
+      IconsHigh = allocation.get_height() / 57;
+      if ( oldie != IconsHigh ){
+        redraw(); // if resize is needed
+        }
+      break;
 
-/*  case 2:
-    Gtk::Widget * tmp = get_child();
-    if (!tmp){
-      IconsHigh = 0;
-      if (tmp)
-        delete tmp; // actually DisposableTable, but segfaulted otherwise
-      Gtk::Label * x = new Gtk::Label("Details go here.");
-      x->show();
-      add(*x);
-      }
-}*/
+    case 1:
+      IconsHigh = allocation.get_height() / 25;
+      if ( oldie != IconsHigh ){
+        redraw(); // if resize is needed
+        }
+      break;
+
+    }
+
   Gtk::EventBox::on_size_allocate(allocation);
   }
 

Modified: trunk/src/iconmodes.h
===================================================================
--- trunk/src/iconmodes.h	2005-04-13 03:53:41 UTC (rev 54)
+++ trunk/src/iconmodes.h	2005-04-15 06:00:18 UTC (rev 55)
@@ -15,6 +15,7 @@
 #include "darimasen.h"
 #include <gtkmm/separator.h>
 #include <unistd.h>
+#include <gtkmm/liststore.h>
 
 /**********************/
 
@@ -43,14 +44,25 @@
     ~Sidecon();
     };
 
-/*
-  class Detail : public Gtk::Table {
-    public:
-    Glib::ustring filePath, mimeInfo;
-    Detail(Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>& );
-    };
-*/
+  class ModelColumns : public Gtk::TreeModel::ColumnRecord {
+  public:
 
+    ModelColumns(){
+     // add(m_col_icon);
+      add(m_col_name);
+      add(m_col_size);
+      add(m_col_mime);
+      }
+
+    //Gtk::TreeModelColumn<Gdk::Pixmap* > m_col_icon;
+    Gtk::TreeModelColumn<Glib::ustring> m_col_name;
+    Gtk::TreeModelColumn<Glib::ustring> m_col_size;
+    Gtk::TreeModelColumn<Glib::ustring> m_col_mime;
+  };
+
+
+
+
   class ChooseActionDialogue : public Gtk::Dialog {
     Gtk::RadioButton::Group _RadioBGroup_radiobutton1;
     Gtk::Button *cancelbutton1, *okbutton1;
@@ -192,6 +204,10 @@
 
   Gtk::EventBox ** sideconContainer;
 
+  ModelColumns * m_Columns;
+  Gtk::TreeView m_TreeView;
+  Glib::RefPtr<Gtk::ListStore> m_refTreeModel;
+
   Gtk::Menu m_Menu_Popup;
 
 



From darimasen-svn-admin at lists.berlios.de  Tue Apr 19 20:26:52 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Tue, 19 Apr 2005 20:26:52 +0200
Subject: [Darimasen-svn] r56 - trunk/src
Message-ID: <200504191826.j3JIQqbK019245@sheep.berlios.de>

Author: sudrien
Date: 2005-04-19 20:26:51 +0200 (Tue, 19 Apr 2005)
New Revision: 56

Added:
   trunk/src/damenu.cpp
   trunk/src/damenu.h
Modified:
   trunk/src/Makefile.am
   trunk/src/darimasen.cpp
   trunk/src/darimasen.h
   trunk/src/iconmodes.cpp
   trunk/src/iconmodes.h
Log:
revert to r53, seperate damenu

Modified: trunk/src/Makefile.am
===================================================================
--- trunk/src/Makefile.am	2005-04-15 06:00:18 UTC (rev 55)
+++ trunk/src/Makefile.am	2005-04-19 18:26:51 UTC (rev 56)
@@ -7,6 +7,7 @@
 	supplimental.cpp \
         firsttime.cpp \
 	main.cpp \
+	damenu.cpp \
         prefix.c
 
 noinst_HEADERS = \
@@ -15,6 +16,7 @@
 	supplimental.h \
         firsttime.h \
 	main.h \
+	damenu.h \
         prefix.h
 
 

Added: trunk/src/damenu.cpp
===================================================================
--- trunk/src/damenu.cpp	2005-04-15 06:00:18 UTC (rev 55)
+++ trunk/src/damenu.cpp	2005-04-19 18:26:51 UTC (rev 56)
@@ -0,0 +1,346 @@
+
+/* Darimasen - damenu.cpp - Copyright (C) 2004 - 2005 Sudrien, GPL */
+
+/**********************/
+
+#include "damenu.h"
+
+
+/**********************/
+
+
+// what actually builds the menus for each directory.
+void DarimasenMenu::MenuForPath(
+       int position,
+       Glib::ustring path,
+       Glib::ustring ext){
+
+  int entry = 0;
+
+MenuItemArray[position]->signal_activate().connect_notify(sigc::bind<guint,Glib::ustring>(sigc::mem_fun(*this,&DarimasenMenu:: selection_reset),position,path));
+
+  if( position < depth || ext != ""){
+
+    Gtk::MenuItem * subdir = Gtk::manage( new Gtk::MenuItem(menulevel[position] + " "));
+    MenuArray[position]->attach(*subdir, 0 ,4, entry++, entry+1);
+    subdir->show();
+
+          subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
+
+    if ( ext != "" ){
+          subdir->signal_button_press_event().connect(
+            sigc::bind<Glib::ustring,guint,bool>(
+              sigc::mem_fun(*this, &DarimasenMenu::DaMenuSelect),
+                 (path + menulevel[position]).substr(0, (path + menulevel[position]).length() - 1),position,true));
+      }
+    else {
+          subdir->signal_button_press_event().connect(
+            sigc::bind<Glib::ustring,guint,bool>(
+              sigc::mem_fun(*this, &DarimasenMenu::DaMenuSelect),
+                 (path + menulevel[position]).substr(0, (path + menulevel[position]).length() - 1),position,false));
+      }
+
+    Gtk::SeparatorMenuItem * sep = Gtk::manage( new Gtk::SeparatorMenuItem());
+    MenuArray[position]->attach(*sep, 0 ,4, entry++, entry+1);
+    sep->show();
+    }
+
+  try{
+    Gnome::Vfs::DirectoryHandle handle;
+
+    if(ext == ""){
+      handle.open(path, Gnome::Vfs::FILE_INFO_DEFAULT | Gnome::Vfs::FILE_INFO_FOLLOW_LINKS);
+      }
+    else{
+      handle.open(path + slash + ext, Gnome::Vfs::FILE_INFO_DEFAULT | Gnome::Vfs::FILE_INFO_FOLLOW_LINKS);
+      }
+
+    bool file_exists = true;
+    while(file_exists) {
+      Glib::RefPtr<Gnome::Vfs::FileInfo> refFileInfo = handle.read_next(file_exists);
+      if (refFileInfo->get_type() == Gnome::Vfs::FILE_TYPE_DIRECTORY
+          && ( (refFileInfo->get_name().substr(0,1) != ".") || parent->optShowHidden->get_active() )
+          && refFileInfo->get_name() != "."
+          && refFileInfo->get_name() != ".."
+          ){ 
+        Gtk::MenuItem * subdir;
+        Glib::ustring SubSubCount;
+        if(ext == ""){
+          subdir = Gtk::manage( new Gtk::MenuItem(refFileInfo->get_name() + slash + " "));
+          subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
+
+          subdir->signal_button_press_event().connect(
+            sigc::bind<Glib::ustring,guint,bool>(
+              sigc::mem_fun(*this, &DarimasenMenu::DaMenuSelect),
+                 (path + refFileInfo->get_name()), position,false));
+
+          SubSubCount = CountSubdir(path + refFileInfo->get_name());
+          }
+        else{
+          subdir = Gtk::manage( new Gtk::MenuItem(ext + slash + refFileInfo->get_name() + slash + " "));
+
+
+          subdir->signal_button_press_event().connect(
+            sigc::bind<Glib::ustring,guint,bool>(
+              sigc::mem_fun(*this, &DarimasenMenu::DaMenuSelect),
+                (path + ext.substr(1) + slash + refFileInfo->get_name()), position,false));
+
+          SubSubCount = CountSubdir(path + ext + slash + refFileInfo->get_name());
+          }
+
+        if (SubSubCount != "0"){
+          Gtk::Label * SubSubLabel = Gtk::manage(new class Gtk::Label(SubSubCount + " \342\226\272",1,0.5));
+          SubSubLabel->show();
+          Gtk::MenuItem * subsubdir = Gtk::manage( new Gtk::MenuItem(*SubSubLabel));
+          subsubdir->set_right_justified();
+
+
+          subsubdir->signal_button_release_event().connect(
+            sigc::bind<int, Glib::ustring, Glib::ustring>(
+              sigc::mem_fun(*this, &DarimasenMenu::SpecialMenuForPath),
+                position, path, ext+ slash + refFileInfo->get_name()));
+
+          MenuArray[position]->attach(*subsubdir, 3 ,4, entry, entry+1);
+          subsubdir->show();
+          MenuArray[position]->attach(*subdir, 0 ,3, entry++, entry+1);
+          subdir->show();
+          }
+        else {
+          MenuArray[position]->attach(*subdir, 0 ,4, entry++, entry+1);
+          subdir->show();            
+          }
+        }
+      }
+    }
+  catch(const Gnome::Vfs::exception& ex){}
+
+
+  }
+
+/**********************/
+
+// the function called for sub-sub-directories - when an arrow is selected in another menu. 
+bool DarimasenMenu::SpecialMenuForPath(GdkEventButton* event,
+       int position,
+       Glib::ustring path,
+       Glib::ustring ext){
+
+  MenuItemArray[position]->remove_submenu();
+  delete MenuArray[position];
+  MenuArray[position] =  new DirectoryMenu(*this);
+  MenuItemArray[position]->set_submenu(*MenuArray[position]);
+  MenuForPath(position, path, ext);
+  MenuItemArray[position]->select();
+
+  needsRebuild[position] = true;
+
+  return true;
+
+  }
+
+/**********************/
+
+void DarimasenMenu:: selection_reset(guint position, Glib::ustring path){
+  if ( needsRebuild[position] ){
+    MenuItemArray[position]->remove_submenu();
+    delete MenuArray[position];
+    MenuArray[position] =  new DirectoryMenu(*this);
+    MenuItemArray[position]->set_submenu(*MenuArray[position]);
+    MenuForPath(position, path, "");
+    MenuItemArray[position]->select();
+
+    needsRebuild[position] = false;
+    }
+}
+
+/**********************/
+
+//Decides the action of the menuItem, more sophisticated than the activate signal. 
+//its comment should always be somewhere.
+
+bool DarimasenMenu::DaMenuSelect(
+      GdkEventButton* event,
+      const Glib::ustring path,
+      guint pos,
+      bool first){
+
+  if ((event->type == GDK_BUTTON_PRESS) && (event->button == 2) ) //middle
+  {
+  parent->newTab(path);
+  return true;
+  }
+  if ((event->type == GDK_BUTTON_PRESS) && (event->button == 1) ) //left
+  {
+  parent->ChangeCurrentPath(path,true,first);
+  return true;
+  }
+  if ((event->type == GDK_BUTTON_PRESS) && (event->button == 3) ) //right
+  {
+    Gtk::Menu * m_Menu_Popup = Gtk::manage( new Gtk::Menu);
+    m_Menu_Popup->items().push_back( Gtk::Menu_Helpers::MenuElem("Open In new Tab"));
+    m_Menu_Popup->popup(event->button, event->time);
+  return true;
+   }
+
+  return false;
+
+  //DaFileLister(); //5:45pm, 24 Dec 2004, it worked! // leave this comment    
+  }
+
+/**********************/
+
+// provides the numbers by the arrows. 
+Glib::ustring DarimasenMenu::CountSubdir(const Glib::ustring& path){
+  int j=0;
+  try{
+    Gnome::Vfs::DirectoryHandle handle;
+    handle.open(path, Gnome::Vfs::FILE_INFO_DEFAULT | Gnome::Vfs::FILE_INFO_FOLLOW_LINKS);
+
+    bool file_exists = true;
+    while(file_exists){
+
+      Glib::RefPtr<Gnome::Vfs::FileInfo> refFileInfo = handle.read_next(file_exists);
+      if (refFileInfo->get_type() == Gnome::Vfs::FILE_TYPE_DIRECTORY
+        && ( (refFileInfo->get_name().substr(0,1) != ".") || parent->optShowHidden->get_active())
+        && refFileInfo->get_name() != "."
+        && refFileInfo->get_name() != ".."){
+        j++;
+        }
+      }
+    }
+  catch(const Gnome::Vfs::exception& ex){}
+  return int2ustr(j);
+
+}
+
+/**********************/
+
+// parses the path, builds the menu bar. 
+DarimasenMenu::DarimasenMenu(const Glib::ustring & path, Darimasen& Myparent, guint pos){
+
+  depth = 0;
+
+  Glib::ustring shortpath = path; //home = getenv("HOME");
+  parent = &Myparent;
+  
+  int startPos = 0 , i = 0;
+
+
+  if ( path.find(getenv("HOME")) != Glib::ustring::npos ){
+    shortpath.replace(0,((Glib::ustring)getenv("HOME")).length(),"~");
+    }
+
+  while ( (shortpath.find(slash,startPos) != Glib::ustring::npos) ) {
+    startPos = shortpath.find(slash,startPos) + 1; depth++;
+    }
+
+  menulevel =  new Glib::ustring[depth+1];
+  needsRebuild = new bool[depth+1];
+  for( int i=0; i<=depth; i++)
+        needsRebuild[i] = false;
+
+
+  startPos = 0;
+  for(i = 0; shortpath.find(slash,startPos) !=  Glib::ustring::npos ; i++ ){
+    menulevel[i] = shortpath.substr(startPos,shortpath.find(slash,startPos) - startPos + 1 );
+    startPos = shortpath.find(slash,startPos) + 1;
+    };
+  menulevel[depth] = ".";
+
+  MenuArray = new DirectoryMenu*[depth+1];
+  MenuItemArray = new Gtk::MenuItem*[depth+1];
+
+  for(int c = 0; c < depth+1; c++){
+    MenuArray[c] =  new DirectoryMenu(*this);
+    }
+ 
+    Glib::ustring subin = CountSubdir(path);
+    if ( subin != "0" ){
+      MenuItemArray[depth] =  new Gtk::MenuItem( subin + " \342\226\272" );
+      MenuItemArray[depth]->show();
+      MenuItemArray[depth]->set_submenu(*MenuArray[depth]);
+      prepend(*MenuItemArray[depth]);
+      MenuForPath(depth, path, "");
+      }
+  
+  Glib::ustring crop = path;
+
+
+  for(i = depth - 1; i>0; i--){
+    crop = crop.substr(0, crop.rfind(slash,crop.length()-2)) + slash;
+
+    MenuItemArray[i] = new Gtk::MenuItem(underscoreSafe(menulevel[i]) );
+    MenuItemArray[i]->show();
+    MenuItemArray[i]->set_submenu(*MenuArray[i]);
+    prepend(*MenuItemArray[i]);
+    MenuForPath(i, crop, "");
+    }
+
+  MenuItemArray[i] = new Gtk::MenuItem(underscoreSafe(menulevel[i] ));
+  MenuItemArray[i]->show();
+  prepend(*MenuItemArray[i]);
+
+
+
+// root stuff
+    MenuItemArray[0]->set_submenu(*MenuArray[0]);
+    MenuItemArray[0]->show();
+    MenuArray[0]->show();
+
+    Gtk::MenuItem * subdir = Gtk::manage( new Gtk::MenuItem("/ (root)"));
+    MenuArray[0]->attach(*subdir, 0 ,1, 0, 1);
+    subdir->show();
+
+          subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
+
+          subdir->signal_button_press_event().connect(
+            sigc::bind<Glib::ustring,guint,bool>(
+              sigc::mem_fun(*this, &DarimasenMenu::DaMenuSelect),
+                 "/",pos,false));
+
+
+
+    Gtk::MenuItem * subdir2 = Gtk::manage( new Gtk::MenuItem("~ (home)"));
+    MenuArray[0]->attach(*subdir2, 0 ,1, 1, 2);
+    subdir2->show();
+
+          subdir2->set_events(Gdk::BUTTON_RELEASE_MASK);
+
+          subdir2->signal_button_press_event().connect(
+            sigc::bind<Glib::ustring,guint,bool>(
+              sigc::mem_fun(*this, &DarimasenMenu::DaMenuSelect),
+                getenv("HOME"),pos,false));
+
+    Gtk::SeparatorMenuItem * sep = Gtk::manage( new Gtk::SeparatorMenuItem());
+    MenuArray[0]->attach(*sep, 0 ,1, 2, 3);
+    sep->show();
+
+    Gtk::MenuItem * subdir3 = Gtk::manage( new Gtk::MenuItem("Add a location to this list"));
+    MenuArray[0]->attach(*subdir3, 0 ,1, 3, 4);
+    subdir3->set_sensitive(false);
+    subdir3->show();
+
+
+  show();
+
+  }
+
+/**********************/
+
+// cleanup on asile 9. More might me Gtk::manageable...
+DarimasenMenu::~DarimasenMenu(){
+  for(int c = 0; c < depth+1; c++){
+    delete MenuArray[c];
+    }
+  delete menulevel;
+  delete needsRebuild;
+  for (int i = 0; i <=depth; i++){
+    delete MenuArray[i];
+    delete MenuItemArray[i];
+    }
+  
+  }
+
+/**********************/
+
+

Added: trunk/src/damenu.h
===================================================================
--- trunk/src/damenu.h	2005-04-15 06:00:18 UTC (rev 55)
+++ trunk/src/damenu.h	2005-04-19 18:26:51 UTC (rev 56)
@@ -0,0 +1,62 @@
+/* Darimasen - darimasen.h - Copyright (C) 2004 - 2005 Sudrien, GPL
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2
+ * as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+
+#ifndef DAMENU_H
+#define DAMENU_H
+
+
+#include <gtkmm.h>
+#include "darimasen.h"
+#include <iostream>
+
+  class DarimasenMenu : public Gtk::MenuBar {
+
+    class DirectoryMenu : public Gtk::Menu {
+    public:
+      DirectoryMenu(DarimasenMenu& in ){
+        Gtk::Menu::Menu();
+        }
+      };
+
+
+    class Darimasen * parent;
+
+    int depth;
+
+    DirectoryMenu ** MenuArray; 
+    Gtk::MenuItem ** MenuItemArray;
+    Glib::ustring * menulevel;
+
+    void MenuForPath(int, Glib::ustring , Glib::ustring); //extension
+    bool SpecialMenuForPath(GdkEventButton* , int, Glib::ustring  , Glib::ustring); //extension
+
+    Glib::ustring CountSubdir(const Glib::ustring&);
+    bool DaMenuSelect(GdkEventButton*, const Glib::ustring,guint,bool);
+    void selection_reset(guint, Glib::ustring);
+ 
+    bool * needsRebuild;
+  public:
+
+    void signal_deactivate ();
+    DarimasenMenu(const Glib::ustring&, class Darimasen&, guint);
+    ~DarimasenMenu();
+
+    };
+
+/**********************/
+
+#endif //DAMENU_H

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-15 06:00:18 UTC (rev 55)
+++ trunk/src/darimasen.cpp	2005-04-19 18:26:51 UTC (rev 56)
@@ -5,343 +5,9 @@
 #include "darimasen.h"
 #include <iostream>
 
-/**********************/
 
-
-// what actually builds the menus for each directory.
-void Darimasen::DarimasenMenu::MenuForPath(
-       int position,
-       Glib::ustring path,
-       Glib::ustring ext){
-
-  int entry = 0;
-
-MenuItemArray[position]->signal_activate().connect_notify(sigc::bind<guint,Glib::ustring>(sigc::mem_fun(*this,&Darimasen::DarimasenMenu:: selection_reset),position,path));
-
-  if( position < depth || ext != ""){
-
-    Gtk::MenuItem * subdir = Gtk::manage( new Gtk::MenuItem(menulevel[position] + " "));
-    MenuArray[position]->attach(*subdir, 0 ,4, entry++, entry+1);
-    subdir->show();
-
-          subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
-
-    if ( ext != "" ){
-          subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint,bool>(
-              sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                 (path + menulevel[position]).substr(0, (path + menulevel[position]).length() - 1),position,true));
-      }
-    else {
-          subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint,bool>(
-              sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                 (path + menulevel[position]).substr(0, (path + menulevel[position]).length() - 1),position,false));
-      }
-
-    Gtk::SeparatorMenuItem * sep = Gtk::manage( new Gtk::SeparatorMenuItem());
-    MenuArray[position]->attach(*sep, 0 ,4, entry++, entry+1);
-    sep->show();
-    }
-
-  try{
-    Gnome::Vfs::DirectoryHandle handle;
-
-    if(ext == ""){
-      handle.open(path, Gnome::Vfs::FILE_INFO_DEFAULT | Gnome::Vfs::FILE_INFO_FOLLOW_LINKS);
-      }
-    else{
-      handle.open(path + slash + ext, Gnome::Vfs::FILE_INFO_DEFAULT | Gnome::Vfs::FILE_INFO_FOLLOW_LINKS);
-      }
-
-    bool file_exists = true;
-    while(file_exists) {
-      Glib::RefPtr<Gnome::Vfs::FileInfo> refFileInfo = handle.read_next(file_exists);
-      if (refFileInfo->get_type() == Gnome::Vfs::FILE_TYPE_DIRECTORY
-          && ( (refFileInfo->get_name().substr(0,1) != ".") || parent->optShowHidden->get_active() )
-          && refFileInfo->get_name() != "."
-          && refFileInfo->get_name() != ".."
-          ){ 
-        Gtk::MenuItem * subdir;
-        Glib::ustring SubSubCount;
-        if(ext == ""){
-          subdir = Gtk::manage( new Gtk::MenuItem(refFileInfo->get_name() + slash + " "));
-          subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
-
-          subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint,bool>(
-              sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                 (path + refFileInfo->get_name()), position,false));
-
-          SubSubCount = CountSubdir(path + refFileInfo->get_name());
-          }
-        else{
-          subdir = Gtk::manage( new Gtk::MenuItem(ext + slash + refFileInfo->get_name() + slash + " "));
-
-
-          subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint,bool>(
-              sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                (path + ext.substr(1) + slash + refFileInfo->get_name()), position,false));
-
-          SubSubCount = CountSubdir(path + ext + slash + refFileInfo->get_name());
-          }
-
-        if (SubSubCount != "0"){
-          Gtk::Label * SubSubLabel = Gtk::manage(new class Gtk::Label(SubSubCount + " \342\226\272",1,0.5));
-          SubSubLabel->show();
-          Gtk::MenuItem * subsubdir = Gtk::manage( new Gtk::MenuItem(*SubSubLabel));
-          subsubdir->set_right_justified();
-
-
-          subsubdir->signal_button_release_event().connect(
-            sigc::bind<int, Glib::ustring, Glib::ustring>(
-              sigc::mem_fun(*this, &Darimasen::DarimasenMenu::SpecialMenuForPath),
-                position, path, ext+ slash + refFileInfo->get_name()));
-
-          MenuArray[position]->attach(*subsubdir, 3 ,4, entry, entry+1);
-          subsubdir->show();
-          MenuArray[position]->attach(*subdir, 0 ,3, entry++, entry+1);
-          subdir->show();
-          }
-        else {
-          MenuArray[position]->attach(*subdir, 0 ,4, entry++, entry+1);
-          subdir->show();            
-          }
-        }
-      }
-    }
-  catch(const Gnome::Vfs::exception& ex){}
-
-
-  }
-
 /**********************/
 
-// the function called for sub-sub-directories - when an arrow is selected in another menu. 
-bool Darimasen::DarimasenMenu::SpecialMenuForPath(GdkEventButton* event,
-       int position,
-       Glib::ustring path,
-       Glib::ustring ext){
-
-  MenuItemArray[position]->remove_submenu();
-  delete MenuArray[position];
-  MenuArray[position] =  new DirectoryMenu(*this);
-  MenuItemArray[position]->set_submenu(*MenuArray[position]);
-  MenuForPath(position, path, ext);
-  MenuItemArray[position]->select();
-
-  needsRebuild[position] = true;
-
-  return true;
-
-  }
-
-/**********************/
-
-void Darimasen::DarimasenMenu:: selection_reset(guint position, Glib::ustring path){
-  if ( needsRebuild[position] ){
-    MenuItemArray[position]->remove_submenu();
-    delete MenuArray[position];
-    MenuArray[position] =  new DirectoryMenu(*this);
-    MenuItemArray[position]->set_submenu(*MenuArray[position]);
-    MenuForPath(position, path, "");
-    MenuItemArray[position]->select();
-
-    needsRebuild[position] = false;
-    }
-}
-
-/**********************/
-
-//Decides the action of the menuItem, more sophisticated than the activate signal. 
-//its comment should always be somewhere.
-
-bool Darimasen::DarimasenMenu::DaMenuSelect(
-      GdkEventButton* event,
-      const Glib::ustring path,
-      guint pos,
-      bool first){
-
-  if ((event->type == GDK_BUTTON_PRESS) && (event->button == 2) ) //middle
-  {
-  parent->newTab(path);
-  return true;
-  }
-  if ((event->type == GDK_BUTTON_PRESS) && (event->button == 1) ) //left
-  {
-  parent->ChangeTab(pos,path,true,first);
-  return true;
-  }
-  if ((event->type == GDK_BUTTON_PRESS) && (event->button == 3) ) //right
-  {
-    Gtk::Menu * m_Menu_Popup = Gtk::manage( new Gtk::Menu);
-    m_Menu_Popup->items().push_back( Gtk::Menu_Helpers::MenuElem("Open In new Tab"));
-    m_Menu_Popup->popup(event->button, event->time);
-  return true;
-   }
-
-  return false;
-
-  //DaFileLister(); //5:45pm, 24 Dec 2004, it worked! // leave this comment    
-  }
-
-/**********************/
-
-// provides the numbers by the arrows. 
-Glib::ustring Darimasen::DarimasenMenu::CountSubdir(const Glib::ustring& path){
-  int j=0;
-  try{
-    Gnome::Vfs::DirectoryHandle handle;
-    handle.open(path, Gnome::Vfs::FILE_INFO_DEFAULT | Gnome::Vfs::FILE_INFO_FOLLOW_LINKS);
-
-    bool file_exists = true;
-    while(file_exists){
-
-      Glib::RefPtr<Gnome::Vfs::FileInfo> refFileInfo = handle.read_next(file_exists);
-      if (refFileInfo->get_type() == Gnome::Vfs::FILE_TYPE_DIRECTORY
-        && ( (refFileInfo->get_name().substr(0,1) != ".") || parent->optShowHidden->get_active())
-        && refFileInfo->get_name() != "."
-        && refFileInfo->get_name() != ".."){
-        j++;
-        }
-      }
-    }
-  catch(const Gnome::Vfs::exception& ex){}
-  return int2ustr(j);
-
-}
-
-/**********************/
-
-// parses the path, builds the menu bar. 
-Darimasen::DarimasenMenu::DarimasenMenu(const Glib::ustring & path, Darimasen& Myparent, guint pos){
-
-  depth = 0;
-
-  Glib::ustring shortpath = path; //home = getenv("HOME");
-  parent = &Myparent;
-  
-  int startPos = 0 , i = 0;
-
-
-  if ( path.find(getenv("HOME")) != Glib::ustring::npos ){
-    shortpath.replace(0,((Glib::ustring)getenv("HOME")).length(),"~");
-    }
-
-  while ( (shortpath.find(slash,startPos) != Glib::ustring::npos) ) {
-    startPos = shortpath.find(slash,startPos) + 1; depth++;
-    }
-
-  menulevel =  new Glib::ustring[depth+1];
-  needsRebuild = new bool[depth+1];
-  for( int i=0; i<=depth; i++)
-        needsRebuild[i] = false;
-
-
-  startPos = 0;
-  for(i = 0; shortpath.find(slash,startPos) !=  Glib::ustring::npos ; i++ ){
-    menulevel[i] = shortpath.substr(startPos,shortpath.find(slash,startPos) - startPos + 1 );
-    startPos = shortpath.find(slash,startPos) + 1;
-    };
-  menulevel[depth] = ".";
-
-  MenuArray = new DirectoryMenu*[depth+1];
-  MenuItemArray = new Gtk::MenuItem*[depth+1];
-
-  for(int c = 0; c < depth+1; c++){
-    MenuArray[c] =  new DirectoryMenu(*this);
-    }
- 
-    Glib::ustring subin = CountSubdir(path);
-    if ( subin != "0" ){
-      MenuItemArray[depth] =  new Gtk::MenuItem( subin + " \342\226\272" );
-      MenuItemArray[depth]->show();
-      MenuItemArray[depth]->set_submenu(*MenuArray[depth]);
-      prepend(*MenuItemArray[depth]);
-      MenuForPath(depth, path, "");
-      }
-  
-  Glib::ustring crop = path;
-
-
-  for(i = depth - 1; i>0; i--){
-    crop = crop.substr(0, crop.rfind(slash,crop.length()-2)) + slash;
-
-    MenuItemArray[i] = new Gtk::MenuItem(underscoreSafe(menulevel[i]) );
-    MenuItemArray[i]->show();
-    MenuItemArray[i]->set_submenu(*MenuArray[i]);
-    prepend(*MenuItemArray[i]);
-    MenuForPath(i, crop, "");
-    }
-
-  MenuItemArray[i] = new Gtk::MenuItem(underscoreSafe(menulevel[i] ));
-  MenuItemArray[i]->show();
-  prepend(*MenuItemArray[i]);
-
-
-
-// root stuff
-    MenuItemArray[0]->set_submenu(*MenuArray[0]);
-    MenuItemArray[0]->show();
-    MenuArray[0]->show();
-
-    Gtk::MenuItem * subdir = Gtk::manage( new Gtk::MenuItem("/ (root)"));
-    MenuArray[0]->attach(*subdir, 0 ,1, 0, 1);
-    subdir->show();
-
-          subdir->set_events(Gdk::BUTTON_RELEASE_MASK);
-
-          subdir->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint,bool>(
-              sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                 "/",pos,false));
-
-
-
-    Gtk::MenuItem * subdir2 = Gtk::manage( new Gtk::MenuItem("~ (home)"));
-    MenuArray[0]->attach(*subdir2, 0 ,1, 1, 2);
-    subdir2->show();
-
-          subdir2->set_events(Gdk::BUTTON_RELEASE_MASK);
-
-          subdir2->signal_button_press_event().connect(
-            sigc::bind<Glib::ustring,guint,bool>(
-              sigc::mem_fun(*this, &Darimasen::DarimasenMenu::DaMenuSelect),
-                getenv("HOME"),pos,false));
-
-    Gtk::SeparatorMenuItem * sep = Gtk::manage( new Gtk::SeparatorMenuItem());
-    MenuArray[0]->attach(*sep, 0 ,1, 2, 3);
-    sep->show();
-
-    Gtk::MenuItem * subdir3 = Gtk::manage( new Gtk::MenuItem("Add a location to this list"));
-    MenuArray[0]->attach(*subdir3, 0 ,1, 3, 4);
-    subdir3->set_sensitive(false);
-    subdir3->show();
-
-
-  show();
-
-  }
-
-/**********************/
-
-// cleanup on asile 9. More might me Gtk::manageable...
-Darimasen::DarimasenMenu::~DarimasenMenu(){
-  for(int c = 0; c < depth+1; c++){
-    delete MenuArray[c];
-    }
-  delete menulevel;
-  delete needsRebuild;
-  for (int i = 0; i <=depth; i++){
-    delete MenuArray[i];
-    delete MenuItemArray[i];
-    }
-  
-  }
-
-/**********************/
-
 // anything prefixed with 'f' corresponds with a button. 'nuff said.
 void Darimasen::fNewTab(){
     std::stack<Glib::ustring> empty;
@@ -376,7 +42,7 @@
   DarimasenMenuContainer->remove();
 
  
-  DaMenu = Gtk::manage(new DarimasenMenu(history[n].top(), *this, n));
+  DaMenu = Gtk::manage(new class DarimasenMenu(history[n].top(), *this, n));
   DarimasenMenuContainer->add(*DaMenu);
 
   if (history[n].size() == 1)
@@ -462,8 +128,8 @@
 /**********************/
 
 // changing directories actually is making a new tab to substitute for the old one.
-void Darimasen::ChangeTab(guint nth, Glib::ustring pathin, bool addPath, bool menuOnly){
- // guint nth = Tabber->get_current_page();
+void Darimasen::ChangeCurrentPath(Glib::ustring pathin, bool addPath, bool menuOnly){
+  guint nth = Tabber->get_current_page();
 
   if (addPath && !menuOnly){
     if (pathin.substr(pathin.length()-1) != "/")
@@ -722,7 +388,7 @@
 void Darimasen::fBack(){
   history[Tabber->get_current_page()].pop();
 
-  ChangeTab(Tabber->get_current_page(),history[Tabber->get_current_page()].top(),false,false);
+  ChangeCurrentPath(history[Tabber->get_current_page()].top(),false,false);
 
   if (history[Tabber->get_current_page()].size() == 1)
     BackButton->set_sensitive(false);
@@ -755,31 +421,25 @@
 // this is called on file operations - since there is more then one tab,
 // all of them should be checked to see if they should be updated.
 void Darimasen::updateView(Glib::ustring sourceDir, Glib::ustring targetDir){
+//  std::cout << sourceDir << "\n" << targetDir << "\n\n";
 
-  guint tmp = Tabber->get_current_page();
-
   for(int i = 0; i < history.size(); i++){
     if( history[i].top() == sourceDir || history[i].top() == targetDir ){
-      ChangeTab(i,history[i].top(),false,false);
+      ChangeCurrentPath(history[i].top(),false,false);
       }
     }
-
-  Tabber->set_current_page (tmp);
 }
 
 /**********************/
 
-void Darimasen::fChangeIconMode(){
-  mode = (mode + 1) % 3; // increment, mod of possibilities.
+ void Darimasen::fChangeIconMode(){
+  mode = (mode + 1) % 2; // increment, mod of possibilities.
   std::cout << "mode = " << mode << "\n"; 
 
-  guint tmp = Tabber->get_current_page();
+ // for(int i = 0; i < history.size(); i++){
+ //     ChangeCurrentPath(history[i].top(),false,false);
+ //   } 
 
-  for(int i = 0; i < history.size(); i++){
-      ChangeTab(i, history[i].top(),false,false);
-      } 
-
-  Tabber->set_current_page (tmp);
   }
 
 /**********************/

Modified: trunk/src/darimasen.h
===================================================================
--- trunk/src/darimasen.h	2005-04-15 06:00:18 UTC (rev 55)
+++ trunk/src/darimasen.h	2005-04-19 18:26:51 UTC (rev 56)
@@ -56,45 +56,14 @@
 #include <gtkmm/layout.h>
 
 #include "iconmodes.h"
+#include "damenu.h"
 
-
 /**********************/
 
 class Darimasen : public Gtk::Window {
-  class DarimasenMenu : public Gtk::MenuBar {
 
-    class DirectoryMenu : public Gtk::Menu {
-    public:
-      DirectoryMenu(DarimasenMenu& in ){
-        Gtk::Menu::Menu();
-        }
-      };
+  //class DarimasenMenu;
 
-
-    Darimasen * parent;
-
-    int depth;
-
-    DirectoryMenu ** MenuArray; 
-    Gtk::MenuItem ** MenuItemArray;
-    Glib::ustring * menulevel;
-
-    void MenuForPath(int, Glib::ustring , Glib::ustring); //extension
-    bool SpecialMenuForPath(GdkEventButton* , int, Glib::ustring  , Glib::ustring); //extension
-
-    Glib::ustring CountSubdir(const Glib::ustring&);
-    bool DaMenuSelect(GdkEventButton*, const Glib::ustring,guint,bool);
-    void selection_reset(guint, Glib::ustring);
- 
-    bool * needsRebuild;
-  public:
-
-    void signal_deactivate ();
-    DarimasenMenu(const Glib::ustring&, Darimasen&, guint);
-    ~DarimasenMenu();
-
-    };
-
   class aboutDa : public Gtk::Window {
     Gtk::Image * image1;
     Gtk::EventBox * closer;
@@ -109,7 +78,7 @@
   Gtk::VBox VerticalOrganizer;
   Gtk::Toolbar TopBar;
   Gtk::ToolItem * DarimasenMenuContainer;
-  DarimasenMenu * DaMenu;
+  class DarimasenMenu * DaMenu;
   Gtk::HPaned HideTreePane;
   Gtk::ScrolledWindow TreeScroller;
   Gtk::Notebook * Tabber;
@@ -130,10 +99,10 @@
 
 
   void fNewTab();
-  void newTab(Glib::ustring);
+
   void tabberSwitched(GtkNotebookPage*, guint);
   void addTab(guint);
-  void ChangeTab(guint, Glib::ustring, bool, bool);
+
   void removeTab(guint);
   void fBack();
   void fQuit();
@@ -146,17 +115,22 @@
 
   std::vector< class DaIconModes* > IconModeList;
   std::vector< class Gtk::EventBox* > EventBoxList;
+  short mode;
 
-
 public:
 
   Darimasen(std::vector<Glib::ustring>);
   ~Darimasen();
+
+  short get_mode(){return mode;}
+
   Gtk::CheckMenuItem * optShowHidden;
   void set_message(Glib::ustring);
   std::vector< std::stack<Glib::ustring> > history;
   void updateView(Glib::ustring, Glib::ustring);
-  short mode;
+
+  void newTab(Glib::ustring);
+  void ChangeCurrentPath(Glib::ustring path, bool, bool);
   };
 
 /**********************/

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-15 06:00:18 UTC (rev 55)
+++ trunk/src/iconmodes.cpp	2005-04-19 18:26:51 UTC (rev 56)
@@ -8,14 +8,10 @@
 DaIconModes::DaIconModes(guint pos, Darimasen& myParent) {    
 
   parent = &myParent;
-  position = pos;
-  mode = parent->mode;
 
-
-//Glib::RefPtr<Gnome::Vfs::VolumeMonitor> nx = Gnome::Vfs::VolumeMonitor::create();
-//Glib::ListHandle< Glib::RefPtr<Gnome::Vfs::Volume> > ny = nx->get_mounted_volumes();
+position = pos;
 
-  lastclick = 0;
+lastclick = 0;
   filesAtPath = 0;
   try{
     Gnome::Vfs::DirectoryHandle handle;
@@ -28,110 +24,57 @@
     }
   catch(const Gnome::Vfs::exception&){std::cout << "Miscount?\n";}
 
+
+ // iconmode = 0;
+
+  slotsUsed = 0;
+  IconsHigh = 0;
   set_visible_window(false);
   hidden = new int[filesAtPath];
-
 
-      slotsUsed = 0;
-      IconsHigh = 0;
-
-  switch(mode){
-    case 0: // sidecon
-
-      sideconContainer = new Gtk::EventBox*[filesAtPath];
-      for(int c = 0; c < filesAtPath; c++){
-        sideconContainer[c] = new Gtk::EventBox;
-        }
+  if(parent->get_mode() == 0){
+    sideconContainer = new Gtk::EventBox*[filesAtPath];
+    for(int c = 0; c < filesAtPath; c++){
+      sideconContainer[c] = new Gtk::EventBox;
+      }
 
-      try {
-          // Call on_visit() for each file.
-          // The options specify that we want to visit the files at input_uri_string,
-          // get the mime type the fast way and protect against loops.
-        Gnome::Vfs::DirectoryHandle::visit( parent->history[position].top(), 
-           Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
-           Gnome::Vfs::FILE_INFO_FORCE_FAST_MIME_TYPE |
-           Gnome::Vfs::FILE_INFO_FOLLOW_LINKS ,
-           Gnome::Vfs::DIRECTORY_VISIT_LOOPCHECK,
-           sigc::mem_fun(*this,&DaIconModes::addEntry));
-        }
-      catch(const Gnome::Vfs::exception& ex){/*this is required.*/}
-      break;
+    try {
+        // Call on_visit() for each file.
+        // The options specify that we want to visit the files at input_uri_string,
+        // get the mime type the fast way and protect against loops.
+      Gnome::Vfs::DirectoryHandle::visit( parent->history[position].top(), Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
+                                             Gnome::Vfs::FILE_INFO_FORCE_FAST_MIME_TYPE |
+                                             Gnome::Vfs::FILE_INFO_FOLLOW_LINKS ,
+                                             Gnome::Vfs::DIRECTORY_VISIT_LOOPCHECK,
+                                             sigc::mem_fun(*this,&DaIconModes::addEntry));
+      }
+    catch(const Gnome::Vfs::exception& ex){/*this is required.*/}
+    }      
 
-    case 1: // List view
 
-      sideconContainer = new Gtk::EventBox*[filesAtPath];
-      for(int c = 0; c < filesAtPath; c++){
-        sideconContainer[c] = new Gtk::EventBox;
-        }
 
-      try {
-        Gnome::Vfs::DirectoryHandle::visit( parent->history[position].top(), 
-           Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
-           Gnome::Vfs::FILE_INFO_FORCE_FAST_MIME_TYPE |
-           Gnome::Vfs::FILE_INFO_FOLLOW_LINKS ,
-           Gnome::Vfs::DIRECTORY_VISIT_LOOPCHECK,
-           sigc::mem_fun(*this,&DaIconModes::addEntry));
-        }
-      catch(const Gnome::Vfs::exception& ex){/*this is required.*/}
-      break;
-
-    case 2: // Detail view
-      try {
-        m_Columns = new ModelColumns;
-        add(m_TreeView);
-        m_TreeView.show();
-        m_refTreeModel = Gtk::ListStore::create(*m_Columns);
-        m_TreeView.set_model(m_refTreeModel);
-
-
-        Gnome::Vfs::DirectoryHandle::visit( parent->history[position].top(), 
-           Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
-           Gnome::Vfs::FILE_INFO_FORCE_FAST_MIME_TYPE |
-           Gnome::Vfs::FILE_INFO_FOLLOW_LINKS ,
-           Gnome::Vfs::DIRECTORY_VISIT_LOOPCHECK,
-           sigc::mem_fun(*this,&DaIconModes::addEntry));
-
-
-
-  m_TreeView.append_column("Name", m_Columns->m_col_name);
-  m_TreeView.append_column("Size", m_Columns->m_col_size);
-  m_TreeView.append_column("Mime Type", m_Columns->m_col_mime);
-
-           m_TreeView.show_all_children();
-        }
-      catch(const Gnome::Vfs::exception& ex){/*this is required.*/}
-      break;
-      }
-
-      
   }
 
 /**********************/
 
 DaIconModes::~DaIconModes(){
 
-// cleanup on aisles 1, 2, 3 ... and so on.
-
-  if(mode == 0 || mode == 1){
+  // cleanup on aisles 1, 2, 3 ... and so on.
+// there is an issue that this could be deleting while in the wrong mode - yeah.
+  if(parent->get_mode() == 0 ){
     for(int c = 0; c < filesAtPath; c++){
       Gtk::Widget * tmp = sideconContainer[c]->get_child();
       if (tmp)
         delete tmp;
         }
 
-      for(int c = 0; c < filesAtPath; c++){
-        delete sideconContainer[c];
-        }
-      delete sideconContainer;
-      delete hidden;
-    }
-  if(mode == 3){
-    delete m_Columns;
+    for(int c = 0; c < filesAtPath; c++){
+      delete sideconContainer[c];
+      }
+    delete sideconContainer;
     delete hidden;
-    }
-
   }
-
+}
 /**********************/
 
 bool DaIconModes::addEntry(
@@ -141,60 +84,33 @@
     bool recurse) {
 
   if (info->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY){
-    hidden[slotsUsed] = (info->get_name().substr(0,1) == ".");
+      sideconContainer[slotsUsed]->set_visible_window(false);
+      sideconContainer[slotsUsed]->show();
 
-    switch(mode){
+hidden[slotsUsed] = (info->get_name().substr(0,1) == ".");
 
-      case 0: 
-        sideconContainer[slotsUsed]->set_visible_window(false);
-        sideconContainer[slotsUsed]->show();
-        Sidecon * tempPathS = new Sidecon( parent->history[position].top(), info, *this);
-        tempPathS->show();
-        sideconContainer[slotsUsed]->add(*tempPathS);
-        sideconContainer[slotsUsed]->set_events(Gdk::BUTTON_RELEASE_MASK);
-        sideconContainer[slotsUsed]->signal_button_press_event().connect(
-          sigc::bind<Glib::ustring >(
-            sigc::mem_fun(*this, &DaIconModes::on_eventbox_button_press), info->get_name() ));
-        break;
+switch(parent->get_mode()){
+case 0: {
+Sidecon * tempPathS = new Sidecon( parent->history[position].top(), info, *this);
+      tempPathS->show();
+      sideconContainer[slotsUsed]->add(*tempPathS);
+	}
+break;
+case 1: {
+//Detail * tempPathD = new Detail(fullPath, info); 
+//      tempPathD->show();
+//     sideconContainer[slotsUsed]->add(*tempPathD);
+	}
+break;
+}
 
-      case 1: 
-        sideconContainer[slotsUsed]->set_visible_window(false);
-        sideconContainer[slotsUsed]->show();
-        ListIcon * tempPathL = new ListIcon( parent->history[position].top(), info, *this);
-        tempPathL->show();
-        sideconContainer[slotsUsed]->add(*tempPathL);
-        sideconContainer[slotsUsed]->set_events(Gdk::BUTTON_RELEASE_MASK);
-        sideconContainer[slotsUsed]->signal_button_press_event().connect(
-          sigc::bind<Glib::ustring >(
-            sigc::mem_fun(*this, &DaIconModes::on_eventbox_button_press), info->get_name() ));
-        break;
-
-      case 2: 
-        Gtk::TreeModel::Row row = *(m_refTreeModel->append());
-
-        row[m_Columns->m_col_name] = info->get_name();
-
-
-        if( info->get_size() < 1024 ){
-          row[m_Columns->m_col_size] = (" " + int2ustr(info->get_size()) + " B");
-          }
-        else if ( info->get_size() < (1024 * 1024) ){
-          row[m_Columns->m_col_size] = (" " + int2ustr(info->get_size() / 1024) + " KB");
-          }
-        else{
-          row[m_Columns->m_col_size] = (" " + int2ustr(info->get_size() / 1048576) + " MB");
-          }
-
-        row[m_Columns->m_col_mime] = info->get_mime_type();
-
-
-        break;
-
-      }
-
-    slotsUsed++;
+
+      sideconContainer[slotsUsed]->set_events(Gdk::BUTTON_RELEASE_MASK);
+      sideconContainer[slotsUsed]->signal_button_press_event().connect(
+        sigc::bind<Glib::ustring >(
+          sigc::mem_fun(*this, &DaIconModes::on_eventbox_button_press), info->get_name() ));
+      slotsUsed++;
     }
-
   recurse = false; 
   return true;
   }
@@ -212,18 +128,19 @@
   if (info->get_name().length() > 25){
     int last = info->get_name().rfind(".");
     if (last != -1){
-      FileName = new class Gtk::Label(
-        " " + info->get_name().substr(0, 20) + ".." + info->get_name().substr(last) );
+      FileName = new class Gtk::Label( info->get_name().substr(0, 20) + ".." + info->get_name().substr(last) );
       }
     else {
-      FileName = new class Gtk::Label( " " + info->get_name().substr(0,22) + "..." );
+      FileName = new class Gtk::Label( info->get_name().substr(0,22) + "..." );
       }
     }
   else {
-  FileName = new class Gtk::Label( " " + info->get_name() );
+  FileName = new class Gtk::Label( info->get_name() );
   }
                    
 
+
+//  FileName = new class Gtk::Label(shortnom);
   FileName->set_alignment(0,0.5);
   FileName->set_justify(Gtk::JUSTIFY_LEFT);
   attach(*FileName, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
@@ -235,7 +152,7 @@
 
 
   // this is where the mimetype info goes
-  FilePermissions = new class Gtk::Label(" " + info->get_mime_type());
+  FilePermissions = new class Gtk::Label(info->get_mime_type());
   FilePermissions->set_alignment(0,0.5);
   FilePermissions->set_justify(Gtk::JUSTIFY_LEFT);
   attach(*FilePermissions, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
@@ -243,13 +160,13 @@
 
   // This is simply file size - images an video could have more. Later.
   if( info->get_size() < 1024 ){
-    FileSizeInfo = new class Gtk::Label(" " + int2ustr(info->get_size()) + " B");
+    FileSizeInfo = new class Gtk::Label(int2ustr(info->get_size()) + " B");
     }
   else if ( info->get_size() < (1024 * 1024) ){
-    FileSizeInfo = new class Gtk::Label(" " + int2ustr(info->get_size() / 1024) + " KB");
+    FileSizeInfo = new class Gtk::Label(int2ustr(info->get_size() / 1024) + " KB");
     }
   else{
-    FileSizeInfo = new class Gtk::Label(" " + int2ustr(info->get_size() / 1048576) + " MB");
+    FileSizeInfo = new class Gtk::Label( int2ustr(info->get_size() / 1048576) + " MB");
     }
   FileSizeInfo->set_alignment(0,0.5);
   FileSizeInfo->set_justify(Gtk::JUSTIFY_LEFT);
@@ -257,50 +174,80 @@
 
 
   show_all_children();
  }
-/**********************/
+
+/**********************
 
-DaIconModes::Sidecon::~Sidecon(){
-  delete image1;
-  delete FileName;
-  delete FilePermissions;
-  delete FileSizeInfo;
-  }
+DaIconModes::Detail::Detail(
+    Glib::ustring path,
+    const Glib::RefPtr<const Gnome::Vfs::FileInfo>& info){
 
+
+  filePath = path + info->get_name();
 
-/**********************/
+  Glib::ustring shortnom = info->get_name();
 
-DaIconModes::ListIcon::ListIcon(
-      Glib::ustring path,
-      const Glib::RefPtr<const Gnome::Vfs::FileInfo>& info,
-      DaIconModes& above){
+  if (info->get_name().length() > 25){
+
+    int last = info->get_name().rfind(".");
 
-  parent = &above;
-  filePath = path + info->get_name();
+    if (last != -1){ //fix for the missing extension bug
+      Glib::ustring ext = info->get_name().substr(last);  
+      shortnom = info->get_name().substr(0, 20) + ".." + ext;
+      }
+    else {
+      shortnom = info->get_name().substr(0,22) + "...";
+      }
+
+    }
+                   
+  resize(1,3);
+  //Gtk::Image * image1 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-dnd"), Gtk::IconSize(6)));
+  Gtk::Label * FileName = Gtk::manage(new class Gtk::Label(shortnom));
 
-  FileName = new class Gtk::Label( " " + info->get_name() );
+  // this is where the mimetype info goes
+  mimeInfo = info->get_mime_type();
+  Gtk::Label * FilePermissions = Gtk::manage( new class Gtk::Label(mimeInfo));
 
-  FileName->set_alignment(0,0.5);
-  FileName->set_justify(Gtk::JUSTIFY_LEFT);
-  attach(*FileName, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+  // THis is simply file size - images an video could have more. Much later.
+  Glib::ustring size;
+  if( info->get_size() < 1024 ){
+    size = int2ustr(info->get_size()) + " B";
+    }
+  else if ( info->get_size() < (1024 * 1024) ){
+    size = int2ustr(info->get_size() / 1024) + " KB";
+    }
+  else{
+    size = int2ustr(info->get_size() / 1024 / 1024) + " MB";  std::cout << "2\n";
+    }
 
-
-  // hand off getting the icon
-  image1 = new class Gtk::Image(parent->getIcon(info->get_mime_type(), 16));
-  attach(*image1, 0, 1, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
+  // ideally, this label would be 80% size of standard
+  Gtk::Label * FileSizeInfo = Gtk::manage( new class Gtk::Label(size));
 
-  show_all_children();
  }
-/**********************/
-
-DaIconModes::ListIcon::~ListIcon(){
-  delete image1;
-  delete FileName;
-  }
+  FileName->set_alignment(0,0.5);
+  FileName->set_justify(Gtk::JUSTIFY_LEFT);
+  FilePermissions->set_alignment(0,0.5);
+  FilePermissions->set_justify(Gtk::JUSTIFY_LEFT);
+  FileSizeInfo->set_alignment(0,0.5);
+  FileSizeInfo->set_justify(Gtk::JUSTIFY_LEFT);
+  
+  //attach(*image1, 0, 1, 0, 3, Gtk::FILL, Gtk::FILL, 0, 0);
+  attach(*FileName, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+  attach(*FilePermissions, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+  attach(*FileSizeInfo, 2, 3, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+  
+  //image1->show();
+  FileName->show();
+  FilePermissions->show();
+  FileSizeInfo->show();
+  show();
  }
 
 /**********************/
 
+
 void DaIconModes::RunFile(const Glib::ustring file) {
 
   // see if the file is executable 
+
   Gnome::Vfs::Handle read_handle;
   Gnome::Vfs::Handle exec_handle;
   Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
@@ -530,24 +477,30 @@
 
 void DaIconModes::on_size_allocate(Gtk::Allocation& allocation){
 
-  int oldie = IconsHigh;
-  switch (mode){
-    case 0:
-      IconsHigh = allocation.get_height() / 57;
-      if ( oldie != IconsHigh ){
-        redraw(); // if resize is needed
-        }
-      break;
 
-    case 1:
-      IconsHigh = allocation.get_height() / 25;
-      if ( oldie != IconsHigh ){
-        redraw(); // if resize is needed
-        }
-      break;
+  if(parent->get_mode() == 0){
+    int oldie = IconsHigh;
+    IconsHigh = allocation.get_height() / 58;
+  
+    if ( oldie != IconsHigh ){
 
+redraw(); // if resize is needed
+     
+      }
     }
 
+
+  if(parent->get_mode() == 1 ){
+   
+    Gtk::Widget * tmp = get_child();
+if (!tmp){
+    IconsHigh = 0;
+    if (tmp)
+      delete tmp; // actually DisposableTable, but segfaulted otherwise
+    Gtk::Label * x = new Gtk::Label("Details go here.");
+    x->show();
+    add(*x);
+    }}
   Gtk::EventBox::on_size_allocate(allocation);
   }
 
@@ -558,7 +511,7 @@
   
    if (tmp)
         delete tmp; // actually DisposableTable, but segfaulted otherwise
-      Gtk::Table * DisposableTable = new Gtk::Table;//((filesAtPath)/IconsHigh+1,IconsHigh);
+      Gtk::Table * DisposableTable = new Gtk::Table((filesAtPath)/IconsHigh+1,IconsHigh);
       add(*DisposableTable);
       int y_pos = 0;
       int x_pos = 0;
@@ -570,7 +523,7 @@
               Gtk::FILL, Gtk::FILL, 4, 4);
           sideconContainer[i]->show();
           y_pos++; 
-          if(mode == 0 || mode == 1){
+          if(parent->get_mode() == 0){
             if ( y_pos + 1 > IconsHigh){
               y_pos = 0;
               x_pos++;
@@ -933,6 +886,7 @@
     ico = "/usr/share/icons/gnome/48x48/mimetypes/gnome-mime-";
     ico += mimeGiven.replace(mimeGiven.find("/"), 1, "-");
     ico += ".png";
+
     Glib::file_get_contents(ico);
     }
   catch(const Glib::Error) {

Modified: trunk/src/iconmodes.h
===================================================================
--- trunk/src/iconmodes.h	2005-04-15 06:00:18 UTC (rev 55)
+++ trunk/src/iconmodes.h	2005-04-19 18:26:51 UTC (rev 56)
@@ -15,23 +15,12 @@
 #include "darimasen.h"
 #include <gtkmm/separator.h>
 #include <unistd.h>
-#include <gtkmm/liststore.h>
 
 /**********************/
 
 class DaIconModes : public Gtk::EventBox {
 
-  class ListIcon : public Gtk::Table {
-    Glib::ustring filePath, mimeInfo;
-    DaIconModes * parent;
-    Gtk::Image * image1;
-    Gtk::Label * FileName;
-  public:
-    ListIcon(Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>&, DaIconModes&);
-    ~ ListIcon();
-    };
 
-
   class Sidecon : public Gtk::Table {
     Glib::ustring filePath, mimeInfo;
     DaIconModes * parent;
@@ -41,28 +30,23 @@
     Gtk::Label * FileSizeInfo;
   public:
     Sidecon(Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>&, DaIconModes&);
-    ~Sidecon();
+    ~Sidecon(){
+      delete image1;
+      delete FileName;
+      delete FilePermissions;
+      delete FileSizeInfo;
+      }
+
     };
 
-  class ModelColumns : public Gtk::TreeModel::ColumnRecord {
-  public:
+/*
+  class Detail : public Gtk::Table {
+    public:
+    Glib::ustring filePath, mimeInfo;
+    Detail(Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>& );
+    };
+*/
 
-    ModelColumns(){
-     // add(m_col_icon);
-      add(m_col_name);
-      add(m_col_size);
-      add(m_col_mime);
-      }
-
-    //Gtk::TreeModelColumn<Gdk::Pixmap* > m_col_icon;
-    Gtk::TreeModelColumn<Glib::ustring> m_col_name;
-    Gtk::TreeModelColumn<Glib::ustring> m_col_size;
-    Gtk::TreeModelColumn<Glib::ustring> m_col_mime;
-  };
-
-
-
-
   class ChooseActionDialogue : public Gtk::Dialog {
     Gtk::RadioButton::Group _RadioBGroup_radiobutton1;
     Gtk::Button *cancelbutton1, *okbutton1;
@@ -204,10 +188,6 @@
 
   Gtk::EventBox ** sideconContainer;
 
-  ModelColumns * m_Columns;
-  Gtk::TreeView m_TreeView;
-  Glib::RefPtr<Gtk::ListStore> m_refTreeModel;
-
   Gtk::Menu m_Menu_Popup;
 
 
@@ -218,7 +198,7 @@
   guint position;
   guint filesAtPath;
   int * hidden;
-  short mode;
+
 
 public:
   ~DaIconModes();



From darimasen-svn-admin at lists.berlios.de  Wed Apr 20 17:32:43 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Wed, 20 Apr 2005 17:32:43 +0200
Subject: [Darimasen-svn] r57 - trunk/src
Message-ID: <200504201532.j3KFWhcX017595@sheep.berlios.de>

Author: sudrien
Date: 2005-04-20 17:32:37 +0200 (Wed, 20 Apr 2005)
New Revision: 57

Modified:
   trunk/src/iconmodes.cpp
   trunk/src/iconmodes.h
Log:
iconmodes rebuild in progress

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-19 18:26:51 UTC (rev 56)
+++ trunk/src/iconmodes.cpp	2005-04-20 15:32:37 UTC (rev 57)
@@ -1,873 +1,88 @@
 /* Darimasen - iconmodes.cpp - Copyright (C) 2004 - 2005 Sudrien, GPL */
 
-#include "iconmodes.h"
-#include <iostream>
-
-/**********************/
-
-DaIconModes::DaIconModes(guint pos, Darimasen& myParent) {    
+#include "iconmodes.h"
 
-  parent = &myParent;
-
-position = pos;
-
-lastclick = 0;
-  filesAtPath = 0;
-  try{
-    Gnome::Vfs::DirectoryHandle handle;
-    handle.open((parent->history[position].top()), Gnome::Vfs::FILE_INFO_DEFAULT);
-    bool file_exists = true;
-    while(file_exists){
-      handle.read_next(file_exists);
-      filesAtPath++;
-      }
-    }
-  catch(const Gnome::Vfs::exception&){std::cout << "Miscount?\n";}
-
-
- // iconmode = 0;
-
-  slotsUsed = 0;
-  IconsHigh = 0;
-  set_visible_window(false);
-  hidden = new int[filesAtPath];
-
-  if(parent->get_mode() == 0){
-    sideconContainer = new Gtk::EventBox*[filesAtPath];
-    for(int c = 0; c < filesAtPath; c++){
-      sideconContainer[c] = new Gtk::EventBox;
-      }
-
-    try {
-        // Call on_visit() for each file.
-        // The options specify that we want to visit the files at input_uri_string,
-        // get the mime type the fast way and protect against loops.
-      Gnome::Vfs::DirectoryHandle::visit( parent->history[position].top(), Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
-                                             Gnome::Vfs::FILE_INFO_FORCE_FAST_MIME_TYPE |
-                                             Gnome::Vfs::FILE_INFO_FOLLOW_LINKS ,
-                                             Gnome::Vfs::DIRECTORY_VISIT_LOOPCHECK,
-                                             sigc::mem_fun(*this,&DaIconModes::addEntry));
-      }
-    catch(const Gnome::Vfs::exception& ex){/*this is required.*/}
-    }      
-
-
-
-  }
-
 /**********************/
 
-DaIconModes::~DaIconModes(){
+DaIconModes::proto_icon::proto_icon(
+      DaIconModes& getParent,
+      Glib::ustring getPath,
+      const Glib::RefPtr<const Gnome::Vfs::FileInfo> getFile) {
 
-  // cleanup on aisles 1, 2, 3 ... and so on.
-// there is an issue that this could be deleting while in the wrong mode - yeah.
-  if(parent->get_mode() == 0 ){
-    for(int c = 0; c < filesAtPath; c++){
-      Gtk::Widget * tmp = sideconContainer[c]->get_child();
-      if (tmp)
-        delete tmp;
-        }
+  path = getPath;
  parent = &getParent;
 
-    for(int c = 0; c < filesAtPath; c++){
-      delete sideconContainer[c];
-      }
-    delete sideconContainer;
-    delete hidden;
-  }
-}
-/**********************/
 
-bool DaIconModes::addEntry(
-    Glib::ustring rel_path,
-    Glib::RefPtr<const Gnome::Vfs::FileInfo> info,
-    bool recursing_will_loop,
-    bool recurse) {
+  icon = parent->getIcon(getFile->get_mime_type());
 
-  if (info->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY){
-      sideconContainer[slotsUsed]->set_visible_window(false);
-      sideconContainer[slotsUsed]->show();
 
-hidden[slotsUsed] = (info->get_name().substr(0,1) == ".");
+  FileName = new Gtk::Label(getFile->get_name());
+  FileName->set_alignment(0,0.5);
+  FileName->show();
 
-switch(parent->get_mode()){
-case 0: {
-Sidecon * tempPathS = new Sidecon( parent->history[position].top(), info, *this);
-      tempPathS->show();
-      sideconContainer[slotsUsed]->add(*tempPathS);
-	}
-break;
-case 1: {
-//Detail * tempPathD = new Detail(fullPath, info); 
-//      tempPathD->show();
-//     sideconContainer[slotsUsed]->add(*tempPathD);
-	}
-break;
-}
-
-
-      sideconContainer[slotsUsed]->set_events(Gdk::BUTTON_RELEASE_MASK);
-      sideconContainer[slotsUsed]->signal_button_press_event().connect(
-        sigc::bind<Glib::ustring >(
-          sigc::mem_fun(*this, &DaIconModes::on_eventbox_button_press), info->get_name() ));
-      slotsUsed++;
-    }
-  recurse = false; 
-  return true;
-  }
-
-/**********************/
-
-DaIconModes::Sidecon::Sidecon(
-      Glib::ustring path,
-      const Glib::RefPtr<const Gnome::Vfs::FileInfo>& info,
-      DaIconModes& above){
-
-  parent = &above;
-  filePath = path + info->get_name();
-
-  if (info->get_name().length() > 25){
-    int last = info->get_name().rfind(".");
+  if (getFile->get_name().length() > 25){
+    int last = getFile->get_name().rfind(".");
     if (last != -1){
-      FileName = new class Gtk::Label( info->get_name().substr(0, 20) + ".." + info->get_name().substr(last) );
+      ShortFileName = new Gtk::Label(
+        getFile->get_name().substr(0, 20) + ".." + getFile->get_name().substr(last) );
       }
     else {
-      FileName = new class Gtk::Label( info->get_name().substr(0,22) + "..." );
+      ShortFileName = new Gtk::Label(getFile->get_name().substr(0,22) + "..." );
       }
     }
   else {
-  FileName = new class Gtk::Label( info->get_name() );
-  }
-                   
-
-
-//  FileName = new class Gtk::Label(shortnom);
-  FileName->set_alignment(0,0.5);
-  FileName->set_justify(Gtk::JUSTIFY_LEFT);
-  attach(*FileName, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-
-
-  // hand off getting the icon
-  image1 = new class Gtk::Image(parent->getIcon(info->get_mime_type(), 48));
-  attach(*image1, 0, 1, 0, 3, Gtk::FILL, Gtk::FILL, 0, 0);
-
-
-  // this is where the mimetype info goes
-  FilePermissions = new class Gtk::Label(info->get_mime_type());
-  FilePermissions->set_alignment(0,0.5);
-  FilePermissions->set_justify(Gtk::JUSTIFY_LEFT);
-  attach(*FilePermissions, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-
-
-  // This is simply file size - images an video could have more. Later.
-  if( info->get_size() < 1024 ){
-    FileSizeInfo = new class Gtk::Label(int2ustr(info->get_size()) + " B");
-    }
-  else if ( info->get_size() < (1024 * 1024) ){
-    FileSizeInfo = new class Gtk::Label(int2ustr(info->get_size() / 1024) + " KB");
-    }
-  else{
-    FileSizeInfo = new class Gtk::Label( int2ustr(info->get_size() / 1048576) + " MB");
-    }
-  FileSizeInfo->set_alignment(0,0.5);
-  FileSizeInfo->set_justify(Gtk::JUSTIFY_LEFT);
-  attach(*FileSizeInfo, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-
-
-  show_all_children();
  }
-
-/**********************
-
-DaIconModes::Detail::Detail(
-    Glib::ustring path,
-    const Glib::RefPtr<const Gnome::Vfs::FileInfo>& info){
-
-
-  filePath = path + info->get_name();
-
-  Glib::ustring shortnom = info->get_name();
-
-  if (info->get_name().length() > 25){
-
-    int last = info->get_name().rfind(".");
-
-    if (last != -1){ //fix for the missing extension bug
-      Glib::ustring ext = info->get_name().substr(last);  
-      shortnom = info->get_name().substr(0, 20) + ".." + ext;
-      }
-    else {
-      shortnom = info->get_name().substr(0,22) + "...";
-      }
-
-    }
-                   
-  resize(1,3);
-  //Gtk::Image * image1 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-dnd"), Gtk::IconSize(6)));
-  Gtk::Label * FileName = Gtk::manage(new class Gtk::Label(shortnom));
-
-  // this is where the mimetype info goes
-  mimeInfo = info->get_mime_type();
-  Gtk::Label * FilePermissions = Gtk::manage( new class Gtk::Label(mimeInfo));
-
-  // THis is simply file size - images an video could have more. Much later.
-  Glib::ustring size;
-  if( info->get_size() < 1024 ){
-    size = int2ustr(info->get_size()) + " B";
-    }
-  else if ( info->get_size() < (1024 * 1024) ){
-    size = int2ustr(info->get_size() / 1024) + " KB";
-    }
-  else{
-    size = int2ustr(info->get_size() / 1024 / 1024) + " MB";  std::cout << "2\n";
-    }
-
-  // ideally, this label would be 80% size of standard
-  Gtk::Label * FileSizeInfo = Gtk::manage( new class Gtk::Label(size));
-
-  FileName->set_alignment(0,0.5);
-  FileName->set_justify(Gtk::JUSTIFY_LEFT);
-  FilePermissions->set_alignment(0,0.5);
-  FilePermissions->set_justify(Gtk::JUSTIFY_LEFT);
-  FileSizeInfo->set_alignment(0,0.5);
-  FileSizeInfo->set_justify(Gtk::JUSTIFY_LEFT);
-  
-  //attach(*image1, 0, 1, 0, 3, Gtk::FILL, Gtk::FILL, 0, 0);
-  attach(*FileName, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-  attach(*FilePermissions, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-  attach(*FileSizeInfo, 2, 3, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-  
-  //image1->show();
-  FileName->show();
-  FilePermissions->show();
-  FileSizeInfo->show();
-  show();
  }
-
-/**********************/
-
-
-void DaIconModes::RunFile(const Glib::ustring file) {
-
-  // see if the file is executable 
-
-  Gnome::Vfs::Handle read_handle;
-  Gnome::Vfs::Handle exec_handle;
-  Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
-  
-  try{
-    read_handle.open( parent->history[position].top() + file, Gnome::Vfs::OPEN_READ);
-    info = read_handle.get_file_info(
-      Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
-      Gnome::Vfs::FILE_INFO_FORCE_SLOW_MIME_TYPE );
-    }
-  catch(const Gnome::Vfs::exception& ex){
-    std::cout << "Does not exist.\n";
-    return;
-    }
-
-
-  Glib::ustring exec = getenv("HOME");
-  try{
-    exec += "/Choices/MIME-types/";
-    exec += info->get_mime_type().replace(info->get_mime_type().find("/"),1,"_");
-    exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
-
-    exec += " \""  + parent->history[position].top() + file + "\"";
-    Glib::spawn_command_line_async(exec);
-
-    parent->set_message(exec + " was run.");
-    return;
-
-    }
-  catch(const Gnome::Vfs::exception& ex){
-    }
-
-
-  try{
-    exec = exec.substr(0, exec.rfind("_"));
-    exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
-    exec += " \""  + parent->history[position].top() + file + "\"";
-    Glib::spawn_command_line_async(exec);
-
-    parent->set_message(exec + " was run.");
-    return;
-    }
-  catch(const Gnome::Vfs::exception& ex){
-    }
-
-  if (Gnome::Vfs::Mime::can_be_executable(info->get_mime_type())){
-    parent->set_message( "Running " + parent->history[position].top()  + file);
-    Glib::spawn_command_line_async( parent->history[position].top()  + file);
-    return;
-    }
-  else {
-    }
-    
-
-  Gtk::MessageDialog dialog(
-    "This mimetype does not have any action associated with it.\n"
-    "should it be opened as text?",
-    false, Gtk::MESSAGE_ERROR, Gtk::BUTTONS_OK_CANCEL);
-
-
-  //Handle the response:
-  switch(dialog.run())
-  {
-    case(Gtk::RESPONSE_OK):
-    {
-      Glib::ustring exec = getenv("HOME");
-      exec += "/Choices/MIME-types/text_plain";
-      exec += " \""  + parent->history[position].top()  + file + "\"";
-      Glib::spawn_command_line_async(exec);
-    parent->set_message(exec + " was opened as a text file.");
-      return;
-      break;
-    }
-    default:
-    {
-    parent->set_message("Well, that was usefull.");
-      break;
-    }
+  ShortFileName = new Gtk::Label(getFile->get_name() );
   }
+  ShortFileName->set_alignment(0,0.5);
 
-}
 
+  FileMime = new Gtk::Label(getFile->get_mime_type());
+  FileMime->set_alignment(0,0.5);
 
-
-/**********************/
 
+  guint size = getFile->get_size();
+  if(size < 1024)
+    FileSize = new class Gtk::Label(int2ustr(size) + " B");
+  else if (size < 1048576)
+    FileSize = new class Gtk::Label(int2ustr(size / 1024) + " KB");
+  else
+    FileSize = new class Gtk::Label( int2ustr(size / 1048576) + " MB");
+  FileSize->set_alignment(0,0.5);
 
-void DaIconModes::RunFileAsText(const Glib::ustring file) {
+  hidden = (getFile->get_name().substr(0,1) == ".");
 
-  // see if the file is executable 
 
-  Gnome::Vfs::Handle read_handle;
-  Gnome::Vfs::Handle exec_handle;
-  Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
-  
-  try{
-    read_handle.open( parent->history[position].top() + file, Gnome::Vfs::OPEN_READ);
-    info = read_handle.get_file_info(
-      Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
-      Gnome::Vfs::FILE_INFO_FORCE_SLOW_MIME_TYPE );
-    }
-  catch(const Gnome::Vfs::exception& ex){
-    std::cout << "Does not exist.\n";
-    return;
-    }
 
+  };
 
-  Glib::ustring exec = getenv("HOME");
-  try{
-    exec += "/Choices/MIME-types/text";
-    exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
-
-    exec += " \""  + parent->history[position].top() + file + "\"";
-    Glib::spawn_command_line_async(exec);
-
-    parent->set_message(exec + " was run.");
-    return;
-
-    }
-  catch(const Gnome::Vfs::exception& ex){
-    }
-
-}
-
-
-
 /**********************/
 
-void DaIconModes::SetRunAction(const Glib::ustring file) {
 
-  Gnome::Vfs::Handle read_handle;
-  Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
-  Glib::ustring exec_subtype;
-  Glib::ustring exec_mimetype;
-
-  try {
-    read_handle.open( parent->history[position].top() + file, Gnome::Vfs::OPEN_READ);
-    info = read_handle.get_file_info(
-        Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
-        Gnome::Vfs::FILE_INFO_FORCE_SLOW_MIME_TYPE );
-
-    exec_subtype  = info->get_mime_type();
-    exec_subtype  = exec_subtype.replace( exec_subtype.find("/"), 1, "_" );
-    exec_mimetype = exec_subtype.substr( 0, exec_subtype.rfind("_") );
-
-    ChooseActionDialogue * chooseAction;
-    chooseAction = new ChooseActionDialogue(exec_subtype);
-    chooseAction->show();
-    }
-  catch(const Gnome::Vfs::exception& ex) {
-    parent->set_message("Err... Setting error?");
-    }
+DaIconModes::proto_icon::~proto_icon(){
+  delete FileName;
+  delete FileMime;
+  delete FileSize;
+std::cout << "proto deleted";
   }
-
-/**********************/
 
-// make a generic icon action
-bool DaIconModes::on_eventbox_button_press(GdkEventButton* event, const Glib::ustring Icon){
-
-  if ((event->type == GDK_BUTTON_PRESS) && (event->button == 1)  && (lastclick < event->time)){
-    lastclick = event->time + 1000;
-    RunFile(Icon);
- //   static int x;
-    return true;
-    }
-
-  if ((event->type == GDK_BUTTON_PRESS) && (event->button == 3)){
-    //Gtk::Menu::MenuList& menulist = m_Menu_Popup.items();
-
-
-    for( int i=10; i > 0; i--)
-      m_Menu_Popup.items().pop_back();
-//std::cout << Icon << "\n";
-
-        int startAtPos = 0;
-    // following is needed so underscores show correctly
-    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Open \"" + underscoreSafe(Icon) + "\"",
-      sigc::bind<Glib::ustring >(
-        sigc::mem_fun(*this, &DaIconModes::RunFile),Icon)));
-
-
-    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Open as text ",
-      sigc::bind<Glib::ustring >(
-        sigc::mem_fun(*this, &DaIconModes::RunFileAsText),Icon)));
-
-
-    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::SeparatorElem());
-
-
-    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Set Run Action...",
-      sigc::bind<Glib::ustring>(
-        sigc::mem_fun(*this, &DaIconModes::SetRunAction), Icon  )));
-
-    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Permissions...",
-      sigc::bind<Glib::ustring>(
-        sigc::mem_fun(*this, &DaIconModes::SetPermissions), Icon  )));
-
-    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::SeparatorElem());
-
-    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Copy To...",
-      sigc::bind<Glib::ustring>(
-        sigc::mem_fun(*this, &DaIconModes::copy), Icon  )));
-
-
-
-    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Move To...",
-      sigc::bind<Glib::ustring>(
-        sigc::mem_fun(*this, &DaIconModes::move), Icon  )));
-
-    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Link To...",
-      sigc::bind<Glib::ustring>(
-        sigc::mem_fun(*this, &DaIconModes::link), Icon  )));
-
-    m_Menu_Popup.items().push_back( Gtk::Menu_Helpers::MenuElem("Delete ",
-      sigc::bind<Glib::ustring>(
-        sigc::mem_fun(*this, &DaIconModes::unlinkify), Icon  )));
-
-
-    m_Menu_Popup.popup(event->button, event->time);
-    return true;
-    }
-
-  return false;
-  }
-
 /**********************/
 
-void DaIconModes::on_size_allocate(Gtk::Allocation& allocation){
+DaIconModes::Sidecon::Sidecon(proto_icon & in){
 
+ // image1 = new class Gtk::Image(parent->getIcon(info->get_mime_type(), 48));
+Gtk::Image * image = new Gtk::Image(in.icon->scale_simple(48,48,Gdk::INTERP_TILES));
 
-  if(parent->get_mode() == 0){
-    int oldie = IconsHigh;
-    IconsHigh = allocation.get_height() / 58;
-  
-    if ( oldie != IconsHigh ){
 
-redraw(); // if resize is needed
-     
-      }
-    }
+  attach(*image, 0, 1, 0, 3, Gtk::FILL, Gtk::FILL, 0, 0);
+  attach(*in.FileName, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+  attach(*in.FileMime, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+  attach(*in.FileSize, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
 
-
-  if(parent->get_mode() == 1 ){
-   
-    Gtk::Widget * tmp = get_child();
-if (!tmp){
-    IconsHigh = 0;
-    if (tmp)
-      delete tmp; // actually DisposableTable, but segfaulted otherwise
-    Gtk::Label * x = new Gtk::Label("Details go here.");
-    x->show();
-    add(*x);
-    }}
-  Gtk::EventBox::on_size_allocate(allocation);
-  }
-
-/**********************/
-
-void DaIconModes::redraw(){
-    Gtk::Widget * tmp = get_child();
-  
-   if (tmp)
-        delete tmp; // actually DisposableTable, but segfaulted otherwise
-      Gtk::Table * DisposableTable = new Gtk::Table((filesAtPath)/IconsHigh+1,IconsHigh);
-      add(*DisposableTable);
-      int y_pos = 0;
-      int x_pos = 0;
-
-      for(int i = 0; i < slotsUsed; i++){
-        if(  !hidden[i] || parent->optShowHidden->get_active()){
-          DisposableTable->attach( *sideconContainer[i],
-              x_pos, x_pos+1, y_pos, y_pos+1,
-              Gtk::FILL, Gtk::FILL, 4, 4);
-          sideconContainer[i]->show();
-          y_pos++; 
-          if(parent->get_mode() == 0){
-            if ( y_pos + 1 > IconsHigh){
-              y_pos = 0;
-              x_pos++;
-              }
-            }
-          }
-        }
-      DisposableTable->show();
-  
-  }
-
-/**********************/
-
-DaIconModes::ChooseActionDialogue::ChooseActionDialogue(Glib::ustring mimeType){
-
-  mime = mimeType;
-  cancelbutton1 = new class Gtk::Button(Gtk::StockID("gtk-close"));
-  okbutton1 = new class Gtk::Button(Gtk::StockID("gtk-apply"));
-  label1 = new class Gtk::Label("Enter a Shell command:");
-  entry1 = new class Gtk::Entry();
-  vbox1  = new class Gtk::VBox(false, 0);
-
-
-  radiobutton1 = new class Gtk::RadioButton(_RadioBGroup_radiobutton1, 
-    "Set Action For \"" + mimeType.substr(0, mimeType.find("_")) + "\"" );
-
-  radiobutton1->signal_clicked().connect(
-      sigc::bind<Glib::ustring >( sigc::mem_fun(*this,
-      &DaIconModes::ChooseActionDialogue::GetCurrentAction), mimeType.substr(0, mimeType.find("_")) ));
-
- radiobutton2 = new class Gtk::RadioButton(_RadioBGroup_radiobutton1,
-      "Set Action For \"" + mimeType + "\"")  ;
-
-  radiobutton2->signal_clicked().connect(
-      sigc::bind<Glib::ustring >( sigc::mem_fun(*this,
-      &DaIconModes::ChooseActionDialogue::GetCurrentAction), mimeType ));
-
-  cancelbutton1->set_flags(Gtk::CAN_FOCUS);
-  cancelbutton1->set_flags(Gtk::CAN_DEFAULT);
-  cancelbutton1->signal_clicked().connect(
-      sigc::mem_fun(*this, &DaIconModes::ChooseActionDialogue::cancled) );
-  okbutton1->set_flags(Gtk::CAN_FOCUS);
-  okbutton1->set_flags(Gtk::CAN_DEFAULT);
-  okbutton1->signal_clicked().connect(
-      sigc::mem_fun(*this, &DaIconModes::ChooseActionDialogue::modifyAction) );
-  get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
-  radiobutton1->set_flags(Gtk::CAN_FOCUS);
-  radiobutton1->set_mode(true);
-  radiobutton1->set_active(false);
-  radiobutton2->set_flags(Gtk::CAN_FOCUS);
-  radiobutton2->set_mode(true);
-  radiobutton2->set_active(true);
-  label1->set_padding(2,4);
-  label1->set_justify(Gtk::JUSTIFY_LEFT);
-  entry1->set_flags(Gtk::CAN_FOCUS);
-  entry1->set_has_frame(true);
-  vbox1->pack_start(*radiobutton1, Gtk::PACK_SHRINK, 0);
-  vbox1->pack_start(*radiobutton2, Gtk::PACK_SHRINK, 0);
-  vbox1->pack_start(*label1, Gtk::PACK_SHRINK, 0);
-  vbox1->pack_start(*entry1, Gtk::PACK_SHRINK, 0);
-  get_vbox()->set_homogeneous(false);
-  get_vbox()->set_spacing(5);
-  get_vbox()->set_border_width(6);
-  get_vbox()->pack_start(*vbox1);
-  set_border_width(6);
-  set_title("Set Run Action");
-  set_modal(true);
-  property_window_position().set_value(Gtk::WIN_POS_CENTER_ON_PARENT);
-  set_resizable(true);
-  property_destroy_with_parent().set_value(false);
-  set_has_separator(false);
-  add_action_widget(*cancelbutton1, Gtk::RESPONSE_CANCEL);
-  add_action_widget(*okbutton1, Gtk::RESPONSE_OK);
-  set_default_response(Gtk::RESPONSE_OK);
-
   show_all_children();
   }
 
 /**********************/
 
-void DaIconModes::ChooseActionDialogue::GetCurrentAction(Glib::ustring mimeType){
-
-  Glib::ustring contents, exec1 = getenv("HOME");
-  exec1 += (Glib::ustring)("/Choices/MIME-types/");
-  exec1 += mimeType;
-
-  try {
-    contents = Glib::file_get_contents(exec1);
-    contents = contents.substr(contents.find("exec ") + 5);
-    contents = contents.substr(0,contents.find("\n"));
-    }
-  catch(const Glib::Error) {
-    contents = "* \"$@\"" ;
-    }
-  entry1->set_text(contents);
-}
-
-/**********************/
-
-void DaIconModes::ChooseActionDialogue::cancled(){
-  hide();
-  return;
-  }
-
-/**********************/
-
-void DaIconModes::ChooseActionDialogue::modifyAction(){
-
-  if ( entry1->get_text() != "* \"$@\""){ //don't intentionally make a broken script.
-    Glib::ustring command = "#! /bin/sh\nexec ";
-    command += entry1->get_text();
-    command += "\n";
-
-    try {
-      Glib::ustring exec1 = getenv("HOME");
-      exec1 += (Glib::ustring)("/Choices/MIME-types/");
-      if(radiobutton2->get_active()) exec1 += mime;
-      if(radiobutton1->get_active())exec1 += mime.substr(0, mime.find("_"));
-      Gnome::Vfs::Handle write_handle;
-
-      // Now write the data we read out to the output uri
-      write_handle.create(exec1, Gnome::Vfs::OPEN_WRITE, false, 0755);
-      write_handle.seek(Gnome::Vfs::SEEK_POS_START, 0);
-      GnomeVFSFileSize bytes_written = write_handle.write(command.data(), command.size());
-      }
-    catch(const Gnome::Vfs::exception) {
-  //  parent->set_message("Couldn't write new definition.");
-      hide();
-      return;
-      }
-    }
-  hide();
-  return;
-  }
-
-/**********************/
-
-void DaIconModes::SetPermissions(const Glib::ustring file) {
-
-
-  Gnome::Vfs::Handle read_handle;
-  Glib::RefPtr<Gnome::Vfs::FileInfo> info;
-
-  try {
-    read_handle.open( parent->history[position].top() + file, Gnome::Vfs::OPEN_READ);
-    info = read_handle.get_file_info(Gnome::Vfs::FILE_INFO_GET_ACCESS_RIGHTS);
-
-    SetPermissionsDialogue * setPermissions;
-    setPermissions = new SetPermissionsDialogue(info,parent->history[position].top());
-    setPermissions->show();
-    }
-  catch(const Gnome::Vfs::exception& ex) {
-    parent->set_message("Err... Setting error?");
-    }
-  }
-
-/**********************/
-
-void DaIconModes::copy(const Glib::ustring file) {
-  CopyDialogue * cp =  new CopyDialogue( parent->history[position].top() + file , *parent);
-  cp->show();
-  }
-
-/**********************/
-
-void DaIconModes::move(const Glib::ustring file) {
-  MoveDialogue * mv =  new MoveDialogue( parent->history[position].top() + file , *parent);
-  mv->show();
-  }
-
-/**********************/
-
-void DaIconModes::link(const Glib::ustring file) {
-  LinkDialogue * ln =  new LinkDialogue( parent->history[position].top() + file , *parent);
-  ln->show();
-  }
-
-/**********************/
-
-void DaIconModes::unlinkify(const Glib::ustring file) {
-  DeleteDialogue * del =  new DeleteDialogue( parent->history[position].top() + file , *parent);
-  del->show();
-  }
-
-/**********************/
-
-DaIconModes::SetPermissionsDialogue::SetPermissionsDialogue(
-    Glib::RefPtr<Gnome::Vfs::FileInfo> info, Glib::ustring path){
-fullPath = path;
-  set_title("Set file permissions");
-  set_modal(true);
-
-   read = new class Gtk::Label("R");
-   write = new class Gtk::Label("W");
-   run = new class Gtk::Label("X");
-   user = new class Gtk::Label("User");
-   group = new class Gtk::Label("Group");
-   others = new class Gtk::Label("Everybody");
-
-   explaination = new class Gtk::Label("for \""+ info->get_name() + "\"...");
-
-   layout = new class Gtk::Table(5, 6, false);
-
-   u_r = new class Gtk::CheckButton("");
-   if((info->get_permissions() & Gnome::Vfs::PERM_USER_READ) != 0)  u_r->set_active(true);
-   u_w = new class Gtk::CheckButton("");
-   if((info->get_permissions() & Gnome::Vfs::PERM_USER_WRITE) != 0)  u_w->set_active(true);
-   u_x = new class Gtk::CheckButton("");
-   if((info->get_permissions() & Gnome::Vfs::PERM_USER_EXEC) != 0)  u_x->set_active(true);
-   g_r = new class Gtk::CheckButton("");
-   if((info->get_permissions() & Gnome::Vfs::PERM_GROUP_READ) != 0)  g_r->set_active(true);
-   g_w = new class Gtk::CheckButton("");
-   if((info->get_permissions() & Gnome::Vfs::PERM_GROUP_WRITE) != 0)  g_w->set_active(true);
-   g_x = new class Gtk::CheckButton("");
-   if((info->get_permissions() & Gnome::Vfs::PERM_GROUP_EXEC) != 0)  g_x->set_active(true);
-   o_r = new class Gtk::CheckButton("");
-   if((info->get_permissions() & Gnome::Vfs::PERM_OTHER_READ) != 0)  o_r->set_active(true);
-   o_w = new class Gtk::CheckButton("");
-   if((info->get_permissions() & Gnome::Vfs::PERM_OTHER_WRITE) != 0)  o_w->set_active(true);
-   o_x = new class Gtk::CheckButton("");
-   if((info->get_permissions() & Gnome::Vfs::PERM_OTHER_EXEC) != 0)  o_x->set_active(true);
-
-   extra = new  Gtk::VSeparator;
-
-   sticky = new class Gtk::CheckButton("Sticky");
-   if((info->get_permissions() & Gnome::Vfs::PERM_STICKY) != 0)  sticky->set_active(true);
-   GID = new class Gtk::CheckButton("Group ID");
-   if((info->get_permissions() & Gnome::Vfs::PERM_SGID) != 0)  GID->set_active(true);
-   UID = new class Gtk::CheckButton("User ID");
-   if((info->get_permissions() & Gnome::Vfs::PERM_SUID) != 0)  UID->set_active(true);
-
-   layout->attach(*u_r, 1, 2, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
-   layout->attach(*u_w, 2, 3, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
-   layout->attach(*u_x, 3, 4, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
-   layout->attach(*g_r, 1, 2, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
-   layout->attach(*g_w, 2, 3, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
-   layout->attach(*g_x, 3, 4, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
-   layout->attach(*o_r, 1, 2, 4, 5, Gtk::FILL, Gtk::FILL, 0, 0);
-   layout->attach(*o_w, 2, 3, 4, 5, Gtk::FILL, Gtk::FILL, 0, 0);
-   layout->attach(*o_x, 3, 4, 4, 5, Gtk::FILL, Gtk::FILL, 0, 0);
-
-   layout->attach(*extra,4,5,1,5, Gtk::FILL | Gtk::EXPAND, Gtk::FILL, 10, 0);
-
-   layout->attach(*sticky, 5, 6, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
-   layout->attach(*GID, 5, 6, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
-   layout->attach(*UID, 5, 6, 4, 5, Gtk::FILL, Gtk::FILL, 0, 0);
-
-   layout->attach(*read, 1, 2, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
-   layout->attach(*write, 2, 3, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
-   layout->attach(*run, 3, 4, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
-   layout->attach(*user, 0, 1, 2, 3, Gtk::FILL , Gtk::FILL, 0, 0);
-   layout->attach(*group, 0, 1, 3, 4, Gtk::FILL , Gtk::FILL, 0, 0);
-   layout->attach(*others, 0, 1, 4, 5, Gtk::FILL , Gtk::FILL, 0, 0);
-   layout->attach(*explaination, 0, 6, 0, 1, Gtk::FILL | Gtk::EXPAND, Gtk::FILL, 10, 0);
-
-
-  get_vbox()->pack_start(*layout);
-  button1 = new class Gtk::Button(Gtk::StockID("gtk-cancel"));
-  button1->signal_clicked().connect(
-      sigc::mem_fun(*this, &DaIconModes::SetPermissionsDialogue::cancled) );
-
-
-  button2 = new class Gtk::Button(Gtk::StockID("gtk-apply"));
-  button2->signal_clicked().connect(
-    sigc::bind<Glib::RefPtr<Gnome::Vfs::FileInfo> >(
-      sigc::mem_fun(*this, &DaIconModes::SetPermissionsDialogue::apply), info ));
-
-
-  get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
-  add_action_widget(*button1, -6);
-  add_action_widget(*button2, -10);
-
-  set_modal(true);
-  show_all_children();
-  show();
-  }
-
-/**********************/
-
-void DaIconModes::SetPermissionsDialogue::cancled(){
-  hide();
-  }
-
-/**********************/
-
-void DaIconModes::SetPermissionsDialogue::apply(Glib::RefPtr<Gnome::Vfs::FileInfo> info){
-
-  // *nix and *BSD only, blah blah blah.
-  int permissions = 0;
-
-
-
-  if(UID->get_active()) permissions += 2048;
-  if(GID->get_active()) permissions += 1024;
-  if(sticky->get_active()) permissions += 512;
-
-  if(u_r->get_active()) permissions += 256;
-  if(u_w->get_active()) permissions += 128;
-  if(u_x->get_active()) permissions += 64;
-
-  if(g_r->get_active()) permissions += 32;
-  if(g_w->get_active()) permissions += 16;
-  if(g_x->get_active()) permissions += 8;
-
-  if(o_r->get_active()) permissions += 4;
-  if(o_w->get_active()) permissions += 2;
-  if(o_x->get_active()) permissions += 1;
-
-  chmod((fullPath + info->get_name()).c_str(), permissions);
-
-  hide();
-  }
-
-/**********************/
-
-DaIconModes::SetPermissionsDialogue::~SetPermissionsDialogue(){
-      delete read;
-      delete write;
-      delete run;
-      delete user;
-      delete group;
-      delete others;
-      delete explaination;
-      delete layout;
-      delete u_r;
-      delete u_w;
-      delete u_x;
-      delete g_r;
-      delete g_w;
-      delete g_x;
-      delete o_r;
-      delete o_w;
-      delete o_x;
-      delete extra;
-      delete sticky;
-      delete GID;
-      delete UID;
-      delete button1;
-      delete button2;
-      }
-
-/**********************/
-
-Glib::RefPtr<Gdk::Pixbuf> DaIconModes::getIcon(Glib::ustring mimeGiven, guint size){
+Glib::RefPtr<Gdk::Pixbuf> DaIconModes::getIcon(Glib::ustring mimeGiven){
   int i;
   static std::vector <Glib::ustring> mimeList;
   static std::vector < Glib::RefPtr<Gdk::Pixbuf> > unsizedImg;
@@ -875,8 +90,7 @@
 
   for(i = 0; i< mimeList.size(); i++){
     if( mimeGiven == mimeList[i] ){
-      Glib::RefPtr<Gdk::Pixbuf> scale = unsizedImg[i]->scale_simple(size,size,Gdk::INTERP_TILES);
-      return scale;
+      return unsizedImg[i];
       }
     }
    // pic doesn't exist.
@@ -907,259 +121,136 @@
 
   unsizedImg.push_back(xe);
 
-  Glib::RefPtr<Gdk::Pixbuf> scale = unsizedImg[i]->scale_simple(size,size,Gdk::INTERP_TILES);
-  return scale; 
+  return unsizedImg[i]; 
   }
 
 /**********************/
 
- void DaIconModes::SwitchHidden(guint pos){
+bool DaIconModes::addEntry(
+    Glib::ustring rel_path,
+    Glib::RefPtr<const Gnome::Vfs::FileInfo> info,
+    bool recursing_will_loop,
+    bool recurse) {
 
-position = pos;
-if (parent->optShowHidden->get_active())
-    parent->set_message("Showing Hidden Files");
-else
-    parent->set_message("Hidden Files are hidden again");
-
-  redraw();
+  if (info->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY){
+    iconlist[slotsUsed++] = new proto_icon(*this, parent->history[position].top(), info);
+    }
+  return true;
   }
 
 /**********************/
 
-DaIconModes::CopyDialogue::CopyDialogue(Glib::ustring file, Darimasen& parent){
+void DaIconModes::on_size_allocate(Gtk::Allocation& allocation){
 
-grandparent = &parent;
-   cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
-   okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
-   label = Gtk::manage(new class Gtk::Label(file));
-   entry = Gtk::manage(new class Gtk::Entry());
+  int oldie = IconsHigh;
+  IconsHigh = allocation.get_height() / 58;
+  if ( oldie != IconsHigh ){ //if resize is needed
+    Gtk::Widget * tmp = get_child();
 
-   okbutton->set_flags(Gtk::CAN_FOCUS);
-   okbutton->set_flags(Gtk::CAN_DEFAULT);
-   cancelbutton->set_flags(Gtk::CAN_FOCUS);
+  redraw();
+    }
 
-   set_title("Copy File to");
-   set_modal(true);
-
-   get_vbox()->pack_start(*label, Gtk::PACK_SHRINK, 0);
-   get_vbox()->pack_start(*entry, Gtk::PACK_SHRINK, 0);
-
-
-   entry->set_text(file);
-
-   add_action_widget(*cancelbutton, -6);
-   add_action_widget(*okbutton, -5);
-
-
-   okbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::CopyDialogue::onOk));
-   cancelbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::CopyDialogue::onCancel));
-
-
-   show_all_children();
+  Gtk::EventBox::on_size_allocate(allocation);
   }
 
 /**********************/
 
-void DaIconModes::CopyDialogue::onOk(){
-//  std::cout << "copying " << label->get_text()
-//    << "\nto " << entry->get_text() << "\n\n";
+void DaIconModes::redraw(){
+    Gtk::Widget * tmp = get_child();
+  
+   if (tmp)
+        delete tmp; // actually DisposableTable, but segfaulted otherwise
 
-//rename(label->get_text().c_str(), entry->get_text().c_str());
-    Glib::spawn_command_line_async((Glib::ustring)"cp \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str()+ "\"");
+      Gtk::Table * DisposableTable = new Gtk::Table((filesAtPath)/IconsHigh+1,IconsHigh);
 
-  grandparent->updateView(
-    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
-    entry->get_text().substr(0, entry->get_text().rfind(slash,entry->get_text().length())+1));
+      add(*DisposableTable);
 
-  hide();
-  }
 
-/**********************/
+      int y_pos = 0;
+      int x_pos = 0;
 
-void DaIconModes::CopyDialogue::onCancel(){
-  hide();
-  }
+      for(int i = 0; i < slotsUsed; i++){
+        if(  !iconlist[i]->hidden || parent->optShowHidden->get_active()){
 
-/**********************/
+          Sidecon * tmpSidecon = new Sidecon(*iconlist[i]);
 
-DaIconModes::CopyDialogue::~CopyDialogue(){}
 
-/**********************/
-/**********************/
 
-DaIconModes::MoveDialogue::MoveDialogue(Glib::ustring file, Darimasen& parent){
+          DisposableTable->attach( *tmpSidecon, x_pos, x_pos+1, y_pos, y_pos+1,Gtk::FILL, Gtk::FILL, 4, 4);
+          y_pos++; 
+          if(parent->get_mode() == 0){
+            if ( y_pos + 1 > IconsHigh){
+              y_pos = 0;
+              x_pos++;
+              }
+            }
+          }
+        }
 
-grandparent = &parent;
-   cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
-   okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
-   label = Gtk::manage(new class Gtk::Label(file));
-   entry = Gtk::manage(new class Gtk::Entry());
-
-   okbutton->set_flags(Gtk::CAN_FOCUS);
-   okbutton->set_flags(Gtk::CAN_DEFAULT);
-   cancelbutton->set_flags(Gtk::CAN_FOCUS);
-
-   set_title("Move File to");
-   set_modal(true);
-
-   get_vbox()->pack_start(*label, Gtk::PACK_SHRINK, 0);
-   get_vbox()->pack_start(*entry, Gtk::PACK_SHRINK, 0);
-
-
-   entry->set_text(file);
-
-   add_action_widget(*cancelbutton, -6);
-   add_action_widget(*okbutton, -5);
-
-
-   okbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::MoveDialogue::onOk));
-   cancelbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::MoveDialogue::onCancel));
-
-
-   show_all_children();
+      DisposableTable->show();
+        DisposableTable->show_all_children();
   }
-
+
 /**********************/
 
-void DaIconModes::MoveDialogue::onOk(){
-//  std::cout << "moveing " << label->get_text()
-//    << "\nto " << entry->get_text() << "\n\n";
+DaIconModes::DaIconModes(
+      guint pos,
+      Darimasen& myParent) {
 
- // rename(label->get_text().c_str(), entry->get_text().c_str());
+  parent = &myParent;
+  position = pos; //where we are in the world
+  mode = parent->get_mode();
 
-    Glib::spawn_command_line_async((Glib::ustring)"mv \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str()+ "\"");
+  lastclick = 0;  // a double-click detector. 
+  filesAtPath = 0; // count files in directory
 
-  grandparent->updateView(
-    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
-    entry->get_text().substr(0, entry->get_text().rfind(slash,entry->get_text().length())+1));
+  try{  //count up the files in the directory. 
+    Gnome::Vfs::DirectoryHandle handle;
+    handle.open((parent->history[position].top()), Gnome::Vfs::FILE_INFO_DEFAULT);
+    bool file_exists = true;
+    while(file_exists){
+      //if(  handle.read_next(file_exists)->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY )
+      handle.read_next(file_exists);
+      filesAtPath++;
+      }
+    }
+  catch(const Gnome::Vfs::exception&){}
 
-  hide();
-  }
+  set_visible_window(false);
 
-/**********************/
+  iconlist = new proto_icon*[filesAtPath];
+  slotsUsed = 0;
+  IconsHigh = 0;
+  try { // make all those files into proto_icons
+    Gnome::Vfs::DirectoryHandle::visit(
+      parent->history[position].top(),
+      Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
+      Gnome::Vfs::FILE_INFO_FORCE_FAST_MIME_TYPE |
+      Gnome::Vfs::FILE_INFO_FOLLOW_LINKS ,
+      Gnome::Vfs::DIRECTORY_VISIT_LOOPCHECK,
+      sigc::mem_fun(*this,&DaIconModes::addEntry));
+    }
+  catch(const Gnome::Vfs::exception& ex){}
 
-void DaIconModes::MoveDialogue::onCancel(){
-  hide();
   }
 
 /**********************/
 
-DaIconModes::MoveDialogue::~MoveDialogue(){}
+DaIconModes::~DaIconModes(){
 
-/**********************/
-/**********************/
-
-DaIconModes::LinkDialogue::LinkDialogue(Glib::ustring file, Darimasen& parent){
-
-grandparent = &parent;
-   cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
-   okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
-   label = Gtk::manage(new class Gtk::Label(file));
-   entry = Gtk::manage(new class Gtk::Entry());
-
-   okbutton->set_flags(Gtk::CAN_FOCUS);
-   okbutton->set_flags(Gtk::CAN_DEFAULT);
-   cancelbutton->set_flags(Gtk::CAN_FOCUS);
-
-   set_title("Link File to");
-   set_modal(true);
-
-   get_vbox()->pack_start(*label, Gtk::PACK_SHRINK, 0);
-   get_vbox()->pack_start(*entry, Gtk::PACK_SHRINK, 0);
-
-
-   entry->set_text(file);
-
-   add_action_widget(*cancelbutton, -6);
-   add_action_widget(*okbutton, -5);
-
-
-   okbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::LinkDialogue::onOk));
-   cancelbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::LinkDialogue::onCancel));
-
-
-   show_all_children();
   }
 
 /**********************/
 
-void DaIconModes::LinkDialogue::onOk(){
-//  std::cout << "linking " << label->get_text()
- //   << "\nto " << entry->get_text() << "\n\n";
+ void DaIconModes::SwitchHidden(guint pos){
 
-  //symlink(label->get_text().c_str(), entry->get_text().c_str());
-    Glib::spawn_command_line_async((Glib::ustring)"ln -s \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str() + "\"");
+position = pos;
+if (parent->optShowHidden->get_active())
+    parent->set_message("Showing Hidden Files");
+else
+    parent->set_message("Hidden Files are hidden again");
 
-  grandparent->updateView(
-    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
-    entry->get_text().substr(0, entry->get_text().rfind(slash,entry->get_text().length())+1));
-
-  hide();
+  redraw();
   }
 
 /**********************/
-
-void DaIconModes::LinkDialogue::onCancel(){
-  hide();
-  }
-
-/**********************/
-
-DaIconModes::LinkDialogue::~LinkDialogue(){}
-
-/**********************/
-/**********************/
-
-DaIconModes::DeleteDialogue::DeleteDialogue(Glib::ustring file, Darimasen& parent){
-
-grandparent = &parent;
-   cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
-   okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
-   label = Gtk::manage(new class Gtk::Label(file));
-
-   okbutton->set_flags(Gtk::CAN_FOCUS);
-   okbutton->set_flags(Gtk::CAN_DEFAULT);
-   cancelbutton->set_flags(Gtk::CAN_FOCUS);
-
-   set_title("Delete File");
-   set_modal(true);
-
-   get_vbox()->pack_start(*label, Gtk::PACK_SHRINK, 0);
-
-   add_action_widget(*cancelbutton, -6);
-   add_action_widget(*okbutton, -5);
-
-
-   okbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::DeleteDialogue::onOk));
-   cancelbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::DeleteDialogue::onCancel));
-
-
-   show_all_children();
-  }
-
-/**********************/
-
-void DaIconModes::DeleteDialogue::onOk(){
-//  std::cout << "delete " << label->get_text() << "\n\n";
-
- // unlink( label->get_text().c_str() );
-  Glib::spawn_command_line_async((Glib::ustring)"rm \""  + label->get_text().c_str() + "\"");
-
-  grandparent->updateView(
-    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
-    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1));
-   //std::cout << label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1) ;
-  hide();
-  }
-
-/**********************/
-
-void DaIconModes::DeleteDialogue::onCancel(){
-  hide();
-  }
-
-/**********************/
-
-DaIconModes::DeleteDialogue::~DeleteDialogue(){}
-
-/**********************/

Modified: trunk/src/iconmodes.h
===================================================================
--- trunk/src/iconmodes.h	2005-04-19 18:26:51 UTC (rev 56)
+++ trunk/src/iconmodes.h	2005-04-20 15:32:37 UTC (rev 57)
@@ -1,212 +1,63 @@
 /* Darimasen - iconmodes.h - Copyright (C) 2004 - 2005 Sudrien, GPL */
 
 #ifndef ICONMODES_H
-#define ICONMODES_H
-
-/**********************/
-
-#include <gtkmm/table.h>
-#include <gtkmm/messagedialog.h>
-#include "main.h"
-#include <libgnomevfsmm.h>
-#include <gtkmm/entry.h>
-#include <gdkmm/pixbuf.h>
-#include "iconmodes.h"
-#include "darimasen.h"
-#include <gtkmm/separator.h>
-#include <unistd.h>
-
-/**********************/
-
-class DaIconModes : public Gtk::EventBox {
+#define ICONMODES_H
 
 
-  class Sidecon : public Gtk::Table {
-    Glib::ustring filePath, mimeInfo;
-    DaIconModes * parent;
-    Gtk::Image * image1;
-    Gtk::Label * FileName;
-    Gtk::Label * FilePermissions ;
-    Gtk::Label * FileSizeInfo;
-  public:
-    Sidecon(Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>&, DaIconModes&);
-    ~Sidecon(){
-      delete image1;
-      delete FileName;
-      delete FilePermissions;
-      delete FileSizeInfo;
-      }
+#include "darimasen.h"
+#include <libgnomevfsmm.h>
+#include <gtkmm/table.h>
+#include <gdkmm/pixbuf.h>
 
-    };
+/**********************/
 
-/*
-  class Detail : public Gtk::Table {
-    public:
-    Glib::ustring filePath, mimeInfo;
-    Detail(Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>& );
-    };
-*/
+class DaIconModes : public Gtk::EventBox {
 
-  class ChooseActionDialogue : public Gtk::Dialog {
-    Gtk::RadioButton::Group _RadioBGroup_radiobutton1;
-    Gtk::Button *cancelbutton1, *okbutton1;
-    Gtk::RadioButton *radiobutton1, *radiobutton2;
-    Gtk::Label       * label1;
-    Gtk::Entry       * entry1;
-    Gtk::VBox        * vbox1;
-    Glib::ustring mime;
-    void cancled();
-    void modifyAction();
-    void GetCurrentAction(Glib::ustring);
+  class proto_icon {
+    Glib::ustring path;
    DaIconModes * parent;
 
-    public:
-
-    ChooseActionDialogue(Glib::ustring);
-    ~ChooseActionDialogue(){
-
-      delete cancelbutton1;
-      delete okbutton1;
-      delete label1;
-      delete entry1;
-      delete vbox1;
-      delete radiobutton1;
-      delete radiobutton2;
-      }
-    };
-
-
-  class SetPermissionsDialogue : public Gtk::Dialog {
-    Glib::ustring fullPath;
-    Gtk::Button * button1;
-    Gtk::Button * button2;
-
-    Gtk::CheckButton * u_r, * u_w, * u_x;
-    Gtk::CheckButton * g_r, * g_w, * g_x;
-    Gtk::CheckButton * o_r, * o_w, * o_x;
-    
-    Gnome::Vfs::Handle info;
-
-    Gtk::VSeparator * extra;
-    Gtk::CheckButton * sticky, * GID, * UID;
-
-    Gtk::Label * user, * group, * others;
-    Gtk::Label * read, * write, * run;
-    Gtk::Label * explaination;
-
-    Gtk::Table * layout;
-    void cancled();
-    void apply(Glib::RefPtr<Gnome::Vfs::FileInfo>);
-
-    public:
-
-    SetPermissionsDialogue(Glib::RefPtr<Gnome::Vfs::FileInfo> , Glib::ustring);
-    ~SetPermissionsDialogue();
-    };
-
-  class CopyDialogue : public Gtk::Dialog {
-    class Gtk::Button * cancelbutton;
-    class Gtk::Button * okbutton;
-    class Gtk::Label * label;
-    class Gtk::Entry * entry;
-    void onOk();
-    void onCancel();
-
-    class Darimasen * grandparent;
-
   public:
-    CopyDialogue(Glib::ustring, Darimasen&);
-    ~CopyDialogue();
-    };
-//
-  class LinkDialogue : public Gtk::Dialog {
-    class Gtk::Button * cancelbutton;
-    class Gtk::Button * okbutton;
-    class Gtk::Label * label;
-    class Gtk::Entry * entry;
-    void onOk();
-    void onCancel();
 
-    class Darimasen * grandparent;
+    Glib::RefPtr<Gdk::Pixbuf> icon;
+    Gtk::Label * FileName;
+    Gtk::Label * ShortFileName;
+    Gtk::Label * FileMime;
+    Gtk::Label * FileSize;
+    bool hidden;
 
-  public:
-    LinkDialogue(Glib::ustring, Darimasen&);
-    ~LinkDialogue();
+    proto_icon(DaIconModes&, Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>);
+    ~proto_icon();
     };
-//
-  class MoveDialogue : public Gtk::Dialog {
-    class Gtk::Button * cancelbutton;
-    class Gtk::Button * okbutton;
-    class Gtk::Label * label;
-    class Gtk::Entry * entry;
-    void onOk();
-    void onCancel();
 
-    class Darimasen * grandparent;
-
+  class Sidecon : public Gtk::Table {
   public:
-    MoveDialogue(Glib::ustring, Darimasen&);
-    ~MoveDialogue();
-    };
-//
-  class DeleteDialogue : public Gtk::Dialog {
-    class Gtk::Button * cancelbutton;
-    class Gtk::Button * okbutton;
-    class Gtk::Label * label;
-    void onOk();
-    void onCancel();
+    Sidecon(proto_icon&);
+  };
 
-    class Darimasen * grandparent;
 
-  public:
-    DeleteDialogue(Glib::ustring, Darimasen&);
-    ~DeleteDialogue();
-    };
-//
 
-  class Darimasen * parent;
-
-
-
-  void RunFile(const Glib::ustring);
-  void RunFileAsText(const Glib::ustring);
-
-  void SetRunAction(const Glib::ustring);
-  void SetPermissions(const Glib::ustring);
-
-  void copy(const Glib::ustring);
-  void move(const Glib::ustring);
-  void link(const Glib::ustring);
-  void unlinkify(const Glib::ustring);
-
-  bool on_eventbox_button_press(GdkEventButton*, const Glib::ustring);
+  Glib::RefPtr<Gdk::Pixbuf> getIcon(Glib::ustring);
+  bool addEntry(Glib::ustring, Glib::RefPtr<const Gnome::Vfs::FileInfo>, bool, bool);
   void on_size_allocate(Gtk::Allocation&);
   void redraw();
-  bool addEntry(Glib::ustring, Glib::RefPtr<const Gnome::Vfs::FileInfo>, bool, bool);
-  Glib::RefPtr<Gdk::Pixbuf> getIcon(Glib::ustring, guint);
 
-
-
-  Gtk::EventBox ** sideconContainer;
-
-  Gtk::Menu m_Menu_Popup;
-
-
-//  unsigned short iconmode;
+  class Darimasen * parent;
+  guint position;
   guint32 lastclick;
+  guint filesAtPath;
+  gshort mode;
+  proto_icon ** iconlist;
   guint slotsUsed;
   guint IconsHigh;
-  guint position;
-  guint filesAtPath;
-  int * hidden;
 
-
+
 public:
   ~DaIconModes();
-  DaIconModes(guint, Darimasen&);
+  DaIconModes(guint, class Darimasen&);
 
-  void SwitchHidden(guint);
-  };
-
+  void SwitchHidden(guint);
+};
+
 /**********************/
 
 #endif //ICONMODES_H



From darimasen-svn-admin at lists.berlios.de  Thu Apr 21 07:06:29 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Thu, 21 Apr 2005 07:06:29 +0200
Subject: [Darimasen-svn] r58 - trunk/src
Message-ID: <200504210506.j3L56TU3009876@sheep.berlios.de>

Author: sudrien
Date: 2005-04-21 07:05:41 +0200 (Thu, 21 Apr 2005)
New Revision: 58

Modified:
   trunk/src/darimasen.cpp
   trunk/src/iconmodes.cpp
   trunk/src/iconmodes.h
Log:
iconmodes han a featureless stability

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-20 15:32:37 UTC (rev 57)
+++ trunk/src/darimasen.cpp	2005-04-21 05:05:41 UTC (rev 58)
@@ -432,14 +432,11 @@
 
 /**********************/
 
- void Darimasen::fChangeIconMode(){
+void Darimasen::fChangeIconMode(){
   mode = (mode + 1) % 2; // increment, mod of possibilities.
-  std::cout << "mode = " << mode << "\n"; 
-
- // for(int i = 0; i < history.size(); i++){
- //     ChangeCurrentPath(history[i].top(),false,false);
- //   } 
-
+  for(int i = 0; i < history.size(); i++){
+      ChangeCurrentPath(history[i].top(),false,false);
+    } 
   }
 
 /**********************/

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-20 15:32:37 UTC (rev 57)
+++ trunk/src/iconmodes.cpp	2005-04-21 05:05:41 UTC (rev 58)
@@ -4,6 +4,106 @@
 
 /**********************/
 
+void DaIconModes::proto_icon::run(){
+  std::cout << path << FileName << "\n";
+
+Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
+  Gnome::Vfs::Handle read_handle;
+  try{
+    read_handle.open( path + FileName, Gnome::Vfs::OPEN_READ);
+    info = read_handle.get_file_info(
+      Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
+      Gnome::Vfs::FILE_INFO_FORCE_SLOW_MIME_TYPE );
+    }
+  catch(const Gnome::Vfs::exception& ex){
+    std::cout << "Does not exist.\n";
+    return;
+    }
+
+  Gnome::Vfs::Handle exec_handle;
+
+  Glib::ustring exec = getenv("HOME");
+  try{
+    exec += "/Choices/MIME-types/";
+    exec += FileMime.replace(FileMime.find("/"),1,"_");
+    exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
+
+    exec += " \""  + path + FileName + "\"";
+    Glib::spawn_command_line_async(exec);
+
+    parent->parent->set_message(exec + " was run.");
+    return;
+
+    }
+  catch(const Gnome::Vfs::exception& ex){
+    }
+
+
+  try{
+    exec = exec.substr(0, exec.rfind("_"));
+    exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
+    exec += " \""  + path + FileName + "\"";
+    Glib::spawn_command_line_async(exec);
+
+    parent->parent->set_message(exec + " was run.");
+    return;
+    }
+  catch(const Gnome::Vfs::exception& ex){
+    }
+
+  try{
+    if (Gnome::Vfs::Mime::can_be_executable(FileMime)){
+      parent->parent->set_message( "Running " + path + FileName);
+      Glib::spawn_command_line_async( path + FileName );
+      return;
+      }
+   }
+      catch(const Glib::Error) {}
+
+  Gtk::MessageDialog dialog(
+    "This mimetype does not have any action associated with it.\n"
+    "should it be opened as text?",
+    false, Gtk::MESSAGE_ERROR, Gtk::BUTTONS_OK_CANCEL);
+
+
+  //Handle the response:
+  switch(dialog.run())
+  {
+    case(Gtk::RESPONSE_OK):
+    {
+      Glib::ustring exec = getenv("HOME");
+      exec += "/Choices/MIME-types/text";
+      exec += " \""  + path + FileName + "\"";
+      Glib::spawn_command_line_async(exec);
+    parent->parent->set_message(exec + " was opened as a text file.");
+      return;
+      break;
+    }
+    default:
+    {
+    parent->parent->set_message("Well, that was usefull.");
+      break;
+    }
+  }
+
+  
+  }
+
+/**********************/
+
+bool DaIconModes::proto_icon::select(GdkEventButton* event){
+
+  if ((event->type == GDK_BUTTON_PRESS) && (event->button == 1)  && (parent->lastclick < event->time)){
+    parent->lastclick = event->time + 1000;
+    run();
+    return true;
+    }
+
+
+  }
+
+/**********************/
+
 DaIconModes::proto_icon::proto_icon(
       DaIconModes& getParent,
       Glib::ustring getPath,
@@ -11,77 +111,108 @@
 
   path = getPath;
  parent = &getParent;
 
-
   icon = parent->getIcon(getFile->get_mime_type());
 
+  FileName = getFile->get_name();
 
-  FileName = new Gtk::Label(getFile->get_name());
-  FileName->set_alignment(0,0.5);
-  FileName->show();
-
   if (getFile->get_name().length() > 25){
     int last = getFile->get_name().rfind(".");
     if (last != -1){
-      ShortFileName = new Gtk::Label(
-        getFile->get_name().substr(0, 20) + ".." + getFile->get_name().substr(last) );
+      ShortFileName = getFile->get_name().substr(0, 20) + ".." + getFile->get_name().substr(last);
       }
     else {
-      ShortFileName = new Gtk::Label(getFile->get_name().substr(0,22) + "..." );
+      ShortFileName = getFile->get_name().substr(0,22) + "...";
       }
     }
   else {
-  ShortFileName = new Gtk::Label(getFile->get_name() );
+  ShortFileName = getFile->get_name();
   }
-  ShortFileName->set_alignment(0,0.5);
 
+  FileMime = getFile->get_mime_type();
 
-  FileMime = new Gtk::Label(getFile->get_mime_type());
-  FileMime->set_alignment(0,0.5);
-
-
   guint size = getFile->get_size();
   if(size < 1024)
-    FileSize = new class Gtk::Label(int2ustr(size) + " B");
+    FileSize = int2ustr(size) + " B";
   else if (size < 1048576)
-    FileSize = new class Gtk::Label(int2ustr(size / 1024) + " KB");
+    FileSize = int2ustr(size / 1024) + " KB";
   else
-    FileSize = new class Gtk::Label( int2ustr(size / 1048576) + " MB");
-  FileSize->set_alignment(0,0.5);
+    FileSize = int2ustr(size / 1048576) + " MB";
 
   hidden = (getFile->get_name().substr(0,1) == ".");
+  };
 
+/**********************/
 
+DaIconModes::proto_icon::~proto_icon(){
+  std::cout << "proto deleted";
+  }
 
-  };
+/**********************/
 
+DaIconModes::Sidecon::Sidecon(proto_icon & in){
+
+  Arrange = new Gtk::Table();
+  source = &in;
+
+  Icon = new Gtk::Image(source->icon->scale_simple(48,48,Gdk::INTERP_TILES));
+  Arrange->attach(*Icon, 0, 1, 0, 3, Gtk::FILL, Gtk::FILL, 0, 0);
+
+  ShortName = new Gtk::Label(" " + source->ShortFileName);
+  ShortName->set_alignment(0,0.5);
+  Arrange->attach(*ShortName, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+
+  Mime = new Gtk::Label(" " + source->FileMime);
+  Mime->set_alignment(0,0.5);
+  Arrange->attach(*Mime, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+
+  Size = new Gtk::Label(" " + source->FileSize);
+  Size->set_alignment(0,0.5);
+  Arrange->attach(*Size, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+
+  add(*Arrange);
+  show_all_children();
+
+  signal_button_press_event().connect(
+    sigc::mem_fun(*source, &DaIconModes::proto_icon::select));
+
+  }
+
 /**********************/
 
+DaIconModes::Sidecon::~Sidecon(){
 
-DaIconModes::proto_icon::~proto_icon(){
-  delete FileName;
-  delete FileMime;
-  delete FileSize;
-std::cout << "proto deleted";
   }
 
 /**********************/
 
-DaIconModes::Sidecon::Sidecon(proto_icon & in){
+DaIconModes::Listview::Listview(proto_icon & in){
 
- // image1 = new class Gtk::Image(parent->getIcon(info->get_mime_type(), 48));
-Gtk::Image * image = new Gtk::Image(in.icon->scale_simple(48,48,Gdk::INTERP_TILES));
+  source = &in;
+  Arrange = new Gtk::Table();
 
+  Icon = new Gtk::Image(source->icon->scale_simple(16,16,Gdk::INTERP_TILES));
+  Arrange->attach(*Icon, 0, 1, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
 
-  attach(*image, 0, 1, 0, 3, Gtk::FILL, Gtk::FILL, 0, 0);
-  attach(*in.FileName, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-  attach(*in.FileMime, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-  attach(*in.FileSize, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+  Name = new Gtk::Label(" " + source->ShortFileName);
+  Name->set_alignment(0,0.5);
+  Arrange->attach(*Name, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
 
+  add(*Arrange);
   show_all_children();
+
+  signal_button_press_event().connect(
+    sigc::mem_fun(*source, &DaIconModes::proto_icon::select));
+
   }
 
 /**********************/
 
+DaIconModes::Listview::~Listview(){
+
+  }
+
+/**********************/
+
 Glib::RefPtr<Gdk::Pixbuf> DaIconModes::getIcon(Glib::ustring mimeGiven){
   int i;
   static std::vector <Glib::ustring> mimeList;
@@ -135,6 +266,7 @@
   if (info->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY){
     iconlist[slotsUsed++] = new proto_icon(*this, parent->history[position].top(), info);
     }
+
   return true;
   }
 
@@ -143,11 +275,18 @@
 void DaIconModes::on_size_allocate(Gtk::Allocation& allocation){
 
   int oldie = IconsHigh;
-  IconsHigh = allocation.get_height() / 58;
+
+  switch(mode){
+    case 0:
+      IconsHigh = allocation.get_height() / 57;
+      break;
+    case 1:
+      IconsHigh = allocation.get_height() / 25;
+      break;
+    }
   if ( oldie != IconsHigh ){ //if resize is needed
     Gtk::Widget * tmp = get_child();
-
-  redraw();
+    redraw();
     }
 
   Gtk::EventBox::on_size_allocate(allocation);
@@ -156,39 +295,41 @@
 /**********************/
 
 void DaIconModes::redraw(){
-    Gtk::Widget * tmp = get_child();
+  Gtk::Widget * tmp = get_child();
   
-   if (tmp)
-        delete tmp; // actually DisposableTable, but segfaulted otherwise
+  if (tmp)
+    delete tmp; // actually DisposableTable, but segfaulted otherwise
 
-      Gtk::Table * DisposableTable = new Gtk::Table((filesAtPath)/IconsHigh+1,IconsHigh);
+  Gtk::Table * DisposableTable = new Gtk::Table((filesAtPath)/IconsHigh+1,IconsHigh);
+  add(*DisposableTable);
 
-      add(*DisposableTable);
+  int y_pos = 0;
+  int x_pos = 0;
 
-
-      int y_pos = 0;
-      int x_pos = 0;
-
-      for(int i = 0; i < slotsUsed; i++){
-        if(  !iconlist[i]->hidden || parent->optShowHidden->get_active()){
-
+  for(int i = 0; i < slotsUsed; i++){
+    if(  !iconlist[i]->hidden || parent->optShowHidden->get_active()){
+      switch(mode){
+        case 0:
           Sidecon * tmpSidecon = new Sidecon(*iconlist[i]);
+          DisposableTable->attach( *tmpSidecon, x_pos, x_pos+1, y_pos, y_pos+1,Gtk::FILL, Gtk::FILL, 4, 4);
+          break;
+        case 1:
+          Listview * tmpListview = new Listview(*iconlist[i]);
+          DisposableTable->attach( *tmpListview, x_pos, x_pos+1, y_pos, y_pos+1,Gtk::FILL, Gtk::FILL, 4, 4);
+          break;
+        }
 
-
-
-          DisposableTable->attach( *tmpSidecon, x_pos, x_pos+1, y_pos, y_pos+1,Gtk::FILL, Gtk::FILL, 4, 4);
-          y_pos++; 
-          if(parent->get_mode() == 0){
-            if ( y_pos + 1 > IconsHigh){
-              y_pos = 0;
-              x_pos++;
-              }
-            }
+      y_pos++; 
+      if(parent->get_mode() == 0 || parent->get_mode() == 1){
+        if ( y_pos + 1 > IconsHigh){
+          y_pos = 0;
+          x_pos++;
           }
         }
-
-      DisposableTable->show();
-        DisposableTable->show_all_children();
+      }
+    }
+  DisposableTable->show();
+  DisposableTable->show_all_children();
   }
 
 /**********************/
@@ -209,7 +350,6 @@
     handle.open((parent->history[position].top()), Gnome::Vfs::FILE_INFO_DEFAULT);
     bool file_exists = true;
     while(file_exists){
-      //if(  handle.read_next(file_exists)->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY )
       handle.read_next(file_exists);
       filesAtPath++;
       }

Modified: trunk/src/iconmodes.h
===================================================================
--- trunk/src/iconmodes.h	2005-04-20 15:32:37 UTC (rev 57)
+++ trunk/src/iconmodes.h	2005-04-21 05:05:41 UTC (rev 58)
@@ -16,26 +16,49 @@
   class proto_icon {
     Glib::ustring path;
    DaIconModes * parent;
 
+    void run();
+
   public:
 
     Glib::RefPtr<Gdk::Pixbuf> icon;
-    Gtk::Label * FileName;
-    Gtk::Label * ShortFileName;
-    Gtk::Label * FileMime;
-    Gtk::Label * FileSize;
+    Glib::ustring FileName;
+    Glib::ustring ShortFileName;
+    Glib::ustring FileMime;
+    Glib::ustring FileSize;
     bool hidden;
 
+    bool select(GdkEventButton*);
+
     proto_icon(DaIconModes&, Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>);
     ~proto_icon();
     };
 
-  class Sidecon : public Gtk::Table {
+  class Sidecon : public Gtk::EventBox {
+    proto_icon * source;
+
+    Gtk::Table * Arrange;
+    Gtk::Image * Icon;
+    Gtk::Label * ShortName;
+    Gtk::Label * Mime;
+    Gtk::Label * Size;
+
   public:
     Sidecon(proto_icon&);
+    ~Sidecon();
   };
 
+  class Listview : public Gtk::EventBox {
+    proto_icon * source;
 
+    Gtk::Table * Arrange;
+    Gtk::Image * Icon;
+    Gtk::Label * Name;
 
+  public:
+    Listview(proto_icon&);
+    ~Listview();
+  };
+
   Glib::RefPtr<Gdk::Pixbuf> getIcon(Glib::ustring);
   bool addEntry(Glib::ustring, Glib::RefPtr<const Gnome::Vfs::FileInfo>, bool, bool);
   void on_size_allocate(Gtk::Allocation&);



From darimasen-svn-admin at lists.berlios.de  Fri Apr 22 07:00:34 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Fri, 22 Apr 2005 07:00:34 +0200
Subject: [Darimasen-svn] r59 - in trunk: . src
Message-ID: <200504220500.j3M50Yh2028280@sheep.berlios.de>

Author: sudrien
Date: 2005-04-22 07:00:03 +0200 (Fri, 22 Apr 2005)
New Revision: 59

Added:
   trunk/darimasen-0.0.8.ebuild
Removed:
   trunk/darimasen-0.0.7.ebuild
Modified:
   trunk/configure.in
   trunk/darimasen-svn-0.1.ebuild
   trunk/src/damenu.cpp
   trunk/src/darimasen.cpp
   trunk/src/darimasen.h
   trunk/src/iconmodes.cpp
Log:
Gtkmm-2.6 required - history menu

Modified: trunk/configure.in
===================================================================
--- trunk/configure.in	2005-04-21 05:05:41 UTC (rev 58)
+++ trunk/configure.in	2005-04-22 05:00:03 UTC (rev 59)
@@ -17,7 +17,7 @@
 
 AC_LANG_CPLUSPLUS
 
-PKG_CHECK_MODULES([PKG], [sigc++-2.0 >= 2.0 gtkmm-2.4 >= 2.4.0 gnome-vfsmm-2.6 >= 2.5.0])
+PKG_CHECK_MODULES([PKG], [sigc++-2.0 >= 2.0 gtkmm-2.4 >= 2.6.0 gnome-vfsmm-2.6 >= 2.5.0])
 AC_SUBST([PKG_CFLAGS])
 AC_SUBST([PKG_LIBS])
 

Deleted: trunk/darimasen-0.0.7.ebuild
===================================================================
--- trunk/darimasen-0.0.7.ebuild	2005-04-21 05:05:41 UTC (rev 58)
+++ trunk/darimasen-0.0.7.ebuild	2005-04-22 05:00:03 UTC (rev 59)
@@ -1,38 +0,0 @@
-# Copyright 1999-2004 Gentoo Technologies, Inc.
-# Distributed under the terms of the GNU General Public License v2
-# $Header: $
-
-
-DESCRIPTION="A file manager with menu-based navigation"
-HOMEPAGE="http://darimasen.berlios.de/"
-SRC_URI="http://download.berlios.de/darimasen/${P}.tar.bz2"
-
-LICENSE="GPL-2"
-SLOT="0"
-KEYWORDS="x86"
-
-IUSE=""
-SLOT="0"
-
-DEPEND=">=dev-libs/libsigc++-2.0.3
-        >=dev-cpp/gtkmm-2.4.11
-        >=dev-cpp/gnome-vfsmm-2.6.0
-        x11-themes/gnome-icon-theme"
-
-RDEPEND="!x11-misc/darimasen-svn"
-
-src_compile() {
-
-	./configure --prefix=/usr ${myconf} || die
-	emake || die
-}
-
-
-
-
-src_install() {
-	einfo "Installing..."
-	make DESTDIR=${D} install || die "make install failed"
-	dodoc README* AUTHORS TODO* COPYING
-}
-

Copied: trunk/darimasen-0.0.8.ebuild (from rev 56, trunk/darimasen-0.0.7.ebuild)
===================================================================
--- trunk/darimasen-0.0.7.ebuild	2005-04-19 18:26:51 UTC (rev 56)
+++ trunk/darimasen-0.0.8.ebuild	2005-04-22 05:00:03 UTC (rev 59)
@@ -0,0 +1,38 @@
+# Copyright 1999-2004 Gentoo Technologies, Inc.
+# Distributed under the terms of the GNU General Public License v2
+# $Header: $
+
+
+DESCRIPTION="A file manager with menu-based navigation"
+HOMEPAGE="http://darimasen.berlios.de/"
+SRC_URI="http://download.berlios.de/darimasen/${P}.tar.bz2"
+
+LICENSE="GPL-2"
+SLOT="0"
+KEYWORDS="x86"
+
+IUSE=""
+SLOT="0"
+
+DEPEND=">=dev-libs/libsigc++-2.0.3
+        >=dev-cpp/gtkmm-2.6.1
+        >=dev-cpp/gnome-vfsmm-2.6.0
+        x11-themes/gnome-icon-theme"
+
+RDEPEND="!x11-misc/darimasen-svn"
+
+src_compile() {
+
+	./configure --prefix=/usr ${myconf} || die
+	emake || die
+}
+
+
+
+
+src_install() {
+	einfo "Installing..."
+	make DESTDIR=${D} install || die "make install failed"
+	dodoc README* AUTHORS TODO* COPYING
+}
+

Modified: trunk/darimasen-svn-0.1.ebuild
===================================================================
--- trunk/darimasen-svn-0.1.ebuild	2005-04-21 05:05:41 UTC (rev 58)
+++ trunk/darimasen-svn-0.1.ebuild	2005-04-22 05:00:03 UTC (rev 59)
@@ -19,7 +19,7 @@
 SLOT="0"
 
 DEPEND=">=dev-libs/libsigc++-2.0.3
-        >=dev-cpp/gtkmm-2.4.11
+        >=dev-cpp/gtkmm-2.6.1
         >=dev-cpp/gnome-vfsmm-2.6.0
         x11-themes/gnome-icon-theme"
 RDEPEND="!x11-misc/darimasen"

Modified: trunk/src/damenu.cpp
===================================================================
--- trunk/src/damenu.cpp	2005-04-21 05:05:41 UTC (rev 58)
+++ trunk/src/damenu.cpp	2005-04-22 05:00:03 UTC (rev 59)
@@ -221,6 +221,7 @@
   depth = 0;
 
   Glib::ustring shortpath = path; //home = getenv("HOME");
+
   parent = &Myparent;
   
   int startPos = 0 , i = 0;

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-21 05:05:41 UTC (rev 58)
+++ trunk/src/darimasen.cpp	2005-04-22 05:00:03 UTC (rev 59)
@@ -10,10 +10,7 @@
 
 // anything prefixed with 'f' corresponds with a button. 'nuff said.
 void Darimasen::fNewTab(){
-    std::stack<Glib::ustring> empty;
-    history.push_back(empty);
-
-  history[history.size() -1].push(getenv("HOME") + slash);
+  set_history(Tabber->get_n_pages(), getenv("HOME") + slash);
   addTab(Tabber->get_n_pages());
 
   }
@@ -22,13 +19,11 @@
 
 // ...and there was already one with an f.
 void Darimasen::newTab(Glib::ustring newpath){
-    std::stack<Glib::ustring> empty;
-    history.push_back(empty);
 
-if( newpath.substr(newpath.length() - 1) != slash)
-   newpath += slash;
+  if( newpath.substr(newpath.length() - 1) != slash)
+    newpath += slash;
 
-  history[history.size() -1].push(newpath);
+  set_history(Tabber->get_n_pages(), newpath);
   addTab(Tabber->get_n_pages());
 
   }
@@ -42,7 +37,7 @@
   DarimasenMenuContainer->remove();
 
  
-  DaMenu = Gtk::manage(new class DarimasenMenu(history[n].top(), *this, n));
+  DaMenu = Gtk::manage(new class DarimasenMenu(get_history(n), *this, n));
   DarimasenMenuContainer->add(*DaMenu);
 
   if (history[n].size() == 1)
@@ -50,6 +45,7 @@
   else
     BackButton->set_sensitive(true);
 
+  buildHistoryMenu(n);
   }
 
 /**********************/
@@ -69,12 +65,13 @@
 
   Gtk::Label * tabNum;
 
-if ( history[pos].top() == slash)
-tabNum = Gtk::manage(new Gtk::Label(slash + " "));
-else if ( history[pos].top() == (getenv("HOME") + slash))
-tabNum = Gtk::manage(new Gtk::Label("~ "));
-else
-  tabNum = Gtk::manage(new Gtk::Label(history[pos].top().substr(history[pos].top().rfind(slash,history[pos].top().length() - 2  ) + 1)));
+  if ( get_history(pos) == slash)
+    tabNum = Gtk::manage(new Gtk::Label(slash + " "));
+  else if ( get_history(pos) == (getenv("HOME") + slash))
+    tabNum = Gtk::manage(new Gtk::Label("~ "));
+  else
+    tabNum = Gtk::manage(new Gtk::Label(
+      get_history(pos).substr(get_history(pos).rfind(slash,get_history(pos).length() - 2  ) + 1)));
 
 
   Gtk::HBox * arrangement= Gtk::manage(new Gtk::HBox()) ;
@@ -133,9 +130,9 @@
 
   if (addPath && !menuOnly){
     if (pathin.substr(pathin.length()-1) != "/")
-      history[nth].push(pathin + slash);
+      set_history(nth, pathin + slash);
     else
-      history[nth].push(pathin); 
+      set_history(nth, pathin);
     }
 
   if  (!menuOnly){
@@ -150,7 +147,7 @@
     }
 
   DarimasenMenuContainer->remove();
-  DaMenu = Gtk::manage( new DarimasenMenu( history[nth].top(), *this,nth));
+  DaMenu = Gtk::manage( new DarimasenMenu( get_history(nth), *this,nth));
   DarimasenMenuContainer->add(*DaMenu);
 
   }
@@ -167,8 +164,9 @@
 
   guint tmp = pos;
   Tabber->remove_page(pos);
+  
+  while ( del_history(pos) > 0 );
 
-  history.erase(history.begin()+pos,history.begin()+pos+1 );
   delete IconModeList[pos];
   IconModeList.erase(IconModeList.begin()+pos,IconModeList.begin()+pos+1 );
 
@@ -244,7 +242,7 @@
   TopBar.append(*sep2);
   sep2->show();
 
-  BackButton = new Gtk::ToolButton(Gtk::StockID("gtk-go-back"));
+  BackButton = new Gtk::MenuToolButton(Gtk::StockID("gtk-go-back"));
   BackButton->signal_clicked().connect(sigc::mem_fun(*this, &Darimasen::fBack));
   TopBar.append(*BackButton);
   BackButton->set_sensitive(false);
@@ -286,10 +284,7 @@
   show();
 
   for(int i = 0; i < paths.size(); i++){
-    std::stack<Glib::ustring> empty;
-    history.push_back(empty);
-    history[i].push(paths[i]);
-
+    set_history(i,paths[i]);
     addTab(Tabber->get_n_pages());
     }
  }
@@ -373,7 +368,7 @@
 
 
   DarimasenMenuContainer->remove();
-  DaMenu = Gtk::manage( new DarimasenMenu(history[Tabber->get_current_page()].top(), *this, Tabber->get_current_page()));
+  DaMenu = Gtk::manage( new DarimasenMenu(get_history(Tabber->get_current_page()), *this, Tabber->get_current_page()));
   DarimasenMenuContainer->add(*DaMenu);
 
 
@@ -386,9 +381,9 @@
 /**********************/
 
 void Darimasen::fBack(){
-  history[Tabber->get_current_page()].pop();
+  del_history(Tabber->get_current_page());
 
-  ChangeCurrentPath(history[Tabber->get_current_page()].top(),false,false);
+  ChangeCurrentPath(get_history(Tabber->get_current_page()),false,false);
 
   if (history[Tabber->get_current_page()].size() == 1)
     BackButton->set_sensitive(false);
@@ -397,13 +392,13 @@
 /**********************/
 
 void Darimasen::fPrintHist(){
-  std::vector< std::stack<Glib::ustring> > destroy = history;
+  std::vector< std::vector<Glib::ustring> > destroy = history;
   
   std::cout << "There are " << destroy.size() << " tabs here.\n";
   
   for (int i = 0; i < destroy.size(); i++){
-    for (; destroy[i].size() > 0; destroy[i].pop()){
-      std::cout << "history[" << i << "].top() = " << destroy[i].top() << "\n";
+    for (; destroy[i].size() > 0; destroy[i].pop_back()){
+      std::cout << "history[" << i << "].end() = " << destroy[i][destroy[i].size() -1] << "\n";
       }
     }
   }
@@ -424,8 +419,8 @@
 //  std::cout << sourceDir << "\n" << targetDir << "\n\n";
 
   for(int i = 0; i < history.size(); i++){
-    if( history[i].top() == sourceDir || history[i].top() == targetDir ){
-      ChangeCurrentPath(history[i].top(),false,false);
+    if( get_history(i) == sourceDir || get_history(i) == targetDir ){
+      ChangeCurrentPath(get_history(i),false,false);
       }
     }
 }
@@ -435,8 +430,68 @@
 void Darimasen::fChangeIconMode(){
   mode = (mode + 1) % 2; // increment, mod of possibilities.
   for(int i = 0; i < history.size(); i++){
-      ChangeCurrentPath(history[i].top(),false,false);
+      ChangeCurrentPath(get_history(i),false,false);
     } 
   }
 
 /**********************/
+
+Glib::ustring Darimasen::get_history(gint tab, gint level){
+  return history[tab][history[tab].size()-level-1];
+  }
+
+/**********************/
+
+void Darimasen::set_history(gint tab, Glib::ustring path){
+  if (Tabber->get_n_pages() == tab){
+    std::vector<Glib::ustring> empty;
+    history.push_back(empty);
+    history[tab].push_back(path);
+    }
+  else {
+    history[tab].push_back(path);
+    }
+  }
+
+/**********************/
+
+bool Darimasen::del_history(gint tab){
+  history[tab].pop_back();
+  if ( history[tab].size() == 0 ){
+    history.erase(history.begin()+tab,history.begin()+tab+1 );
+    return 0;
+    }
+  return history[tab].size();
+  }
+
+/**********************/
+
+void Darimasen::buildHistoryMenu(gint tab){
+  if(BackButton->get_menu() != NULL){
+    delete BackButton->get_menu();
+    }
+
+  history_menu = new Gtk::Menu();
+  
+  BackButton->set_menu(*history_menu);
+
+  for( int i = 1; i <  history[tab].size(); i++){
+    history_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(
+      get_history(tab,i),sigc::bind<gint,gint>(sigc::mem_fun(*this, &Darimasen::fHistoryMenu), tab, i)));
+    }
+
+  }
+
+/**********************/
+
+void Darimasen::fHistoryMenu(gint tab, gint iterations){
+  for(int i = 0; i < iterations; i++)
+    del_history(Tabber->get_current_page());
+
+  ChangeCurrentPath(get_history(Tabber->get_current_page()),false,false);
+
+  if (history[Tabber->get_current_page()].size() == 1)
+    BackButton->set_sensitive(false);
+  }
+
+/**********************/

Modified: trunk/src/darimasen.h
===================================================================
--- trunk/src/darimasen.h	2005-04-21 05:05:41 UTC (rev 58)
+++ trunk/src/darimasen.h	2005-04-22 05:00:03 UTC (rev 59)
@@ -57,7 +57,9 @@
 
 #include "iconmodes.h"
 #include "damenu.h"
+#include <gtkmm/menutoolbutton.h>
 
+
 /**********************/
 
 class Darimasen : public Gtk::Window {
@@ -91,13 +93,13 @@
   Gtk::SeparatorToolItem * sep1;
   Gtk::SeparatorToolItem * sep2;
 
-  Gtk::ToolButton * BackButton;
+Gtk::MenuToolButton * BackButton;
 Gtk::ToolButton * ChangeIconMode;
  Gtk::ToggleToolButton * ViewTree;
 Gtk::ToolButton * NewTab;
 
+  Gtk::Menu * history_menu;
 
-
   void fNewTab();
 
   void tabberSwitched(GtkNotebookPage*, guint);
@@ -117,6 +119,8 @@
   std::vector< class Gtk::EventBox* > EventBoxList;
   short mode;
 
+  std::vector< std::vector<Glib::ustring> > history;
+
 public:
 
   Darimasen(std::vector<Glib::ustring>);
@@ -126,11 +130,22 @@
 
   Gtk::CheckMenuItem * optShowHidden;
   void set_message(Glib::ustring);
-  std::vector< std::stack<Glib::ustring> > history;
+  //std::vector< std::stack<Glib::ustring> > history;
   void updateView(Glib::ustring, Glib::ustring);
 
   void newTab(Glib::ustring);
   void ChangeCurrentPath(Glib::ustring path, bool, bool);
+  
+
+
+  Glib::ustring get_history(gint, gint = 0);
+
+  void set_history(gint, Glib::ustring);
+
+  bool del_history(gint);
+
+  void buildHistoryMenu(gint);
+  void fHistoryMenu(gint, gint);
   };
 
 /**********************/

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-21 05:05:41 UTC (rev 58)
+++ trunk/src/iconmodes.cpp	2005-04-22 05:00:03 UTC (rev 59)
@@ -264,7 +264,7 @@
     bool recurse) {
 
   if (info->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY){
-    iconlist[slotsUsed++] = new proto_icon(*this, parent->history[position].top(), info);
+    iconlist[slotsUsed++] = new proto_icon(*this, parent->get_history(position), info);
     }
 
   return true;
@@ -347,7 +347,7 @@
 
   try{  //count up the files in the directory. 
     Gnome::Vfs::DirectoryHandle handle;
-    handle.open((parent->history[position].top()), Gnome::Vfs::FILE_INFO_DEFAULT);
+    handle.open(parent->get_history(position), Gnome::Vfs::FILE_INFO_DEFAULT);
     bool file_exists = true;
     while(file_exists){
       handle.read_next(file_exists);
@@ -363,7 +363,7 @@
   IconsHigh = 0;
   try { // make all those files into proto_icons
     Gnome::Vfs::DirectoryHandle::visit(
-      parent->history[position].top(),
+      parent->get_history(position),
       Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
       Gnome::Vfs::FILE_INFO_FORCE_FAST_MIME_TYPE |
       Gnome::Vfs::FILE_INFO_FOLLOW_LINKS ,



From darimasen-svn-admin at lists.berlios.de  Sat Apr 23 07:02:27 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Sat, 23 Apr 2005 07:02:27 +0200
Subject: [Darimasen-svn] r60 - trunk/src
Message-ID: <200504230502.j3N52RQt022707@sheep.berlios.de>

Author: sudrien
Date: 2005-04-23 07:01:45 +0200 (Sat, 23 Apr 2005)
New Revision: 60

Modified:
   trunk/src/iconmodes.cpp
   trunk/src/iconmodes.h
   trunk/src/main.cpp
Log:
popup menu returns

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-22 05:00:03 UTC (rev 59)
+++ trunk/src/iconmodes.cpp	2005-04-23 05:01:45 UTC (rev 60)
@@ -4,10 +4,10 @@
 
 /**********************/
 
-void DaIconModes::proto_icon::run(){
-  std::cout << path << FileName << "\n";
+void DaIconModes::proto_icon::run() const{
 
-Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
+  // double checking the file exists
+  Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
   Gnome::Vfs::Handle read_handle;
   try{
     read_handle.open( path + FileName, Gnome::Vfs::OPEN_READ);
@@ -25,7 +25,8 @@
   Glib::ustring exec = getenv("HOME");
   try{
     exec += "/Choices/MIME-types/";
-    exec += FileMime.replace(FileMime.find("/"),1,"_");
+    Glib::ustring tmp = FileMime;
+    exec += tmp.replace(tmp.find("/"),1,"_");
     exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
 
     exec += " \""  + path + FileName + "\"";
@@ -67,30 +68,106 @@
 
 
   //Handle the response:
-  switch(dialog.run())
-  {
+  switch(dialog.run()) {
     case(Gtk::RESPONSE_OK):
-    {
-      Glib::ustring exec = getenv("HOME");
-      exec += "/Choices/MIME-types/text";
-      exec += " \""  + path + FileName + "\"";
-      Glib::spawn_command_line_async(exec);
-    parent->parent->set_message(exec + " was opened as a text file.");
-      return;
+      {
+        Glib::ustring exec = getenv("HOME");
+        exec += "/Choices/MIME-types/text";
+        exec += " \""  + path + FileName + "\"";
+        Glib::spawn_command_line_async(exec);
+        parent->parent->set_message(exec + " was opened as a text file.");
+        return;
+        }
       break;
-    }
     default:
-    {
-    parent->parent->set_message("Well, that was usefull.");
+      parent->parent->set_message("Well, that was usefull.");
       break;
     }
   }
 
-  
+/**********************/
+
+void DaIconModes::proto_icon::runAsText() const{
+
+  // double checking the file exists
+  Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
+  Gnome::Vfs::Handle read_handle;
+  try{
+    read_handle.open( path + FileName, Gnome::Vfs::OPEN_READ);
+    info = read_handle.get_file_info(
+      Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
+      Gnome::Vfs::FILE_INFO_FORCE_SLOW_MIME_TYPE );
+    }
+  catch(const Gnome::Vfs::exception& ex){
+    std::cout << "Does not exist.\n";
+    return;
+    }
+
+  Gnome::Vfs::Handle exec_handle;
+  Glib::ustring exec = getenv("HOME");
+  try{
+    exec += "/Choices/MIME-types/text";
+    exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
+    exec += " \""  + path + FileName + "\"";
+    Glib::spawn_command_line_async(exec);
+
+    parent->parent->set_message(exec + " was run.");
+    return;
+    }
+  catch(const Gnome::Vfs::exception& ex){}
   }
 
 /**********************/
 
+void DaIconModes::proto_icon::SetRunAction() const{
+
+  Gnome::Vfs::Handle read_handle;
+  Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
+  Glib::ustring exec_subtype;
+  Glib::ustring exec_mimetype;
+
+  try {
+    read_handle.open( path + FileName, Gnome::Vfs::OPEN_READ);
+    info = read_handle.get_file_info(
+        Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
+        Gnome::Vfs::FILE_INFO_FORCE_SLOW_MIME_TYPE );
+
+    exec_subtype  = info->get_mime_type();
+    exec_subtype  = exec_subtype.replace( exec_subtype.find("/"), 1, "_" );
+    exec_mimetype = exec_subtype.substr( 0, exec_subtype.rfind("_") );
+
+    ChooseActionDialogue * chooseAction;
+    chooseAction = new ChooseActionDialogue(exec_subtype);
+    chooseAction->show();
+    }
+  catch(const Gnome::Vfs::exception& ex) {
+    parent->parent->set_message("Err... Setting error?");
+    }
+  }
+
+/**********************/
+
+void DaIconModes::proto_icon::SetPermissions() const{
+
+
+  Gnome::Vfs::Handle read_handle;
+  Glib::RefPtr<Gnome::Vfs::FileInfo> info;
+
+  try {
+    read_handle.open( path + FileName, Gnome::Vfs::OPEN_READ);
+    info = read_handle.get_file_info(Gnome::Vfs::FILE_INFO_GET_ACCESS_RIGHTS);
+
+    SetPermissionsDialogue * setPermissions;
+    setPermissions = new SetPermissionsDialogue(info,path);
+    setPermissions->show();
+    }
+  catch(const Gnome::Vfs::exception& ex) {
+    parent->parent->set_message("Err... Setting error?");
+    }
+  }
+
+/**********************/
+
 bool DaIconModes::proto_icon::select(GdkEventButton* event){
 
   if ((event->type == GDK_BUTTON_PRESS) && (event->button == 1)  && (parent->lastclick < event->time)){
@@ -98,8 +175,36 @@
     run();
     return true;
     }
+  if ((event->type == GDK_BUTTON_PRESS) && (event->button == 3)){
 
+    for( int i=5; i > 0; i--)
+      parent->prompt.items().pop_back();
 
+    parent->prompt.items().push_back(
+      Gtk::Menu_Helpers::MenuElem("Open \"" + FileName + "\"",
+        sigc::mem_fun(*this,&DaIconModes::proto_icon::run)));
+
+    parent->prompt.items().push_back(
+      Gtk::Menu_Helpers::MenuElem("Open as text ",
+        sigc::mem_fun(*this, &DaIconModes::proto_icon::runAsText)));
+
+    parent->prompt.items().push_back(
+      Gtk::Menu_Helpers::SeparatorElem());
+
+    parent->prompt.items().push_back(
+      Gtk::Menu_Helpers::MenuElem("Set Run Action...",
+        sigc::mem_fun(*this, &DaIconModes::proto_icon::SetRunAction)));
+
+    parent->prompt.items().push_back(
+      Gtk::Menu_Helpers::MenuElem("Permissions...",
+        sigc::mem_fun(*this, &DaIconModes::proto_icon::SetPermissions)));
+
+
+    parent->prompt.popup(event->button, event->time);
+    }
+
+
+
   }
 
 /**********************/
@@ -213,6 +318,287 @@
 
 /**********************/
 
+DaIconModes::ChooseActionDialogue::ChooseActionDialogue(Glib::ustring mimeType){
+
+  mime = mimeType;
+  cancelbutton1 = new class Gtk::Button(Gtk::StockID("gtk-close"));
+  okbutton1 = new class Gtk::Button(Gtk::StockID("gtk-apply"));
+  label1 = new class Gtk::Label("Enter a Shell command:");
+  entry1 = new class Gtk::Entry();
+  vbox1  = new class Gtk::VBox(false, 0);
+
+
+  radiobutton1 = new class Gtk::RadioButton(_RadioBGroup_radiobutton1, 
+    "Set Action For \"" + mimeType.substr(0, mimeType.find("_")) + "\"" );
+
+  radiobutton1->signal_clicked().connect(
+      sigc::bind<Glib::ustring >( sigc::mem_fun(*this,
+      &DaIconModes::ChooseActionDialogue::GetCurrentAction), mimeType.substr(0, mimeType.find("_")) ));
+
+  radiobutton2 = new class Gtk::RadioButton(_RadioBGroup_radiobutton1,
+      "Set Action For \"" + mimeType + "\"")  ;
+
+  radiobutton2->signal_clicked().connect(
+      sigc::bind<Glib::ustring >( sigc::mem_fun(*this,
+      &DaIconModes::ChooseActionDialogue::GetCurrentAction), mimeType ));
+
+  cancelbutton1->set_flags(Gtk::CAN_FOCUS);
+  cancelbutton1->set_flags(Gtk::CAN_DEFAULT);
+  cancelbutton1->signal_clicked().connect(
+      sigc::mem_fun(*this, &DaIconModes::ChooseActionDialogue::cancled) );
+  okbutton1->set_flags(Gtk::CAN_FOCUS);
+  okbutton1->set_flags(Gtk::CAN_DEFAULT);
+  okbutton1->signal_clicked().connect(
+      sigc::mem_fun(*this, &DaIconModes::ChooseActionDialogue::modifyAction) );
+  get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
+  radiobutton1->set_flags(Gtk::CAN_FOCUS);
+  radiobutton1->set_mode(true);
+  radiobutton1->set_active(false);
+  radiobutton2->set_flags(Gtk::CAN_FOCUS);
+  radiobutton2->set_mode(true);
+  radiobutton2->set_active(true);
+  label1->set_padding(2,4);
+  label1->set_justify(Gtk::JUSTIFY_LEFT);
+  entry1->set_flags(Gtk::CAN_FOCUS);
+  entry1->set_has_frame(true);
+  vbox1->pack_start(*radiobutton1, Gtk::PACK_SHRINK, 0);
+  vbox1->pack_start(*radiobutton2, Gtk::PACK_SHRINK, 0);
+  vbox1->pack_start(*label1, Gtk::PACK_SHRINK, 0);
+  vbox1->pack_start(*entry1, Gtk::PACK_SHRINK, 0);
+  get_vbox()->set_homogeneous(false);
+  get_vbox()->set_spacing(5);
+  get_vbox()->set_border_width(6);
+  get_vbox()->pack_start(*vbox1);
+  set_border_width(6);
+  set_title("Set Run Action");
+  set_modal(true);
+  property_window_position().set_value(Gtk::WIN_POS_CENTER_ON_PARENT);
+  set_resizable(true);
+  property_destroy_with_parent().set_value(false);
+  set_has_separator(false);
+  add_action_widget(*cancelbutton1, Gtk::RESPONSE_CANCEL);
+  add_action_widget(*okbutton1, Gtk::RESPONSE_OK);
+  set_default_response(Gtk::RESPONSE_OK);
+
+  show_all_children();
+  }
+
+/**********************/
+
+void DaIconModes::ChooseActionDialogue::GetCurrentAction(Glib::ustring mimeType){
+
+  Glib::ustring contents, exec1 = getenv("HOME");
+  exec1 += (Glib::ustring)("/Choices/MIME-types/");
+  exec1 += mimeType;
+
+  try {
+    contents = Glib::file_get_contents(exec1);
+    contents = contents.substr(contents.find("exec ") + 5);
+    contents = contents.substr(0,contents.find("\n"));
+    }
+  catch(const Glib::Error) {
+    contents = "* \"$@\"" ;
+    }
+  entry1->set_text(contents);
+}
+
+/**********************/
+
+void DaIconModes::ChooseActionDialogue::cancled(){
+  hide();
+  return;
+  }
+
+/**********************/
+
+void DaIconModes::ChooseActionDialogue::modifyAction(){
+
+  if ( entry1->get_text() != "* \"$@\""){ //don't intentionally make a broken script.
+    Glib::ustring command = "#! /bin/sh\nexec ";
+    command += entry1->get_text();
+    command += "\n";
+
+    try {
+      Glib::ustring exec1 = getenv("HOME");
+      exec1 += (Glib::ustring)("/Choices/MIME-types/");
+      if(radiobutton2->get_active()) exec1 += mime;
+      if(radiobutton1->get_active())exec1 += mime.substr(0, mime.find("_"));
+      Gnome::Vfs::Handle write_handle;
+
+      // Now write the data we read out to the output uri
+      write_handle.create(exec1, Gnome::Vfs::OPEN_WRITE, false, 0755);
+      write_handle.seek(Gnome::Vfs::SEEK_POS_START, 0);
+      GnomeVFSFileSize bytes_written = write_handle.write(command.data(), command.size());
+      }
+    catch(const Gnome::Vfs::exception) {
+  //  parent->set_message("Couldn't write new definition.");
+      hide();
+      return;
+      }
+    }
+  hide();
+  return;
+  }
+
+/**********************/
+
+DaIconModes::SetPermissionsDialogue::SetPermissionsDialogue(
+    Glib::RefPtr<Gnome::Vfs::FileInfo> info, Glib::ustring path){
+fullPath = path;
+  set_title("Set file permissions");
+  set_modal(true);
+
+   read = new class Gtk::Label("R");
+   write = new class Gtk::Label("W");
+   run = new class Gtk::Label("X");
+   user = new class Gtk::Label("User");
+   group = new class Gtk::Label("Group");
+   others = new class Gtk::Label("Everybody");
+
+   explaination = new class Gtk::Label("for \""+ info->get_name() + "\"...");
+
+   layout = new class Gtk::Table(5, 6, false);
+
+   u_r = new class Gtk::CheckButton("");
+   if((info->get_permissions() & Gnome::Vfs::PERM_USER_READ) != 0)  u_r->set_active(true);
+   u_w = new class Gtk::CheckButton("");
+   if((info->get_permissions() & Gnome::Vfs::PERM_USER_WRITE) != 0)  u_w->set_active(true);
+   u_x = new class Gtk::CheckButton("");
+   if((info->get_permissions() & Gnome::Vfs::PERM_USER_EXEC) != 0)  u_x->set_active(true);
+   g_r = new class Gtk::CheckButton("");
+   if((info->get_permissions() & Gnome::Vfs::PERM_GROUP_READ) != 0)  g_r->set_active(true);
+   g_w = new class Gtk::CheckButton("");
+   if((info->get_permissions() & Gnome::Vfs::PERM_GROUP_WRITE) != 0)  g_w->set_active(true);
+   g_x = new class Gtk::CheckButton("");
+   if((info->get_permissions() & Gnome::Vfs::PERM_GROUP_EXEC) != 0)  g_x->set_active(true);
+   o_r = new class Gtk::CheckButton("");
+   if((info->get_permissions() & Gnome::Vfs::PERM_OTHER_READ) != 0)  o_r->set_active(true);
+   o_w = new class Gtk::CheckButton("");
+   if((info->get_permissions() & Gnome::Vfs::PERM_OTHER_WRITE) != 0)  o_w->set_active(true);
+   o_x = new class Gtk::CheckButton("");
+   if((info->get_permissions() & Gnome::Vfs::PERM_OTHER_EXEC) != 0)  o_x->set_active(true);
+
+   extra = new  Gtk::VSeparator;
+
+   sticky = new class Gtk::CheckButton("Sticky");
+   if((info->get_permissions() & Gnome::Vfs::PERM_STICKY) != 0)  sticky->set_active(true);
+   GID = new class Gtk::CheckButton("Group ID");
+   if((info->get_permissions() & Gnome::Vfs::PERM_SGID) != 0)  GID->set_active(true);
+   UID = new class Gtk::CheckButton("User ID");
+   if((info->get_permissions() & Gnome::Vfs::PERM_SUID) != 0)  UID->set_active(true);
+
+   layout->attach(*u_r, 1, 2, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
+   layout->attach(*u_w, 2, 3, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
+   layout->attach(*u_x, 3, 4, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
+   layout->attach(*g_r, 1, 2, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
+   layout->attach(*g_w, 2, 3, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
+   layout->attach(*g_x, 3, 4, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
+   layout->attach(*o_r, 1, 2, 4, 5, Gtk::FILL, Gtk::FILL, 0, 0);
+   layout->attach(*o_w, 2, 3, 4, 5, Gtk::FILL, Gtk::FILL, 0, 0);
+   layout->attach(*o_x, 3, 4, 4, 5, Gtk::FILL, Gtk::FILL, 0, 0);
+
+   layout->attach(*extra,4,5,1,5, Gtk::FILL | Gtk::EXPAND, Gtk::FILL, 10, 0);
+
+   layout->attach(*sticky, 5, 6, 2, 3, Gtk::FILL, Gtk::FILL, 0, 0);
+   layout->attach(*GID, 5, 6, 3, 4, Gtk::FILL, Gtk::FILL, 0, 0);
+   layout->attach(*UID, 5, 6, 4, 5, Gtk::FILL, Gtk::FILL, 0, 0);
+
+   layout->attach(*read, 1, 2, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
+   layout->attach(*write, 2, 3, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
+   layout->attach(*run, 3, 4, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
+   layout->attach(*user, 0, 1, 2, 3, Gtk::FILL , Gtk::FILL, 0, 0);
+   layout->attach(*group, 0, 1, 3, 4, Gtk::FILL , Gtk::FILL, 0, 0);
+   layout->attach(*others, 0, 1, 4, 5, Gtk::FILL , Gtk::FILL, 0, 0);
+   layout->attach(*explaination, 0, 6, 0, 1, Gtk::FILL | Gtk::EXPAND, Gtk::FILL, 10, 0);
+
+
+  get_vbox()->pack_start(*layout);
+  button1 = new class Gtk::Button(Gtk::StockID("gtk-cancel"));
+  button1->signal_clicked().connect(
+      sigc::mem_fun(*this, &DaIconModes::SetPermissionsDialogue::cancled) );
+
+
+  button2 = new class Gtk::Button(Gtk::StockID("gtk-apply"));
+  button2->signal_clicked().connect(
+    sigc::bind<Glib::RefPtr<Gnome::Vfs::FileInfo> >(
+      sigc::mem_fun(*this, &DaIconModes::SetPermissionsDialogue::apply), info ));
+
+
+  get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
+  add_action_widget(*button1, -6);
+  add_action_widget(*button2, -10);
+
+  set_modal(true);
+  show_all_children();
+  show();
+  }
+
+/**********************/
+
+void DaIconModes::SetPermissionsDialogue::cancled(){
+  hide();
+  }
+
+/**********************/
+
+void DaIconModes::SetPermissionsDialogue::apply(Glib::RefPtr<Gnome::Vfs::FileInfo> info){
+
+  // *nix and *BSD only, blah blah blah.
+  int permissions = 0;
+
+
+
+  if(UID->get_active()) permissions += 2048;
+  if(GID->get_active()) permissions += 1024;
+  if(sticky->get_active()) permissions += 512;
+
+  if(u_r->get_active()) permissions += 256;
+  if(u_w->get_active()) permissions += 128;
+  if(u_x->get_active()) permissions += 64;
+
+  if(g_r->get_active()) permissions += 32;
+  if(g_w->get_active()) permissions += 16;
+  if(g_x->get_active()) permissions += 8;
+
+  if(o_r->get_active()) permissions += 4;
+  if(o_w->get_active()) permissions += 2;
+  if(o_x->get_active()) permissions += 1;
+
+  chmod((fullPath + info->get_name()).c_str(), permissions);
+
+  hide();
+  }
+
+/**********************/
+
+DaIconModes::SetPermissionsDialogue::~SetPermissionsDialogue(){
+      delete read;
+      delete write;
+      delete run;
+      delete user;
+      delete group;
+      delete others;
+      delete explaination;
+      delete layout;
+      delete u_r;
+      delete u_w;
+      delete u_x;
+      delete g_r;
+      delete g_w;
+      delete g_x;
+      delete o_r;
+      delete o_w;
+      delete o_x;
+      delete extra;
+      delete sticky;
+      delete GID;
+      delete UID;
+      delete button1;
+      delete button2;
+      }
+
+/**********************/
+
 Glib::RefPtr<Gdk::Pixbuf> DaIconModes::getIcon(Glib::ustring mimeGiven){
   int i;
   static std::vector <Glib::ustring> mimeList;

Modified: trunk/src/iconmodes.h
===================================================================
--- trunk/src/iconmodes.h	2005-04-22 05:00:03 UTC (rev 59)
+++ trunk/src/iconmodes.h	2005-04-23 05:01:45 UTC (rev 60)
@@ -7,7 +7,10 @@
 #include "darimasen.h"
 #include <libgnomevfsmm.h>
 #include <gtkmm/table.h>
-#include <gdkmm/pixbuf.h>
+#include <gdkmm/pixbuf.h>
+#include <gtkmm/entry.h>
+#include <gtkmm/messagedialog.h>
+#include <gtkmm/separator.h>
 
 /**********************/
 
@@ -16,7 +19,10 @@
   class proto_icon {
     Glib::ustring path;
    DaIconModes * parent;
 
-    void run();
+    void run() const;
+    void runAsText() const;
+    void SetRunAction() const;
+    void SetPermissions() const;
 
   public:
 
@@ -59,6 +65,63 @@
     ~Listview();
   };
 
+  class ChooseActionDialogue : public Gtk::Dialog {
+    Gtk::RadioButton::Group _RadioBGroup_radiobutton1;
+    Gtk::Button *cancelbutton1, *okbutton1;
+    Gtk::RadioButton *radiobutton1, *radiobutton2;
+    Gtk::Label       * label1;
+    Gtk::Entry       * entry1;
+    Gtk::VBox        * vbox1;
+    Glib::ustring mime;
+    void cancled();
+    void modifyAction();
+    void GetCurrentAction(Glib::ustring);
+
+    public:
+
+    ChooseActionDialogue(Glib::ustring);
+    ~ChooseActionDialogue(){
+
+      delete cancelbutton1;
+      delete okbutton1;
+      delete label1;
+      delete entry1;
+      delete vbox1;
+      delete radiobutton1;
+      delete radiobutton2;
+      }
+    };
+
+
+  class SetPermissionsDialogue : public Gtk::Dialog {
+    Glib::ustring fullPath;
+    Gtk::Button * button1;
+    Gtk::Button * button2;
+
+    Gtk::CheckButton * u_r, * u_w, * u_x;
+    Gtk::CheckButton * g_r, * g_w, * g_x;
+    Gtk::CheckButton * o_r, * o_w, * o_x;
+    
+    Gnome::Vfs::Handle info;
+
+    Gtk::VSeparator * extra;
+    Gtk::CheckButton * sticky, * GID, * UID;
+
+    Gtk::Label * user, * group, * others;
+    Gtk::Label * read, * write, * run;
+    Gtk::Label * explaination;
+
+    Gtk::Table * layout;
+    void cancled();
+    void apply(Glib::RefPtr<Gnome::Vfs::FileInfo>);
+
+    public:
+
+    SetPermissionsDialogue(Glib::RefPtr<Gnome::Vfs::FileInfo> , Glib::ustring);
+    ~SetPermissionsDialogue();
+    };
+
+
   Glib::RefPtr<Gdk::Pixbuf> getIcon(Glib::ustring);
   bool addEntry(Glib::ustring, Glib::RefPtr<const Gnome::Vfs::FileInfo>, bool, bool);
   void on_size_allocate(Gtk::Allocation&);
@@ -72,6 +135,7 @@
   proto_icon ** iconlist;
   guint slotsUsed;
   guint IconsHigh;
+  Gtk::Menu prompt;
 
 
 public:

Modified: trunk/src/main.cpp
===================================================================
--- trunk/src/main.cpp	2005-04-22 05:00:03 UTC (rev 59)
+++ trunk/src/main.cpp	2005-04-23 05:01:45 UTC (rev 60)
@@ -87,7 +87,8 @@
   Darimasen * window = new Darimasen(path);
   Gtk::Main::run(*window); 
 
-delete window;
+delete window;
+  //Gnome::Vfs::shutdown();
   return 0;
 }
 



From darimasen-svn-admin at lists.berlios.de  Mon Apr 25 07:11:08 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Mon, 25 Apr 2005 07:11:08 +0200
Subject: [Darimasen-svn] r61 - trunk/src
Message-ID: <200504250511.j3P5B8Ah020372@sheep.berlios.de>

Author: sudrien
Date: 2005-04-25 07:09:32 +0200 (Mon, 25 Apr 2005)
New Revision: 61

Modified:
   trunk/src/darimasen.cpp
   trunk/src/iconmodes.cpp
   trunk/src/iconmodes.h
Log:
switch to Gtk::IconView begun

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-23 05:01:45 UTC (rev 60)
+++ trunk/src/darimasen.cpp	2005-04-25 05:09:32 UTC (rev 61)
@@ -112,14 +112,14 @@
     EventBoxList[pos] = MainEventBox;
     }
 
-  Gtk::ScrolledWindow * MainScroller = Gtk::manage(new Gtk::ScrolledWindow);
-  MainScroller->show();
-  MainScroller->set_shadow_type(Gtk::SHADOW_NONE);
-  MainScroller->add(*MainEventBox);
+ // Gtk::ScrolledWindow * MainScroller = Gtk::manage(new Gtk::ScrolledWindow);
+ // MainScroller->show();
+ // MainScroller->set_shadow_type(Gtk::SHADOW_NONE);
+ // MainScroller->add(*MainEventBox);
   MainEventBox->add(*foo);
-  MainScroller->set_policy(Gtk::POLICY_ALWAYS, Gtk::POLICY_AUTOMATIC);
+ // MainScroller->set_policy(Gtk::POLICY_ALWAYS, Gtk::POLICY_ALWAYS);
   foo->show();
-  Tabber->insert_page( *MainScroller, *arrangement, pos);
+  Tabber->insert_page( *MainEventBox, *arrangement, pos);
 
   }
 /**********************/

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-23 05:01:45 UTC (rev 60)
+++ trunk/src/iconmodes.cpp	2005-04-25 05:09:32 UTC (rev 61)
@@ -2,7 +2,7 @@
 
 #include "iconmodes.h"
 
-/**********************/
+/**********************
 
 void DaIconModes::proto_icon::run() const{
 
@@ -85,7 +85,7 @@
     }
   }
 
-/**********************/
+/**********************
 
 void DaIconModes::proto_icon::runAsText() const{
 
@@ -117,7 +117,7 @@
   catch(const Gnome::Vfs::exception& ex){}
   }
 
-/**********************/
+/**********************
 
 void DaIconModes::proto_icon::SetRunAction() const{
 
@@ -145,7 +145,7 @@
     }
   }
 
-/**********************/
+/**********************
 
 void DaIconModes::proto_icon::SetPermissions() const{
 
@@ -166,7 +166,7 @@
     }
   }
 
-/**********************/
+/**********************
 
 bool DaIconModes::proto_icon::select(GdkEventButton* event){
 
@@ -207,7 +207,7 @@
 
   }
 
-/**********************/
+/**********************
 
 DaIconModes::proto_icon::proto_icon(
       DaIconModes& getParent,
@@ -246,13 +246,13 @@
   hidden = (getFile->get_name().substr(0,1) == ".");
   };
 
-/**********************/
+/**********************
 
 DaIconModes::proto_icon::~proto_icon(){
   std::cout << "proto deleted";
   }
 
-/**********************/
+/**********************
 
 DaIconModes::Sidecon::Sidecon(proto_icon & in){
 
@@ -282,13 +282,13 @@
 
   }
 
-/**********************/
+/**********************
 
 DaIconModes::Sidecon::~Sidecon(){
 
   }
 
-/**********************/
+/**********************
 
 DaIconModes::Listview::Listview(proto_icon & in){
 
@@ -310,7 +310,7 @@
 
   }
 
-/**********************/
+/**********************
 
 DaIconModes::Listview::~Listview(){
 
@@ -649,8 +649,37 @@
     bool recursing_will_loop,
     bool recurse) {
 
-  if (info->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY){
-    iconlist[slotsUsed++] = new proto_icon(*this, parent->get_history(position), info);
+if (info->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY){
+filesAtPath++;
+    Gtk::TreeModel::Row row = *(m_refTreeModel->append());
+
+    row[iconlist->m_col_icon] = getIcon(info->get_mime_type());
+
+    row[iconlist->m_col_name] = info->get_name();
+
+
+	Glib::ustring sized;
+        if( info->get_size() < 1024 ){
+          sized = (int2ustr(info->get_size()) + " B");
+          }
+        else if ( info->get_size() < (1024 * 1024) ){
+          sized = (int2ustr(info->get_size() / 1024) + " KB");
+          }
+        else{
+          sized = (int2ustr(info->get_size() / 1048576) + " MB");
+          }
+          row[iconlist->m_col_size] = sized;
+
+
+        row[iconlist->m_col_mime] = info->get_mime_type();
+
+
+
+        row[iconlist->m_col_all] = (info->get_name().substr(0,25) + "\n" + sized + "\n" + info->get_mime_type().substr(0,25));
+
+
+//  if (info->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY){
+//    iconlist[slotsUsed++] = new proto_icon(*this, parent->get_history(position), info);
     }
 
   return true;
@@ -662,23 +691,28 @@
 
   int oldie = IconsHigh;
 
-  switch(mode){
-    case 0:
-      IconsHigh = allocation.get_height() / 57;
-      break;
-    case 1:
-      IconsHigh = allocation.get_height() / 25;
-      break;
-    }
-  if ( oldie != IconsHigh ){ //if resize is needed
-    Gtk::Widget * tmp = get_child();
-    redraw();
-    }
+ // switch(mode){
+   // case 0:
+    //  IconsHigh = 
+      m_TreeView.set_columns(filesAtPath/(allocation.get_height() / 60) + 1);
 
+//std::cout << allocation.get_height() << "\n"
+//<< allocation.get_height() /57 << "\n"
+// << filesAtPath/(allocation.get_height() / 57) << "\n";
+   //   break;
+  //  case 1:
+    //  IconsHigh = allocation.get_height() / 25;
+    //  break;
+    //}
+ // if ( oldie != IconsHigh ){ //if resize is needed
+ //   Gtk::Widget * tmp = get_child();
+  // // redraw();
+  //  }
+//*/
   Gtk::EventBox::on_size_allocate(allocation);
   }
 
-/**********************/
+/**********************
 
 void DaIconModes::redraw(){
   Gtk::Widget * tmp = get_child();
@@ -699,7 +733,7 @@
           Sidecon * tmpSidecon = new Sidecon(*iconlist[i]);
           DisposableTable->attach( *tmpSidecon, x_pos, x_pos+1, y_pos, y_pos+1,Gtk::FILL, Gtk::FILL, 4, 4);
           break;
-        case 1:
+        case 1:/*
           Listview * tmpListview = new Listview(*iconlist[i]);
           DisposableTable->attach( *tmpListview, x_pos, x_pos+1, y_pos, y_pos+1,Gtk::FILL, Gtk::FILL, 4, 4);
           break;
@@ -729,8 +763,10 @@
   mode = parent->get_mode();
 
   lastclick = 0;  // a double-click detector. 
+
+
   filesAtPath = 0; // count files in directory
-
+/*
   try{  //count up the files in the directory. 
     Gnome::Vfs::DirectoryHandle handle;
     handle.open(parent->get_history(position), Gnome::Vfs::FILE_INFO_DEFAULT);
@@ -740,13 +776,38 @@
       filesAtPath++;
       }
     }
-  catch(const Gnome::Vfs::exception&){}
+  catch(const Gnome::Vfs::exception&){} */
 
   set_visible_window(false);
 
-  iconlist = new proto_icon*[filesAtPath];
-  slotsUsed = 0;
-  IconsHigh = 0;
+
+ Gtk::ScrolledWindow * MainScroller = Gtk::manage(new Gtk::ScrolledWindow);
+ MainScroller->show();
+ //MainScroller->set_shadow_type(Gtk::SHADOW_NONE);
+// MainScroller->add(*MainEventBox);
+ // MainEventBox->add(*foo);
+  MainScroller->set_policy(Gtk::POLICY_ALWAYS, Gtk::POLICY_NEVER);
+add(*MainScroller);
+        iconlist = new proto_icon;
+        MainScroller->add(m_TreeView);
+        m_TreeView.show();
+        m_refTreeModel = Gtk::ListStore::create(*iconlist);
+        m_TreeView.set_model(m_refTreeModel);
+   // row[iconlist->m_col_icon] 
+
+//  m_TreeView.append_column("", iconlist->m_col_icon);
+//  m_TreeView.append_column("Name", iconlist->m_col_name);
+//  m_TreeView.append_column("Size", iconlist->m_col_size);
+//  m_TreeView.append_column("Mime Type", iconlist->m_col_mime);
+
+  m_TreeView.set_text_column(iconlist->m_col_all);
+  m_TreeView.set_pixbuf_column(iconlist->m_col_icon);
+  m_TreeView.set_orientation(Gtk::ORIENTATION_HORIZONTAL );
+           m_TreeView.show_all_children();
+
+//  iconlist = new proto_icon*[filesAtPath];
+//  slotsUsed = 0;
+//  IconsHigh = 0;
   try { // make all those files into proto_icons
     Gnome::Vfs::DirectoryHandle::visit(
       parent->get_history(position),
@@ -758,6 +819,8 @@
     }
   catch(const Gnome::Vfs::exception& ex){}
 
+  m_TreeView.set_item_width( m_TreeView.get_icon_width()+ 235);
+
   }
 
 /**********************/
@@ -776,7 +839,7 @@
 else
     parent->set_message("Hidden Files are hidden again");
 
-  redraw();
+//  redraw();
   }
 
 /**********************/

Modified: trunk/src/iconmodes.h
===================================================================
--- trunk/src/iconmodes.h	2005-04-23 05:01:45 UTC (rev 60)
+++ trunk/src/iconmodes.h	2005-04-25 05:09:32 UTC (rev 61)
@@ -11,11 +11,13 @@
 #include <gtkmm/entry.h>
 #include <gtkmm/messagedialog.h>
 #include <gtkmm/separator.h>
-
+#include <gtkmm/liststore.h>
+#include <gtkmm/iconview.h>
 /**********************/
 
 class DaIconModes : public Gtk::EventBox {
 
+/*
   class proto_icon {
     Glib::ustring path;
    DaIconModes * parent;
 
@@ -64,7 +66,28 @@
     Listview(proto_icon&);
     ~Listview();
   };
+*/
 
+  class proto_icon : public Gtk::TreeModel::ColumnRecord {
+  public:
+
+    proto_icon(){
+      add(m_col_icon);
+      add(m_col_name);
+      add(m_col_size);
+      add(m_col_mime);
+      add(m_col_all);
+      }
+
+    Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > m_col_icon;
+    Gtk::TreeModelColumn<Glib::ustring> m_col_name;
+    Gtk::TreeModelColumn<Glib::ustring> m_col_size;
+    Gtk::TreeModelColumn<Glib::ustring> m_col_mime;
+
+    Gtk::TreeModelColumn<Glib::ustring> m_col_all;
+  };
+
+
   class ChooseActionDialogue : public Gtk::Dialog {
     Gtk::RadioButton::Group _RadioBGroup_radiobutton1;
     Gtk::Button *cancelbutton1, *okbutton1;
@@ -98,18 +121,14 @@
     Gtk::Button * button1;
     Gtk::Button * button2;
 
-    Gtk::CheckButton * u_r, * u_w, * u_x;
-    Gtk::CheckButton * g_r, * g_w, * g_x;
-    Gtk::CheckButton * o_r, * o_w, * o_x;
+    Gtk::CheckButton * u_r, * u_w, * u_x,* g_r, * g_w, * g_x, * o_r, * o_w, * o_x;
     
     Gnome::Vfs::Handle info;
 
     Gtk::VSeparator * extra;
     Gtk::CheckButton * sticky, * GID, * UID;
 
-    Gtk::Label * user, * group, * others;
-    Gtk::Label * read, * write, * run;
-    Gtk::Label * explaination;
+    Gtk::Label * user, * group, * others, * read, * write, * run, * explaination;
 
     Gtk::Table * layout;
     void cancled();
@@ -132,12 +151,18 @@
   guint32 lastclick;
   guint filesAtPath;
   gshort mode;
-  proto_icon ** iconlist;
+
+
+  proto_icon * iconlist;
+
+
   guint slotsUsed;
   guint IconsHigh;
   Gtk::Menu prompt;
+ // Gtk::TreeView m_TreeView;
+  Gtk::IconView m_TreeView;
+  Glib::RefPtr<Gtk::ListStore> m_refTreeModel;
 
-
 public:
   ~DaIconModes();
   DaIconModes(guint, class Darimasen&);



From darimasen-svn-admin at lists.berlios.de  Tue Apr 26 08:46:48 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Tue, 26 Apr 2005 08:46:48 +0200
Subject: [Darimasen-svn] r62 - in trunk: . pixmaps src
Message-ID: <200504260646.j3Q6km3S020606@sheep.berlios.de>

Author: sudrien
Date: 2005-04-26 08:46:36 +0200 (Tue, 26 Apr 2005)
New Revision: 62

Modified:
   trunk/TODO
   trunk/pixmaps/darimasenInfo.svg
   trunk/src/iconmodes.cpp
   trunk/src/iconmodes.h
Log:
The commit for future reference - IconView is not enough in 2.6

Modified: trunk/TODO
===================================================================
--- trunk/TODO	2005-04-25 05:09:32 UTC (rev 61)
+++ trunk/TODO	2005-04-26 06:46:36 UTC (rev 62)
@@ -2,6 +2,8 @@
 
 Must do:
 
+add a routine to update tab numbers when tabs get deleted.
+
 evaluate the " Gtk-CRITICAL **: gtk_widget_event: assertion `WIDGET_REALIZED_FOR_EVENT (widget, event)' failed" messages
 Full Folder & Icon context menus.
 Keyboard navigation of menus (Alt+1 opens root menu, Alt+2 opens first child, etc)

Modified: trunk/pixmaps/darimasenInfo.svg
===================================================================
--- trunk/pixmaps/darimasenInfo.svg	2005-04-25 05:09:32 UTC (rev 61)
+++ trunk/pixmaps/darimasenInfo.svg	2005-04-26 06:46:36 UTC (rev 62)
@@ -18,7 +18,7 @@
       <stop
          id="stop2051"
          offset="0.0000000"
-         style="stop-color:#d8d8d8;stop-opacity:1.0000000;" />
+         style="stop-color:#b8b8b8;stop-opacity:1.0000000;" />
       <stop
          id="stop2053"
          offset="1.0000000"
@@ -64,7 +64,7 @@
      width="198.00000" />
   <g
      id="layer1"
-     transform="translate(35.00000,16.36152)">
+     transform="matrix(1.133614,0.000000,0.000000,1.133614,-4.525046,-12.88697)">
     <rect
        id="rect2843"
        style="fill:#ffffff;fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000"
@@ -77,29 +77,46 @@
        style="fill:url(#linearGradient3207);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:8.8750000;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-opacity:0.79591835"
        d="M -0.23325339,5.0000000 C -0.23325339,5.0000000 -0.23325339,15.512950 -0.23325339,20.137066 C 38.452555,20.192437 77.138362,20.256287 115.82418,20.314918 C 115.51692,27.421160 117.36607,37.396096 109.67846,41.281537 C 105.06085,45.348432 98.730022,44.236576 93.612606,41.874370 C 85.689412,38.583788 77.600479,33.142630 74.819717,24.603095 C 70.986421,24.067457 67.705354,24.306829 67.270941,28.871510 C 63.481078,36.173460 52.735150,38.563150 46.778601,32.487807 C 42.861760,30.675502 44.858595,25.544170 42.569475,23.061721 C 40.139803,22.670295 35.174287,21.275660 35.257832,24.958794 C 35.013503,32.896507 39.107446,41.206533 46.818119,44.146905 C 53.749888,47.396083 62.098151,46.619711 68.160204,41.874370 C 71.117109,38.996307 73.611001,37.842368 76.262283,41.894131 C 85.089190,50.781777 98.558889,56.168480 110.88388,52.248993 C 115.73922,49.990940 120.41084,46.526704 123.39272,42.052221 C 125.87305,36.292010 128.61715,30.440652 128.19468,23.950976 C 128.09807,17.633!
 769 128.25469,11.317184 128.15667,5.0000000 C 85.446161,5.0000000 42.477251,5.0000000 -0.23325339,5.0000000 z M 12.216279,26.203750 C 10.487101,26.185153 8.2227922,26.687581 6.8214890,26.342081 C 4.8876683,26.960152 -0.41947891,24.985742 -0.23325339,27.606795 C -0.23325339,59.718722 -0.23325339,91.830663 -0.23325339,123.94256 C 42.483834,123.94256 85.200922,123.94256 127.91803,123.94256 C 127.91803,102.00106 127.91803,80.059561 127.91803,58.118067 C 122.98432,58.118067 118.05061,58.118067 113.11690,58.118067 C 113.61470,61.902451 113.93451,66.093579 112.04979,69.520271 C 79.819297,69.520271 47.588806,69.520271 15.358315,69.520271 C 13.263154,56.236554 14.647417,42.637905 14.390014,29.227212 C 15.132456,26.761238 13.945475,26.222349 12.216279,26.203750 z M 86.696194,91.988724 C 88.697720,92.102224 90.594970,92.887462 90.865799,95.249324 C 89.764681,95.483360 88.480005,95.220441 87.348303,95.624798 C 88.012730,94.785614 86.526138,93.870435 85.708122,94.043891 C 84.396466,94.1!
 44609 84.394166,95.366120 85.609335,95.723605 C 86.955285,95.8!
 45307 88
.191464,96.205103 89.423232,96.830209 C 92.034350,98.071779 91.529538,102.13231 88.869926,102.97595 C 86.862058,103.67131 84.221920,103.84674 82.487068,102.42264 C 81.828004,101.87174 80.313684,99.694347 81.637323,99.577031 C 82.839866,99.657548 84.424058,98.813904 84.720071,100.38723 C 85.294536,101.75947 87.957298,101.54654 87.743533,99.912973 C 86.590043,98.140560 84.045058,98.854062 82.585855,97.403299 C 80.286295,95.733835 82.159213,92.076397 84.720071,92.067794 C 85.353695,91.990995 86.029022,91.950897 86.696194,91.988724 z M 50.177519,92.067794 C 50.951303,92.105038 51.897906,92.331175 52.450062,92.146824 C 52.450062,95.535778 52.450062,98.934902 52.450062,102.32383 C 52.850242,104.19702 50.115913,102.92341 49.011604,103.29213 C 49.011604,99.903181 49.011604,96.523836 49.011604,93.134883 C 48.811524,92.198299 49.403754,92.030510 50.177519,92.067794 z M 101.91230,92.067794 C 102.32993,92.246095 102.12056,93.086725 102.14943,93.609164 C 102.47996,95.146315 100.33914,94.!
 367268 99.461914,94.498416 C 98.479889,94.643432 96.337885,93.995332 96.517491,95.585262 C 97.254816,97.014358 99.102365,96.144302 100.37093,96.296675 C 101.94385,95.617884 102.02092,97.482450 101.63565,98.470408 C 100.52840,98.782831 99.220108,98.516516 98.039115,98.529681 C 96.681725,98.206023 95.898835,99.589617 96.438454,100.76271 C 98.151905,100.76271 99.862911,100.76271 101.57637,100.76271 C 103.02863,100.55480 102.06485,102.43578 102.30753,103.29213 C 99.181795,103.29213 96.046695,103.29213 92.920959,103.29213 C 92.920959,99.579239 92.920959,95.859738 92.920959,92.146824 C 95.699738,92.141679 98.482466,92.164653 101.26020,92.146824 C 101.57071,92.017566 101.77309,92.008361 101.91230,92.067794 z M 29.210913,92.087531 C 29.993356,92.141076 30.858512,92.320703 31.483435,92.146824 C 32.566789,95.025921 33.660694,97.903369 34.744029,100.78246 C 35.463049,102.33476 36.183091,103.90380 33.775746,103.29213 C 32.328321,103.73625 31.925970,102.90173 31.384629,101.73099 C 30.10!
 9115,101.16954 27.661195,101.03318 27.116216,102.73882 C 26.76!
 5126,103
.98245 24.634598,102.95515 23.559201,103.29213 C 24.868338,99.806680 26.182555,96.323930 27.491673,92.838480 C 27.736522,92.115811 28.428448,92.034007 29.210913,92.087531 z M 74.128085,92.087531 C 74.909492,92.141397 75.777281,92.321185 76.400610,92.146824 C 77.627816,95.404710 78.848976,98.670737 80.076199,101.92860 C 81.114860,103.46841 80.062904,103.43307 78.692922,103.27236 C 77.248702,103.74706 76.843666,102.89011 76.301803,101.73099 C 75.026289,101.16954 72.578385,101.03318 72.033388,102.73882 C 71.686099,103.98405 69.548381,102.95410 68.476375,103.29213 C 69.785493,99.806680 71.099749,96.323930 72.408849,92.838480 C 72.651896,92.115048 73.346682,92.033686 74.128085,92.087531 z M 113.07738,92.107309 C 113.68543,92.149477 114.34399,92.264244 114.85589,92.166602 C 114.85589,95.836482 114.85587,99.503694 114.85589,103.17355 C 113.80569,103.50109 112.67686,103.18767 111.59529,103.29213 C 110.20570,101.25479 108.81913,99.200878 107.42567,97.166169 C 107.42567,99.087153 107.!
 42567,101.01543 107.42567,102.93642 C 106.83190,103.76151 105.22577,103.07726 104.20459,103.27236 C 104.20459,100.97934 104.20459,98.688526 104.20459,96.395483 C 104.45098,95.058823 103.70136,93.010609 104.59983,92.146824 C 105.54300,92.080296 106.48285,92.227020 107.42567,92.166602 C 108.82286,94.214052 110.21459,96.267089 111.61505,98.312328 C 111.61505,96.381192 111.61505,94.433656 111.61505,92.502541 C 111.91313,92.089843 112.46933,92.065141 113.07738,92.107309 z M 17.472762,92.127067 C 18.869098,92.142644 20.247220,92.298774 21.504042,92.937288 C 23.926501,94.879196 24.174297,98.892231 22.531630,101.41482 C 20.328928,104.23001 16.379914,103.04626 13.303155,103.29213 C 13.308218,99.584473 13.285426,95.873344 13.303155,92.166602 C 14.653722,92.240245 16.076428,92.111470 17.472762,92.127067 z M 41.166427,92.127067 C 42.630747,92.119750 44.093158,92.191484 45.434841,92.621086 C 47.614491,93.947435 47.093750,97.525040 44.703673,98.332065 C 45.959604,99.639304 46.779601,101.!
 24559 47.569037,102.85739 C 47.759643,103.86795 44.884948,103.!
 00514 43
.893466,103.29213 C 42.970229,101.43530 41.999814,99.593076 40.514297,98.114711 C 40.317368,99.507204 40.211776,100.91672 40.277164,102.32383 C 40.689397,104.19602 37.923247,102.92394 36.818957,103.29213 C 36.818957,99.579239 36.818957,95.859738 36.818957,92.146824 C 38.221301,92.216588 39.702088,92.134383 41.166427,92.127067 z M 54.880680,92.146824 C 56.389138,92.146824 57.897556,92.146824 59.405994,92.146824 C 59.987728,94.396955 60.557187,96.656592 61.144983,98.905155 C 61.733985,96.657557 62.304909,94.396975 62.883969,92.146824 C 64.389885,92.146824 65.903352,92.146824 67.409268,92.146824 C 67.409268,95.292798 67.409268,98.446692 67.409268,101.59267 C 68.110669,103.79747 66.105657,103.29123 64.603190,103.29213 C 64.490603,101.30864 64.887521,99.268467 64.286999,97.344027 C 63.304419,98.835471 63.192242,100.67284 62.666589,102.34361 C 62.658707,103.97971 60.873486,103.09944 59.860511,103.27236 C 59.233621,101.30538 59.122742,99.145583 58.022715,97.363764 C 57.453594,99.10!
 2228 57.798935,100.94269 57.706525,102.73882 C 57.576637,104.00630 55.758778,102.99523 54.880680,103.27236 C 54.880680,99.567047 54.880680,95.852120 54.880680,92.146824 z M 86.518347,95.605040 C 86.678148,95.557907 87.024159,95.903393 86.459060,95.822393 C 86.429221,95.693617 86.465069,95.620738 86.518347,95.605040 z M 86.518347,98.984206 C 86.722712,99.041387 86.531275,99.465725 86.162641,99.102750 C 86.321159,99.002797 86.450214,98.965131 86.518347,98.984206 z M 67.547613,105.01135 C 67.698176,104.95354 67.830329,105.55843 67.409268,105.34728 C 67.443037,105.12717 67.497411,105.03064 67.547613,105.01135 z M 36.562074,105.24849 C 36.680632,105.14896 37.027939,105.65251 36.562074,105.58444 C 36.514043,105.36965 36.522535,105.28166 36.562074,105.24849 z " />
   </g>
-  <path
-     id="text1430"
-     style="font-size:14.000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:100.00000%;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Arial Black"
-     d="M 49.265138,151.31380 L 52.505372,151.31380 L 54.761231,158.52571 L 56.982911,151.31380 L 60.127442,151.31380 L 56.408692,161.33528 L 53.052247,161.33528 L 49.265138,151.31380 M 68.303224,158.39583 L 62.725099,158.39583 C 62.775225,158.84245 62.895994,159.17513 63.087403,159.39388 C 63.356280,159.70833 63.707191,159.86556 64.140138,159.86555 C 64.413570,159.86556 64.673336,159.79720 64.919435,159.66048 C 65.069820,159.57389 65.231603,159.42122 65.404787,159.20247 L 68.145997,159.45540 C 67.726718,160.18457 67.220860,160.70865 66.628419,161.02766 C 66.035964,161.34212 65.186031,161.49934 64.078615,161.49934 C 63.117022,161.49934 62.360512,161.36490 61.809083,161.09602 C 61.257649,160.82259 60.799642,160.39192 60.435060,159.80403 C 60.075033,159.21159 59.895020,158.51660 59.895021,157.71907 C 59.895020,156.58431 60.257324,155.66602 60.981935,154.96419 C 61.711099,154.26237 62.715981,153.91146 63.996583,153.91145 C 65.035640,153.91146 65.855953,154.06869 66.457521,154.!
 38313 C 67.059075,154.69759 67.517083,155.15332 67.831544,155.75032 C 68.145989,156.34733 68.303215,157.12435 68.303224,158.08138 L 68.303224,158.39583 M 65.473146,157.06282 C 65.418453,156.52506 65.272619,156.13997 65.035646,155.90755 C 64.803218,155.67513 64.495601,155.55892 64.112794,155.55891 C 63.670732,155.55892 63.317543,155.73438 63.053224,156.08528 C 62.884600,156.30404 62.777504,156.62988 62.731935,157.06282 L 65.473146,157.06282 M 69.622560,154.07552 L 72.227052,154.07552 L 72.227052,155.26497 C 72.477699,154.75000 72.735186,154.39681 72.999513,154.20540 C 73.268389,154.00944 73.598793,153.91146 73.990724,153.91145 C 74.400875,153.91146 74.849767,154.03906 75.337403,154.29427 L 74.476075,156.27669 C 74.147945,156.13997 73.888179,156.07161 73.696778,156.07161 C 73.332190,156.07161 73.049639,156.22201 72.849122,156.52278 C 72.562010,156.94661 72.418454,157.73958 72.418458,158.90169 L 72.418458,161.33528 L 69.622560,161.33528 L 69.622560,154.07552 M 75.665528,159.32!
 552 L 78.427247,159.06575 C 78.541176,159.39388 78.700682,159.!
 62858 78
.905763,159.76985 C 79.110838,159.91113 79.384274,159.98177 79.726075,159.98177 C 80.099768,159.98177 80.389156,159.90201 80.594240,159.74251 C 80.753739,159.62402 80.833492,159.47591 80.833497,159.29817 C 80.833492,159.09765 80.728674,158.94271 80.519044,158.83333 C 80.368648,158.75586 79.969887,158.66015 79.322755,158.54622 C 78.356606,158.37760 77.684406,158.22265 77.306153,158.08138 C 76.932454,157.93555 76.615722,157.69173 76.355958,157.34993 C 76.100749,157.00814 75.973146,156.61849 75.973146,156.18098 C 75.973146,155.70247 76.112142,155.29004 76.390138,154.94368 C 76.668132,154.59733 77.050944,154.33985 77.538575,154.17122 C 78.026203,153.99805 78.680173,153.91146 79.500490,153.91145 C 80.366371,153.91146 81.004390,153.97754 81.414552,154.10970 C 81.829259,154.24186 82.173334,154.44694 82.446778,154.72493 C 82.724767,155.00293 82.954909,155.37891 83.137208,155.85286 L 80.498537,156.11263 C 80.430172,155.88021 80.316239,155.70931 80.156740,155.59993 C 79.937985,155.454!
 10 79.673662,155.38119 79.363771,155.38118 C 79.049314,155.38119 78.819171,155.43815 78.673341,155.55208 C 78.532062,155.66146 78.461424,155.79590 78.461427,155.95540 C 78.461424,156.13314 78.552569,156.26758 78.734865,156.35872 C 78.917153,156.44987 79.313637,156.53190 79.924318,156.60481 C 80.849442,156.70963 81.537593,156.85547 81.988771,157.04231 C 82.439935,157.22917 82.784010,157.49577 83.020997,157.84212 C 83.262526,158.18847 83.383294,158.56901 83.383302,158.98372 C 83.383294,159.40299 83.255691,159.81087 83.000490,160.20735 C 82.749831,160.60384 82.351068,160.92057 81.804200,161.15755 C 81.261877,161.38997 80.521317,161.50618 79.582521,161.50618 C 78.256346,161.50618 77.310710,161.31705 76.745606,160.93880 C 76.185059,160.56054 75.825033,160.02278 75.665528,159.32552 M 84.818849,151.31380 L 87.601075,151.31380 L 87.601075,153.20735 L 84.818849,153.20735 L 84.818849,151.31380 M 84.818849,154.07552 L 87.601075,154.07552 L 87.601075,161.33528 L 84.818849,161.33528 L 8!
 4.818849,154.07552 M 89.050294,157.72591 C 89.050293,156.61849!
  89.4239
91,155.70703 90.171388,154.99153 C 90.918781,154.27149 91.928220,153.91146 93.199708,153.91145 C 94.653478,153.91146 95.751784,154.33301 96.494630,155.17610 C 97.091628,155.85514 97.390130,156.69141 97.390138,157.68489 C 97.390130,158.80143 97.018710,159.71744 96.275880,160.43294 C 95.537593,161.14388 94.514482,161.49934 93.206544,161.49934 C 92.039874,161.49934 91.096515,161.20312 90.376466,160.61067 C 89.492351,159.87695 89.050293,158.91536 89.050294,157.72591 M 91.839356,157.71907 C 91.839354,158.36621 91.969236,158.84472 92.229005,159.15462 C 92.493324,159.46452 92.823727,159.61946 93.220216,159.61946 C 93.621252,159.61946 93.949377,159.46679 94.204591,159.16145 C 94.464351,158.85612 94.594234,158.36621 94.594240,157.69173 C 94.594234,157.06282 94.464351,156.59570 94.204591,156.29036 C 93.944820,155.98047 93.623531,155.82552 93.240724,155.82552 C 92.835121,155.82552 92.500160,155.98275 92.235841,156.29720 C 91.971515,156.60710 91.839354,157.08105 91.839356,157.71907 M 98!
 .743653,154.07552 L 101.33447,154.07552 L 101.33447,155.25813 C 101.72184,154.77507 102.11377,154.43099 102.51025,154.22591 C 102.90673,154.01628 103.38981,153.91146 103.95947,153.91145 C 104.72965,153.91146 105.33121,154.14160 105.76416,154.60188 C 106.20165,155.05762 106.42040,155.76400 106.42041,156.72102 L 106.42041,161.33528 L 103.62451,161.33528 L 103.62451,157.34309 C 103.62451,156.88737 103.54020,156.56608 103.37158,156.37923 C 103.20296,156.18783 102.96598,156.09212 102.66064,156.09212 C 102.32340,156.09212 102.04996,156.21973 101.84033,156.47493 C 101.63069,156.73014 101.52588,157.18815 101.52588,157.84895 L 101.52588,161.33528 L 98.743653,161.33528 L 98.743653,154.07552 M 112.50439,156.28352 C 112.50439,154.37858 112.84619,153.04558 113.52979,152.28450 C 114.21793,151.52344 115.26383,151.14291 116.66748,151.14290 C 117.34195,151.14291 117.89566,151.22722 118.32861,151.39583 C 118.76155,151.55990 119.11474,151.77637 119.38818,152.04524 C 119.66161,152.30957 119.87!
 581,152.58985 120.03076,152.88606 C 120.19026,153.17774 120.31!
 786,153.
51953 120.41357,153.91145 C 120.60041,154.65886 120.69384,155.43815 120.69385,156.24934 C 120.69384,158.06771 120.38622,159.39843 119.77100,160.24153 C 119.15575,161.08463 118.09619,161.50618 116.59229,161.50618 C 115.74918,161.50618 115.06787,161.37174 114.54834,161.10286 C 114.02881,160.83398 113.60270,160.43977 113.27002,159.92024 C 113.02848,159.55110 112.83935,159.04752 112.70264,158.40950 C 112.57047,157.76693 112.50439,157.05827 112.50439,156.28352 M 115.26611,156.29036 C 115.26611,157.56640 115.37776,158.43913 115.60107,158.90852 C 115.82893,159.37337 116.15706,159.60579 116.58545,159.60579 C 116.86800,159.60579 117.11181,159.50781 117.31689,159.31184 C 117.52652,159.11133 117.67919,158.79687 117.77490,158.36848 C 117.87516,157.94010 117.92529,157.27246 117.92529,156.36555 C 117.92529,155.03483 117.81135,154.14160 117.58350,153.68587 C 117.36018,153.22559 117.02294,152.99545 116.57178,152.99544 C 116.11149,152.99545 115.77880,153.23015 115.57373,153.69954 C 115.36865!
 ,154.16439 115.26611,155.02800 115.26611,156.29036 M 122.12939,158.54622 L 125.10303,158.54622 L 125.10303,161.33528 L 122.12939,161.33528 L 122.12939,158.54622 M 126.53174,156.28352 C 126.53174,154.37858 126.87353,153.04558 127.55713,152.28450 C 128.24528,151.52344 129.29118,151.14291 130.69482,151.14290 C 131.36930,151.14291 131.92301,151.22722 132.35596,151.39583 C 132.78889,151.55990 133.14208,151.77637 133.41553,152.04524 C 133.68896,152.30957 133.90315,152.58985 134.05811,152.88606 C 134.21760,153.17774 134.34521,153.51953 134.44092,153.91145 C 134.62776,154.65886 134.72118,155.43815 134.72119,156.24934 C 134.72118,158.06771 134.41357,159.39843 133.79834,160.24153 C 133.18310,161.08463 132.12353,161.50618 130.61963,161.50618 C 129.77653,161.50618 129.09521,161.37174 128.57568,161.10286 C 128.05615,160.83398 127.63004,160.43977 127.29736,159.92024 C 127.05583,159.55110 126.86670,159.04752 126.72998,158.40950 C 126.59782,157.76693 126.53174,157.05827 126.53174,156.28352!
  M 129.29346,156.29036 C 129.29345,157.56640 129.40511,158.439!
 13 129.6
2842,158.90852 C 129.85628,159.37337 130.18440,159.60579 130.61279,159.60579 C 130.89534,159.60579 131.13915,159.50781 131.34424,159.31184 C 131.55387,159.11133 131.70654,158.79687 131.80225,158.36848 C 131.90250,157.94010 131.95263,157.27246 131.95264,156.36555 C 131.95263,155.03483 131.83870,154.14160 131.61084,153.68587 C 131.38753,153.22559 131.05029,152.99545 130.59912,152.99544 C 130.13883,152.99545 129.80615,153.23015 129.60107,153.69954 C 129.39599,154.16439 129.29345,155.02800 129.29346,156.29036 M 136.15674,158.54622 L 139.13037,158.54622 L 139.13037,161.33528 L 136.15674,161.33528 L 136.15674,158.54622 M 140.60693,151.31380 L 148.73486,151.31380 L 148.73486,153.19368 C 148.02848,153.83171 147.43831,154.52214 146.96436,155.26497 C 146.39013,156.16732 145.93668,157.17220 145.60400,158.27962 C 145.33968,159.14095 145.16194,160.15950 145.07080,161.33528 L 142.29541,161.33528 C 142.51416,159.69922 142.85823,158.32747 143.32764,157.22005 C 143.79703,156.11263 144.53987,!
 154.92774 145.55615,153.66536 L 140.60693,153.66536 L 140.60693,151.31380" />
-  <path
-     id="text1438"
-     style="font-size:12.000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:120.00000%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Arial"
-     d="M 21.632811,201.22151 L 22.769530,201.50862 C 22.531241,202.44222 22.101554,203.15511 21.480468,203.64729 C 20.863274,204.13557 20.107415,204.37971 19.212890,204.37971 C 18.287105,204.37971 17.533199,204.19222 16.951171,203.81721 C 16.373044,203.43831 15.931638,202.89144 15.626952,202.17659 C 15.326170,201.46175 15.175780,200.69417 15.175780,199.87386 C 15.175780,198.97933 15.345701,198.20003 15.685546,197.53596 C 16.029294,196.86800 16.515622,196.36214 17.144530,196.01839 C 17.777340,195.67074 18.472651,195.49691 19.230468,195.49690 C 20.089837,195.49691 20.812493,195.71566 21.398437,196.15315 C 21.984367,196.59066 22.392569,197.20589 22.623046,197.99886 L 21.503905,198.26253 C 21.304680,197.63753 21.015618,197.18246 20.636718,196.89729 C 20.257806,196.61214 19.781244,196.46957 19.207030,196.46956 C 18.546870,196.46957 17.994136,196.62777 17.548827,196.94417 C 17.107418,197.26058 16.796872,197.68636 16.617187,198.22151 C 16.437497,198.75277 16.347653,199.30159 16.3!
 47655,199.86800 C 16.347653,200.59847 16.453122,201.23714 16.664061,201.78401 C 16.878903,202.32698 17.210934,202.73323 17.660155,203.00276 C 18.109370,203.27229 18.595698,203.40706 19.119140,203.40706 C 19.755853,203.40706 20.294915,203.22347 20.736327,202.85628 C 21.177727,202.48909 21.476555,201.94417 21.632811,201.22151 M 23.648437,201.12190 C 23.648436,199.96956 23.968748,199.11605 24.609374,198.56136 C 25.144528,198.10042 25.796871,197.86996 26.566405,197.86995 C 27.421870,197.86996 28.121088,198.15121 28.664061,198.71370 C 29.207024,199.27230 29.478508,200.04573 29.478515,201.03401 C 29.478508,201.83480 29.357415,202.46565 29.115233,202.92659 C 28.876946,203.38362 28.527337,203.73909 28.066405,203.99300 C 27.609370,204.24690 27.109370,204.37386 26.566405,204.37386 C 25.695309,204.37386 24.990232,204.09456 24.451171,203.53596 C 23.916014,202.97737 23.648436,202.17269 23.648437,201.12190 M 24.732421,201.12190 C 24.732419,201.91878 24.906247,202.51644 25.253905,202.9148!
 7 C 25.601559,203.30940 26.039059,203.50667 26.566405,203.5066!
 7 C 27.0
89839,203.50667 27.525385,203.30745 27.873046,202.90901 C 28.220697,202.51058 28.394525,201.90315 28.394530,201.08675 C 28.394525,200.31722 28.218744,199.73519 27.867187,199.34065 C 27.519526,198.94222 27.085933,198.74300 26.566405,198.74300 C 26.039059,198.74300 25.601559,198.94027 25.253905,199.33479 C 24.906247,199.72933 24.732419,200.32503 24.732421,201.12190 M 30.720702,206.61800 L 30.720702,198.01057 L 31.681640,198.01057 L 31.681640,198.81917 C 31.908200,198.50277 32.164059,198.26644 32.449218,198.11018 C 32.734371,197.95003 33.080074,197.86996 33.486327,197.86995 C 34.017573,197.86996 34.486323,198.00667 34.892577,198.28011 C 35.298822,198.55355 35.605462,198.94027 35.812499,199.44026 C 36.019524,199.93636 36.123040,200.48128 36.123046,201.07503 C 36.123040,201.71175 36.007805,202.28597 35.777343,202.79768 C 35.550775,203.30550 35.218744,203.69612 34.781249,203.96956 C 34.347651,204.23909 33.890620,204.37386 33.410155,204.37386 C 33.058590,204.37386 32.742184,204.299!
 64 32.460937,204.15120 C 32.183590,204.00276 31.955075,203.81526 31.775390,203.58870 L 31.775390,206.61800 L 30.720702,206.61800 M 31.675780,201.15706 C 31.675779,201.95784 31.837888,202.54964 32.162108,202.93245 C 32.486325,203.31526 32.878902,203.50667 33.339843,203.50667 C 33.808589,203.50667 34.208979,203.30940 34.541015,202.91487 C 34.876947,202.51644 35.044916,201.90120 35.044921,201.06917 C 35.044916,200.27620 34.880853,199.68245 34.552733,199.28792 C 34.228510,198.89339 33.839839,198.69613 33.386718,198.69612 C 32.937496,198.69613 32.539059,198.90706 32.191405,199.32893 C 31.847653,199.74691 31.675779,200.35628 31.675780,201.15706 M 37.353515,206.62971 L 37.236327,205.63948 C 37.466795,205.70198 37.667967,205.73323 37.839843,205.73323 C 38.074216,205.73323 38.261716,205.69417 38.402343,205.61604 C 38.542966,205.53792 38.658200,205.42854 38.748046,205.28792 C 38.814450,205.18245 38.921872,204.92073 39.070311,204.50276 C 39.089840,204.44417 39.121090,204.35823 39.1640!
 61,204.24495 L 36.802733,198.01057 L 37.939452,198.01057 L 39.!
 234374,2
01.61409 C 39.402340,202.07112 39.552730,202.55159 39.685546,203.05550 C 39.806636,202.57112 39.951168,202.09847 40.119140,201.63753 L 41.449218,198.01057 L 42.503905,198.01057 L 40.136718,204.33870 C 39.882808,205.02229 39.685543,205.49299 39.544921,205.75081 C 39.357418,206.09846 39.142575,206.35237 38.900390,206.51253 C 38.658200,206.67659 38.369138,206.75862 38.033202,206.75862 C 37.830076,206.75862 37.603514,206.71565 37.353515,206.62971 M 43.388671,204.23323 L 43.388671,198.01057 L 44.337890,198.01057 L 44.337890,198.95393 C 44.580075,198.51253 44.802731,198.22152 45.005858,198.08089 C 45.212887,197.94027 45.439449,197.86996 45.685546,197.86995 C 46.041011,197.86996 46.402339,197.98324 46.769530,198.20979 L 46.406249,199.18831 C 46.148433,199.03597 45.890621,198.95980 45.632811,198.95979 C 45.402340,198.95980 45.195309,199.03011 45.011718,199.17073 C 44.828122,199.30745 44.697263,199.49886 44.619140,199.74495 C 44.501950,200.11995 44.443357,200.53011 44.443358,200.9754!
 2 L 44.443358,204.23323 L 43.388671,204.23323 M 47.414061,196.85628 L 47.414061,195.64339 L 48.468749,195.64339 L 48.468749,196.85628 L 47.414061,196.85628 M 47.414061,204.23323 L 47.414061,198.01057 L 48.468749,198.01057 L 48.468749,204.23323 L 47.414061,204.23323 M 49.886718,204.74886 L 50.912108,204.90120 C 50.955075,205.21760 51.074216,205.44807 51.269530,205.59261 C 51.531247,205.78792 51.888668,205.88557 52.341796,205.88557 C 52.830074,205.88557 53.207026,205.78792 53.472655,205.59261 C 53.738276,205.39729 53.917963,205.12385 54.011718,204.77229 C 54.066400,204.55745 54.091791,204.10628 54.087890,203.41878 C 53.626948,203.96175 53.052730,204.23323 52.365233,204.23323 C 51.509762,204.23323 50.847654,203.92464 50.378905,203.30745 C 49.910155,202.69026 49.675780,201.95003 49.675780,201.08675 C 49.675780,200.49300 49.783202,199.94613 49.998046,199.44612 C 50.212889,198.94222 50.523435,198.55355 50.929687,198.28011 C 51.339841,198.00667 51.820309,197.86996 52.371093,197.86!
 995 C 53.105464,197.86996 53.710932,198.16683 54.187499,198.76!
 057 L 54
.187499,198.01057 L 55.160155,198.01057 L 55.160155,203.38948 C 55.160149,204.35823 55.060540,205.04378 54.861327,205.44612 C 54.666009,205.85237 54.353510,206.17268 53.923827,206.40706 C 53.498042,206.64143 52.972652,206.75862 52.347655,206.75862 C 51.605465,206.75862 51.005857,206.59065 50.548827,206.25471 C 50.091795,205.92268 49.871092,205.42073 49.886718,204.74886 M 50.759765,201.01057 C 50.759763,201.82698 50.921872,202.42269 51.246093,202.79768 C 51.570309,203.17268 51.976559,203.36018 52.464843,203.36018 C 52.949214,203.36018 53.355464,203.17464 53.683593,202.80354 C 54.011713,202.42854 54.175775,201.84261 54.175780,201.04573 C 54.175775,200.28402 54.005854,199.70980 53.666015,199.32307 C 53.330073,198.93636 52.923823,198.74300 52.447265,198.74300 C 51.978512,198.74300 51.580075,198.93441 51.251952,199.31721 C 50.923825,199.69613 50.759763,200.26058 50.759765,201.01057 M 56.759765,204.23323 L 56.759765,195.64339 L 57.814452,195.64339 L 57.814452,198.72542 C 58.306637!
 ,198.15511 58.927730,197.86996 59.677733,197.86995 C 60.138667,197.86996 60.539057,197.96175 60.878905,198.14534 C 61.218744,198.32503 61.460931,198.57503 61.605468,198.89534 C 61.753899,199.21566 61.828118,199.68050 61.828124,200.28987 L 61.828124,204.23323 L 60.773437,204.23323 L 60.773437,200.28987 C 60.773432,199.76253 60.658197,199.37972 60.427733,199.14143 C 60.201167,198.89925 59.878901,198.77816 59.460937,198.77815 C 59.148433,198.77816 58.853512,198.86019 58.576171,199.02425 C 58.302731,199.18441 58.107419,199.40316 57.990233,199.68050 C 57.873044,199.95784 57.814450,200.34066 57.814452,200.82893 L 57.814452,204.23323 L 56.759765,204.23323 M 65.742187,203.28987 L 65.894530,204.22151 C 65.597652,204.28401 65.332028,204.31526 65.097655,204.31526 C 64.714841,204.31526 64.417966,204.25471 64.207030,204.13362 C 63.996091,204.01253 63.847654,203.85432 63.761718,203.65901 C 63.675779,203.45979 63.632811,203.04378 63.632811,202.41096 L 63.632811,198.83089 L 62.859374,198.8!
 3089 L 62.859374,198.01057 L 63.632811,198.01057 L 63.632811,1!
 96.46956
 L 64.681640,195.83675 L 64.681640,198.01057 L 65.742187,198.01057 L 65.742187,198.83089 L 64.681640,198.83089 L 64.681640,202.46956 C 64.681638,202.77034 64.699216,202.96370 64.734374,203.04964 C 64.773434,203.13558 64.833981,203.20393 64.916015,203.25471 C 65.001950,203.30550 65.123043,203.33089 65.279296,203.33089 C 65.396481,203.33089 65.550777,203.31722 65.742187,203.28987 M 73.746093,195.49690 C 74.488275,195.49691 75.212884,195.68832 75.919921,196.07112 C 76.626945,196.45004 77.177726,196.99496 77.572265,197.70589 C 77.966787,198.41292 78.164053,199.15120 78.164061,199.92073 C 78.164053,200.68245 77.968740,201.41487 77.578124,202.11800 C 77.191397,202.82112 76.646476,203.36800 75.943358,203.75862 C 75.244134,204.14534 74.511713,204.33870 73.746093,204.33870 C 72.980464,204.33870 72.246090,204.14534 71.542968,203.75862 C 70.843747,203.36800 70.298826,202.82112 69.908202,202.11800 C 69.517577,201.41487 69.322265,200.68245 69.322265,199.92073 C 69.322265,199.15120 69.519!
 530,198.41292 69.914061,197.70589 C 70.312498,196.99496 70.865232,196.45004 71.572265,196.07112 C 72.279293,195.68832 73.003902,195.49691 73.746093,195.49690 M 73.746093,196.22932 C 73.124995,196.22933 72.519527,196.38949 71.929687,196.70979 C 71.343747,197.02621 70.884763,197.48128 70.552733,198.07503 C 70.220701,198.66488 70.054686,199.28011 70.054687,199.92073 C 70.054686,200.55745 70.216795,201.16878 70.541015,201.75471 C 70.869138,202.33675 71.326169,202.79183 71.912108,203.11995 C 72.498043,203.44417 73.109370,203.60628 73.746093,203.60628 C 74.382806,203.60628 74.994134,203.44417 75.580077,203.11995 C 76.166008,202.79183 76.621085,202.33675 76.945311,201.75471 C 77.269522,201.16878 77.431631,200.55745 77.431640,199.92073 C 77.431631,199.28011 77.265616,198.66488 76.933593,198.07503 C 76.605460,197.48128 76.146477,197.02621 75.556640,196.70979 C 74.966790,196.38949 74.363275,196.22933 73.746093,196.22932 M 75.164061,200.63557 L 75.884765,200.84651 C 75.767571,201.3348!
 0 75.517571,201.72542 75.134765,202.01839 C 74.755853,202.3074!
 5 74.294
916,202.45198 73.751952,202.45198 C 73.064448,202.45198 72.505855,202.22933 72.076171,201.78401 C 71.646481,201.33870 71.431637,200.72152 71.431640,199.93245 C 71.431637,199.41683 71.529294,198.96956 71.724608,198.59065 C 71.919918,198.20785 72.197262,197.92074 72.556640,197.72932 C 72.919917,197.53402 73.333979,197.43636 73.798827,197.43636 C 74.318353,197.43636 74.749994,197.56136 75.093749,197.81136 C 75.437493,198.05746 75.671868,198.39339 75.796874,198.81917 L 75.099608,198.98909 C 74.982415,198.70003 74.808587,198.47933 74.578124,198.32698 C 74.351556,198.17074 74.083979,198.09261 73.775390,198.09261 C 73.326167,198.09261 72.955073,198.25277 72.662108,198.57307 C 72.373043,198.89339 72.228512,199.35238 72.228515,199.95003 C 72.228512,200.54769 72.365230,201.00081 72.638671,201.30940 C 72.916011,201.61409 73.273433,201.76644 73.710937,201.76643 C 74.062494,201.76644 74.371088,201.66487 74.636718,201.46175 C 74.902337,201.25862 75.078118,200.98323 75.164061,200.63557 M 8!
 7.509765,203.21956 L 87.509765,204.23323 L 81.832030,204.23323 C 81.824217,203.97932 81.865233,203.73518 81.955077,203.50081 C 82.099608,203.11409 82.330076,202.73323 82.646483,202.35823 C 82.966794,201.98323 83.427731,201.54964 84.029296,201.05745 C 84.962886,200.29183 85.593745,199.68636 85.921874,199.24104 C 86.249994,198.79183 86.414057,198.36800 86.414061,197.96956 C 86.414057,197.55160 86.263666,197.20003 85.962890,196.91487 C 85.666010,196.62582 85.277339,196.48129 84.796874,196.48128 C 84.289059,196.48129 83.882809,196.63363 83.578124,196.93831 C 83.273435,197.24300 83.119138,197.66488 83.115233,198.20393 L 82.031249,198.09261 C 82.105467,197.28402 82.384764,196.66879 82.869140,196.24690 C 83.353513,195.82113 84.003903,195.60824 84.820311,195.60823 C 85.644526,195.60824 86.296869,195.83675 86.777343,196.29378 C 87.257806,196.75082 87.498040,197.31722 87.498046,197.99300 C 87.498040,198.33675 87.427727,198.67464 87.287108,199.00667 C 87.146478,199.33870 86.912103,199!
 .68831 86.583983,200.05550 C 86.259760,200.42269 85.718745,200!
 .92659 8
4.960937,201.56721 C 84.328121,202.09847 83.921872,202.45979 83.742187,202.65120 C 83.562497,202.83870 83.414060,203.02815 83.296874,203.21956 L 87.509765,203.21956 M 88.646483,199.99690 C 88.646483,198.98128 88.749998,198.16488 88.957030,197.54768 C 89.167967,196.92660 89.478513,196.44808 89.888671,196.11214 C 90.302731,195.77621 90.822262,195.60824 91.447265,195.60823 C 91.908198,195.60824 92.312495,195.70199 92.660155,195.88948 C 93.007807,196.07308 93.294916,196.34066 93.521483,196.69221 C 93.748040,197.03988 93.925774,197.46566 94.054687,197.96956 C 94.183587,198.46956 94.248040,199.14535 94.248046,199.99690 C 94.248040,201.00472 94.144524,201.81917 93.937499,202.44026 C 93.730462,203.05745 93.419916,203.53597 93.005858,203.87581 C 92.595698,204.21175 92.076167,204.37971 91.447265,204.37971 C 90.619137,204.37971 89.968747,204.08284 89.496093,203.48909 C 88.929686,202.77425 88.646483,201.61019 88.646483,199.99690 M 89.730468,199.99690 C 89.730466,201.40706 89.894529,202.!
 34651 90.222655,202.81526 C 90.554684,203.28011 90.962887,203.51253 91.447265,203.51253 C 91.931636,203.51253 92.337885,203.27815 92.666015,202.80940 C 92.998041,202.34065 93.164056,201.40316 93.164061,199.99690 C 93.164056,198.58285 92.998041,197.64339 92.666015,197.17854 C 92.337885,196.71371 91.927730,196.48129 91.435546,196.48128 C 90.951168,196.48129 90.564450,196.68636 90.275390,197.09651 C 89.912107,197.61996 89.730466,198.58675 89.730468,199.99690 M 95.326171,199.99690 C 95.326170,198.98128 95.429686,198.16488 95.636718,197.54768 C 95.847654,196.92660 96.158201,196.44808 96.568358,196.11214 C 96.982419,195.77621 97.501949,195.60824 98.126952,195.60823 C 98.587886,195.60824 98.992182,195.70199 99.339843,195.88948 C 99.687494,196.07308 99.974603,196.34066 100.20117,196.69221 C 100.42773,197.03988 100.60546,197.46566 100.73438,197.96956 C 100.86328,198.46956 100.92773,199.14535 100.92773,199.99690 C 100.92773,201.00472 100.82421,201.81917 100.61719,202.44026 C 100.4101!
 5,203.05745 100.09960,203.53597 99.685546,203.87581 C 99.27538!
 5,204.21
175 98.755854,204.37971 98.126952,204.37971 C 97.298825,204.37971 96.648435,204.08284 96.175780,203.48909 C 95.609373,202.77425 95.326170,201.61019 95.326171,199.99690 M 96.410155,199.99690 C 96.410154,201.40706 96.574216,202.34651 96.902343,202.81526 C 97.234372,203.28011 97.642574,203.51253 98.126952,203.51253 C 98.611323,203.51253 99.017573,203.27815 99.345702,202.80940 C 99.677729,202.34065 99.843744,201.40316 99.843749,199.99690 C 99.843744,198.58285 99.677729,197.64339 99.345702,197.17854 C 99.017573,196.71371 98.607417,196.48129 98.115233,196.48128 C 97.630856,196.48129 97.244137,196.68636 96.955077,197.09651 C 96.591794,197.61996 96.410154,198.58675 96.410155,199.99690 M 105.38672,204.23323 L 105.38672,202.17659 L 101.66016,202.17659 L 101.66016,201.20979 L 105.58008,195.64339 L 106.44141,195.64339 L 106.44141,201.20979 L 107.60156,201.20979 L 107.60156,202.17659 L 106.44141,202.17659 L 106.44141,204.23323 L 105.38672,204.23323 M 105.38672,201.20979 L 105.38672,197.3!
 3675 L 102.69727,201.20979 L 105.38672,201.20979 M 108.56836,201.65511 L 108.56836,200.59456 L 111.80859,200.59456 L 111.80859,201.65511 L 108.56836,201.65511 M 118.23633,203.21956 L 118.23633,204.23323 L 112.55859,204.23323 C 112.55078,203.97932 112.59180,203.73518 112.68164,203.50081 C 112.82617,203.11409 113.05664,202.73323 113.37305,202.35823 C 113.69336,201.98323 114.15429,201.54964 114.75586,201.05745 C 115.68945,200.29183 116.32031,199.68636 116.64844,199.24104 C 116.97656,198.79183 117.14062,198.36800 117.14062,197.96956 C 117.14062,197.55160 116.99023,197.20003 116.68945,196.91487 C 116.39257,196.62582 116.00390,196.48129 115.52344,196.48128 C 115.01562,196.48129 114.60937,196.63363 114.30469,196.93831 C 114.00000,197.24300 113.84570,197.66488 113.84180,198.20393 L 112.75781,198.09261 C 112.83203,197.28402 113.11133,196.66879 113.59570,196.24690 C 114.08008,195.82113 114.73047,195.60824 115.54688,195.60823 C 116.37109,195.60824 117.02343,195.83675 117.50391,196.293!
 78 C 117.98437,196.75082 118.22460,197.31722 118.22461,197.993!
 00 C 118
.22460,198.33675 118.15429,198.67464 118.01367,199.00667 C 117.87304,199.33870 117.63867,199.68831 117.31055,200.05550 C 116.98632,200.42269 116.44531,200.92659 115.68750,201.56721 C 115.05468,202.09847 114.64844,202.45979 114.46875,202.65120 C 114.28906,202.83870 114.14062,203.02815 114.02344,203.21956 L 118.23633,203.21956 M 119.37305,199.99690 C 119.37305,198.98128 119.47656,198.16488 119.68359,197.54768 C 119.89453,196.92660 120.20508,196.44808 120.61523,196.11214 C 121.02929,195.77621 121.54883,195.60824 122.17383,195.60823 C 122.63476,195.60824 123.03906,195.70199 123.38672,195.88948 C 123.73437,196.07308 124.02148,196.34066 124.24805,196.69221 C 124.47460,197.03988 124.65234,197.46566 124.78125,197.96956 C 124.91015,198.46956 124.97460,199.14535 124.97461,199.99690 C 124.97460,201.00472 124.87109,201.81917 124.66406,202.44026 C 124.45703,203.05745 124.14648,203.53597 123.73242,203.87581 C 123.32226,204.21175 122.80273,204.37971 122.17383,204.37971 C 121.34570,204.3797!
 1 120.69531,204.08284 120.22266,203.48909 C 119.65625,202.77425 119.37305,201.61019 119.37305,199.99690 M 120.45703,199.99690 C 120.45703,201.40706 120.62109,202.34651 120.94922,202.81526 C 121.28125,203.28011 121.68945,203.51253 122.17383,203.51253 C 122.65820,203.51253 123.06445,203.27815 123.39258,202.80940 C 123.72460,202.34065 123.89062,201.40316 123.89062,199.99690 C 123.89062,198.58285 123.72460,197.64339 123.39258,197.17854 C 123.06445,196.71371 122.65429,196.48129 122.16211,196.48128 C 121.67773,196.48129 121.29101,196.68636 121.00195,197.09651 C 120.63867,197.61996 120.45703,198.58675 120.45703,199.99690 M 126.05273,199.99690 C 126.05273,198.98128 126.15625,198.16488 126.36328,197.54768 C 126.57422,196.92660 126.88476,196.44808 127.29492,196.11214 C 127.70898,195.77621 128.22851,195.60824 128.85352,195.60823 C 129.31445,195.60824 129.71875,195.70199 130.06641,195.88948 C 130.41406,196.07308 130.70117,196.34066 130.92773,196.69221 C 131.15429,197.03988 131.33203,19!
 7.46566 131.46094,197.96956 C 131.58984,198.46956 131.65429,19!
 9.14535 
131.65430,199.99690 C 131.65429,201.00472 131.55078,201.81917 131.34375,202.44026 C 131.13671,203.05745 130.82617,203.53597 130.41211,203.87581 C 130.00195,204.21175 129.48242,204.37971 128.85352,204.37971 C 128.02539,204.37971 127.37500,204.08284 126.90234,203.48909 C 126.33594,202.77425 126.05273,201.61019 126.05273,199.99690 M 127.13672,199.99690 C 127.13672,201.40706 127.30078,202.34651 127.62891,202.81526 C 127.96094,203.28011 128.36914,203.51253 128.85352,203.51253 C 129.33789,203.51253 129.74414,203.27815 130.07227,202.80940 C 130.40429,202.34065 130.57031,201.40316 130.57031,199.99690 C 130.57031,198.58285 130.40429,197.64339 130.07227,197.17854 C 129.74414,196.71371 129.33398,196.48129 128.84180,196.48128 C 128.35742,196.48129 127.97070,196.68636 127.68164,197.09651 C 127.31836,197.61996 127.13672,198.58675 127.13672,199.99690 M 132.73242,201.98323 L 133.83984,201.88948 C 133.92187,202.42854 134.11133,202.83479 134.40820,203.10823 C 134.70898,203.37776 135.07031,203!
 .51253 135.49219,203.51253 C 136.00000,203.51253 136.42968,203.32112 136.78125,202.93831 C 137.13281,202.55550 137.30859,202.04769 137.30859,201.41487 C 137.30859,200.81331 137.13867,200.33870 136.79883,199.99104 C 136.46289,199.64339 136.02148,199.46956 135.47461,199.46956 C 135.13476,199.46956 134.82812,199.54769 134.55469,199.70393 C 134.28125,199.85628 134.06640,200.05550 133.91016,200.30159 L 132.91992,200.17268 L 133.75195,195.76057 L 138.02344,195.76057 L 138.02344,196.76839 L 134.59570,196.76839 L 134.13281,199.07698 C 134.64844,198.71761 135.18945,198.53792 135.75586,198.53792 C 136.50586,198.53792 137.13867,198.79769 137.65430,199.31721 C 138.16992,199.83675 138.42773,200.50472 138.42773,201.32112 C 138.42773,202.09847 138.20117,202.77034 137.74805,203.33675 C 137.19726,204.03206 136.44531,204.37971 135.49219,204.37971 C 134.71094,204.37971 134.07226,204.16097 133.57617,203.72346 C 133.08398,203.28597 132.80273,202.70589 132.73242,201.98323 M 142.78125,201.47346 L!
  143.85352,201.37971 C 143.90430,201.80940 144.02148,202.16292!
  144.205
08,202.44026 C 144.39258,202.71370 144.68164,202.93636 145.07227,203.10823 C 145.46289,203.27620 145.90234,203.36018 146.39062,203.36018 C 146.82421,203.36018 147.20703,203.29573 147.53906,203.16682 C 147.87109,203.03792 148.11718,202.86214 148.27734,202.63948 C 148.44140,202.41292 148.52343,202.16683 148.52344,201.90120 C 148.52343,201.63167 148.44531,201.39730 148.28906,201.19807 C 148.13281,200.99495 147.87499,200.82503 147.51562,200.68831 C 147.28515,200.59847 146.77539,200.45980 145.98633,200.27229 C 145.19726,200.08089 144.64453,199.90120 144.32812,199.73323 C 143.91797,199.51839 143.61133,199.25277 143.40820,198.93636 C 143.20898,198.61605 143.10937,198.25863 143.10938,197.86409 C 143.10937,197.43050 143.23242,197.02621 143.47852,196.65120 C 143.72461,196.27230 144.08398,195.98519 144.55664,195.78987 C 145.02929,195.59457 145.55468,195.49691 146.13281,195.49690 C 146.76953,195.49691 147.33007,195.60043 147.81445,195.80745 C 148.30273,196.01058 148.67773,196.31136 148.!
 93945,196.70979 C 149.20116,197.10824 149.34179,197.55941 149.36133,198.06331 L 148.27148,198.14534 C 148.21288,197.60238 148.01367,197.19222 147.67383,196.91487 C 147.33789,196.63754 146.83984,196.49886 146.17969,196.49886 C 145.49218,196.49886 144.99023,196.62582 144.67383,196.87971 C 144.36133,197.12972 144.20508,197.43246 144.20508,197.78792 C 144.20508,198.09652 144.31640,198.35042 144.53906,198.54964 C 144.75781,198.74886 145.32812,198.95394 146.25000,199.16487 C 147.17578,199.37191 147.81054,199.55355 148.15430,199.70979 C 148.65429,199.94027 149.02343,200.23323 149.26172,200.58870 C 149.49999,200.94027 149.61913,201.34651 149.61914,201.80745 C 149.61913,202.26448 149.48827,202.69612 149.22656,203.10237 C 148.96484,203.50472 148.58788,203.81917 148.09570,204.04573 C 147.60742,204.26839 147.05664,204.37971 146.44336,204.37971 C 145.66601,204.37971 145.01367,204.26643 144.48633,204.03987 C 143.96289,203.81331 143.55078,203.47347 143.25000,203.02034 C 142.95312,202.5633!
 1 142.79687,202.04769 142.78125,201.47346 M 155.12695,204.2332!
 3 L 155.
12695,203.31917 C 154.64257,204.02229 153.98437,204.37386 153.15234,204.37386 C 152.78515,204.37386 152.44140,204.30354 152.12109,204.16292 C 151.80469,204.02229 151.56836,203.84651 151.41211,203.63557 C 151.25976,203.42073 151.15234,203.15901 151.08984,202.85042 C 151.04687,202.64339 151.02539,202.31526 151.02539,201.86604 L 151.02539,198.01057 L 152.08008,198.01057 L 152.08008,201.46175 C 152.08008,202.01253 152.10156,202.38362 152.14453,202.57503 C 152.21094,202.85237 152.35156,203.07112 152.56641,203.23128 C 152.78125,203.38753 153.04687,203.46565 153.36328,203.46565 C 153.67968,203.46565 153.97656,203.38558 154.25391,203.22542 C 154.53125,203.06136 154.72656,202.84065 154.83984,202.56331 C 154.95703,202.28206 155.01562,201.87581 155.01562,201.34456 L 155.01562,198.01057 L 156.07031,198.01057 L 156.07031,204.23323 L 155.12695,204.23323 M 161.76562,204.23323 L 161.76562,203.44807 C 161.37109,204.06526 160.79101,204.37386 160.02539,204.37386 C 159.52929,204.37386 159.07226!
 ,204.23714 158.65430,203.96370 C 158.24023,203.69026 157.91797,203.30940 157.68750,202.82112 C 157.46094,202.32894 157.34766,201.76448 157.34766,201.12776 C 157.34766,200.50667 157.45117,199.94417 157.65820,199.44026 C 157.86523,198.93245 158.17578,198.54378 158.58984,198.27425 C 159.00390,198.00472 159.46679,197.86996 159.97852,197.86995 C 160.35351,197.86996 160.68750,197.95003 160.98047,198.11018 C 161.27343,198.26644 161.51171,198.47152 161.69531,198.72542 L 161.69531,195.64339 L 162.74414,195.64339 L 162.74414,204.23323 L 161.76562,204.23323 M 158.43164,201.12776 C 158.43164,201.92464 158.59961,202.52034 158.93555,202.91487 C 159.27148,203.30940 159.66797,203.50667 160.12500,203.50667 C 160.58593,203.50667 160.97656,203.31917 161.29688,202.94417 C 161.62109,202.56526 161.78320,201.98909 161.78320,201.21565 C 161.78320,200.36409 161.61914,199.73909 161.29102,199.34065 C 160.96289,198.94222 160.55859,198.74300 160.07812,198.74300 C 159.60937,198.74300 159.21679,198.93441!
  158.90039,199.31721 C 158.58789,199.70003 158.43164,200.30355!
  158.431
64,201.12776 M 164.39648,204.23323 L 164.39648,198.01057 L 165.34570,198.01057 L 165.34570,198.95393 C 165.58789,198.51253 165.81054,198.22152 166.01367,198.08089 C 166.22070,197.94027 166.44726,197.86996 166.69336,197.86995 C 167.04882,197.86996 167.41015,197.98324 167.77734,198.20979 L 167.41406,199.18831 C 167.15625,199.03597 166.89843,198.95980 166.64062,198.95979 C 166.41015,198.95980 166.20312,199.03011 166.01953,199.17073 C 165.83594,199.30745 165.70508,199.49886 165.62695,199.74495 C 165.50976,200.11995 165.45117,200.53011 165.45117,200.97542 L 165.45117,204.23323 L 164.39648,204.23323 M 168.42188,196.85628 L 168.42188,195.64339 L 169.47656,195.64339 L 169.47656,196.85628 L 168.42188,196.85628 M 168.42188,204.23323 L 168.42188,198.01057 L 169.47656,198.01057 L 169.47656,204.23323 L 168.42188,204.23323 M 175.34766,202.22932 L 176.43750,202.36409 C 176.26562,203.00081 175.94726,203.49495 175.48242,203.84651 C 175.01757,204.19807 174.42382,204.37386 173.70117,204.37386 !
 C 172.79101,204.37386 172.06836,204.09456 171.53320,203.53596 C 171.00195,202.97347 170.73633,202.18636 170.73633,201.17464 C 170.73633,200.12777 171.00586,199.31527 171.54492,198.73714 C 172.08398,198.15902 172.78320,197.86996 173.64258,197.86995 C 174.47461,197.86996 175.15429,198.15316 175.68164,198.71956 C 176.20898,199.28597 176.47265,200.08284 176.47266,201.11018 C 176.47265,201.17269 176.47070,201.26644 176.46680,201.39143 L 171.82617,201.39143 C 171.86523,202.07503 172.05859,202.59847 172.40625,202.96175 C 172.75390,203.32503 173.18750,203.50667 173.70703,203.50667 C 174.09375,203.50667 174.42382,203.40511 174.69727,203.20198 C 174.97070,202.99886 175.18750,202.67464 175.34766,202.22932 M 171.88477,200.52425 L 175.35938,200.52425 C 175.31249,200.00081 175.17968,199.60824 174.96094,199.34651 C 174.62500,198.94027 174.18945,198.73714 173.65430,198.73714 C 173.16992,198.73714 172.76172,198.89925 172.42969,199.22346 C 172.10156,199.54769 171.91992,199.98128 171.88477,20!
 0.52425 M 177.76758,204.23323 L 177.76758,198.01057 L 178.7168!
 0,198.01
057 L 178.71680,198.89534 C 179.17383,198.21175 179.83398,197.86996 180.69727,197.86995 C 181.07226,197.86996 181.41601,197.93832 181.72852,198.07503 C 182.04492,198.20785 182.28124,198.38363 182.43750,198.60237 C 182.59374,198.82113 182.70312,199.08089 182.76562,199.38167 C 182.80468,199.57699 182.82421,199.91878 182.82422,200.40706 L 182.82422,204.23323 L 181.76953,204.23323 L 181.76953,200.44807 C 181.76953,200.01839 181.72851,199.69808 181.64648,199.48714 C 181.56445,199.27230 181.41796,199.10238 181.20703,198.97737 C 181.00000,198.84847 180.75586,198.78402 180.47461,198.78401 C 180.02539,198.78402 179.63672,198.92660 179.30859,199.21175 C 178.98437,199.49691 178.82226,200.03792 178.82227,200.83479 L 178.82227,204.23323 L 177.76758,204.23323" />
-  <path
-     id="text1891"
-     style="font-size:12.000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:120.00000%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Arial"
-     d="M 28.889649,243.04372 L 28.889649,234.45387 L 29.944337,234.45387 L 29.944337,237.53590 C 30.436522,236.96560 31.057615,236.68044 31.807618,236.68044 C 32.268552,236.68044 32.668942,236.77224 33.008790,236.95583 C 33.348629,237.13552 33.590816,237.38552 33.735353,237.70583 C 33.883784,238.02614 33.958003,238.49099 33.958009,239.10036 L 33.958009,243.04372 L 32.903321,243.04372 L 32.903321,239.10036 C 32.903317,238.57302 32.788082,238.19021 32.557618,237.95192 C 32.331051,237.70974 32.008786,237.58864 31.590821,237.58864 C 31.278318,237.58864 30.983397,237.67067 30.706056,237.83473 C 30.432616,237.99489 30.237304,238.21364 30.120118,238.49098 C 30.002929,238.76833 29.944335,239.15114 29.944337,239.63942 L 29.944337,243.04372 L 28.889649,243.04372 M 37.872071,242.10036 L 38.024415,243.03200 C 37.727537,243.09450 37.461912,243.12575 37.227540,243.12575 C 36.844725,243.12575 36.547851,243.06520 36.336915,242.94411 C 36.125976,242.82301 35.977539,242.66481 35.891603,242.!
 46950 C 35.805664,242.27028 35.762695,241.85426 35.762696,241.22145 L 35.762696,237.64137 L 34.989259,237.64137 L 34.989259,236.82106 L 35.762696,236.82106 L 35.762696,235.28004 L 36.811524,234.64723 L 36.811524,236.82106 L 37.872071,236.82106 L 37.872071,237.64137 L 36.811524,237.64137 L 36.811524,241.28004 C 36.811522,241.58083 36.829101,241.77419 36.864259,241.86012 C 36.903319,241.94606 36.963866,242.01442 37.045899,242.06520 C 37.131835,242.11598 37.252928,242.14137 37.409181,242.14137 C 37.526365,242.14137 37.680662,242.12770 37.872071,242.10036 M 41.200196,242.10036 L 41.352540,243.03200 C 41.055662,243.09450 40.790037,243.12575 40.555665,243.12575 C 40.172850,243.12575 39.875976,243.06520 39.665040,242.94411 C 39.454101,242.82301 39.305664,242.66481 39.219728,242.46950 C 39.133789,242.27028 39.090820,241.85426 39.090821,241.22145 L 39.090821,237.64137 L 38.317384,237.64137 L 38.317384,236.82106 L 39.090821,236.82106 L 39.090821,235.28004 L 40.139649,234.64723 L 40.1!
 39649,236.82106 L 41.200196,236.82106 L 41.200196,237.64137 L !
 40.13964
9,237.64137 L 40.139649,241.28004 C 40.139647,241.58083 40.157226,241.77419 40.192384,241.86012 C 40.231444,241.94606 40.291991,242.01442 40.374024,242.06520 C 40.459960,242.11598 40.581053,242.14137 40.737306,242.14137 C 40.854490,242.14137 41.008787,242.12770 41.200196,242.10036 M 42.225587,245.42848 L 42.225587,236.82106 L 43.186524,236.82106 L 43.186524,237.62965 C 43.413085,237.31325 43.668944,237.07693 43.954103,236.92067 C 44.239256,236.76052 44.584959,236.68044 44.991212,236.68044 C 45.522458,236.68044 45.991207,236.81716 46.397462,237.09059 C 46.803707,237.36403 47.110347,237.75075 47.317384,238.25075 C 47.524409,238.74685 47.627924,239.29177 47.627931,239.88551 C 47.627924,240.52223 47.512690,241.09645 47.282228,241.60817 C 47.055659,242.11598 46.723629,242.50661 46.286134,242.78004 C 45.852536,243.04958 45.395505,243.18434 44.915040,243.18434 C 44.563474,243.18434 44.247068,243.11012 43.965821,242.96169 C 43.688475,242.81325 43.459960,242.62575 43.280274,242.39919!
  L 43.280274,245.42848 L 42.225587,245.42848 M 43.180665,239.96754 C 43.180663,240.76833 43.342773,241.36012 43.666993,241.74294 C 43.991209,242.12575 44.383787,242.31715 44.844728,242.31715 C 45.313474,242.31715 45.713864,242.11989 46.045899,241.72536 C 46.381832,241.32692 46.549801,240.71169 46.549806,239.87965 C 46.549801,239.08669 46.385738,238.49294 46.057618,238.09840 C 45.733395,237.70388 45.344724,237.50661 44.891603,237.50661 C 44.442381,237.50661 44.043944,237.71755 43.696290,238.13942 C 43.352538,238.55739 43.180663,239.16677 43.180665,239.96754 M 49.198243,238.02223 L 49.198243,236.82106 L 50.399415,236.82106 L 50.399415,238.02223 L 49.198243,238.02223 M 49.198243,243.04372 L 49.198243,241.84254 L 50.399415,241.84254 L 50.399415,243.04372 L 49.198243,243.04372 M 51.442384,243.19020 L 53.932618,234.30739 L 54.776368,234.30739 L 52.291993,243.19020 L 51.442384,243.19020 M 54.770509,243.19020 L 57.260743,234.30739 L 58.104493,234.30739 L 55.620118,243.19020 L 54.77!
 0509,243.19020 M 62.926759,243.04372 L 62.926759,242.25856 C 6!
 2.532223
,242.87575 61.952146,243.18434 61.186524,243.18434 C 60.690428,243.18434 60.233397,243.04762 59.815431,242.77419 C 59.401367,242.50075 59.079102,242.11989 58.848634,241.63161 C 58.622071,241.13942 58.508790,240.57497 58.508790,239.93825 C 58.508790,239.31716 58.612305,238.75466 58.819337,238.25075 C 59.026367,237.74294 59.336914,237.35427 59.750978,237.08473 C 60.165038,236.81521 60.627928,236.68044 61.139649,236.68044 C 61.514646,236.68044 61.848630,236.76052 62.141603,236.92067 C 62.434567,237.07693 62.672848,237.28200 62.856446,237.53590 L 62.856446,234.45387 L 63.905274,234.45387 L 63.905274,243.04372 L 62.926759,243.04372 M 59.592774,239.93825 C 59.592773,240.73512 59.760742,241.33083 60.096681,241.72536 C 60.432616,242.11989 60.829100,242.31715 61.286134,242.31715 C 61.747068,242.31715 62.137692,242.12965 62.458009,241.75465 C 62.782223,241.37575 62.944332,240.79958 62.944337,240.02614 C 62.944332,239.17458 62.780270,238.54958 62.452149,238.15114 C 62.124020,237.75271 !
 61.719724,237.55349 61.239259,237.55348 C 60.770506,237.55349 60.377928,237.74489 60.061524,238.12770 C 59.749023,238.51052 59.592773,239.11403 59.592774,239.93825 M 69.629884,242.27614 C 69.239254,242.60817 68.862302,242.84254 68.499024,242.97926 C 68.139646,243.11598 67.752928,243.18434 67.338868,243.18434 C 66.655273,243.18434 66.129882,243.01833 65.762696,242.68629 C 65.395508,242.35036 65.211915,241.92262 65.211915,241.40309 C 65.211915,241.09841 65.280274,240.82106 65.416993,240.57106 C 65.557617,240.31716 65.739258,240.11403 65.961915,239.96169 C 66.188476,239.80934 66.442382,239.69411 66.723634,239.61598 C 66.930663,239.56130 67.243163,239.50856 67.661134,239.45778 C 68.512693,239.35622 69.139645,239.23513 69.541993,239.09450 C 69.545895,238.94997 69.547848,238.85817 69.547853,238.81911 C 69.547848,238.38942 69.448239,238.08669 69.249024,237.91090 C 68.979489,237.67263 68.579099,237.55349 68.047853,237.55348 C 67.551756,237.55349 67.184569,237.64138 66.946290,237.81!
 715 C 66.711913,237.98903 66.538085,238.29567 66.424806,238.73!
 708 L 65
.393556,238.59645 C 65.487305,238.15505 65.641602,237.79958 65.856446,237.53004 C 66.071289,237.25661 66.381835,237.04763 66.788087,236.90309 C 67.194335,236.75466 67.665037,236.68044 68.200196,236.68044 C 68.731442,236.68044 69.163083,236.74294 69.495118,236.86794 C 69.827144,236.99294 70.071285,237.15114 70.227540,237.34254 C 70.383784,237.53005 70.493159,237.76833 70.555665,238.05739 C 70.590815,238.23708 70.608394,238.56130 70.608399,239.03004 L 70.608399,240.43629 C 70.608394,241.41676 70.629878,242.03786 70.672853,242.29958 C 70.719722,242.55739 70.809565,242.80544 70.942384,243.04372 L 69.840821,243.04372 C 69.731441,242.82497 69.661129,242.56911 69.629884,242.27614 M 69.541993,239.92067 C 69.159176,240.07692 68.584958,240.20973 67.819337,240.31911 C 67.385741,240.38161 67.079100,240.45192 66.899415,240.53004 C 66.719726,240.60817 66.581054,240.72341 66.483399,240.87575 C 66.385742,241.02419 66.336914,241.19020 66.336915,241.37379 C 66.336914,241.65505 66.442382,241.8!
 8942 66.653321,242.07692 C 66.868163,242.26442 67.180663,242.35817 67.590821,242.35817 C 67.997068,242.35817 68.358396,242.27028 68.674806,242.09450 C 68.991208,241.91481 69.223629,241.67067 69.372071,241.36208 C 69.485348,241.12380 69.541988,240.77223 69.541993,240.30739 L 69.541993,239.92067 M 72.237306,243.04372 L 72.237306,236.82106 L 73.186524,236.82106 L 73.186524,237.76442 C 73.428710,237.32302 73.651366,237.03200 73.854493,236.89137 C 74.061522,236.75075 74.288084,236.68044 74.534181,236.68044 C 74.889646,236.68044 75.250974,236.79372 75.618165,237.02028 L 75.254884,237.99879 C 74.997068,237.84646 74.739256,237.77028 74.481446,237.77028 C 74.250975,237.77028 74.043944,237.84060 73.860353,237.98122 C 73.676757,238.11794 73.545897,238.30935 73.467774,238.55544 C 73.350585,238.93044 73.291991,239.34060 73.291993,239.78590 L 73.291993,243.04372 L 72.237306,243.04372 M 76.262696,235.66676 L 76.262696,234.45387 L 77.317384,234.45387 L 77.317384,235.66676 L 76.262696,235.6!
 6676 M 76.262696,243.04372 L 76.262696,236.82106 L 77.317384,2!
 36.82106
 L 77.317384,243.04372 L 76.262696,243.04372 M 78.928712,243.04372 L 78.928712,236.82106 L 79.872071,236.82106 L 79.872071,237.69411 C 80.067382,237.38943 80.327147,237.14528 80.651368,236.96169 C 80.975584,236.77419 81.344724,236.68044 81.758790,236.68044 C 82.219723,236.68044 82.596676,236.77614 82.889649,236.96754 C 83.186519,237.15896 83.395504,237.42653 83.516603,237.77028 C 84.008784,237.04372 84.649409,236.68044 85.438478,236.68044 C 86.055657,236.68044 86.530266,236.85232 86.862306,237.19606 C 87.194328,237.53591 87.360343,238.06130 87.360353,238.77223 L 87.360353,243.04372 L 86.311524,243.04372 L 86.311524,239.12379 C 86.311516,238.70192 86.276360,238.39919 86.206056,238.21559 C 86.139641,238.02810 86.016595,237.87771 85.836915,237.76442 C 85.657220,237.65114 85.446283,237.59450 85.204103,237.59450 C 84.766596,237.59450 84.403315,237.74099 84.114259,238.03395 C 83.825191,238.32302 83.680660,238.78786 83.680665,239.42848 L 83.680665,243.04372 L 82.625978,243.04372 L !
 82.625978,239.00075 C 82.625973,238.53200 82.540036,238.18044 82.368165,237.94606 C 82.196286,237.71169 81.915036,237.59450 81.524415,237.59450 C 81.227537,237.59450 80.952147,237.67263 80.698243,237.82887 C 80.448241,237.98513 80.266600,238.21364 80.153321,238.51442 C 80.040038,238.81521 79.983398,239.24880 79.983399,239.81520 L 79.983399,243.04372 L 78.928712,243.04372 M 93.020509,242.27614 C 92.629879,242.60817 92.252927,242.84254 91.889649,242.97926 C 91.530271,243.11598 91.143553,243.18434 90.729493,243.18434 C 90.045898,243.18434 89.520507,243.01833 89.153321,242.68629 C 88.786133,242.35036 88.602540,241.92262 88.602540,241.40309 C 88.602540,241.09841 88.670899,240.82106 88.807618,240.57106 C 88.948242,240.31716 89.129883,240.11403 89.352540,239.96169 C 89.579101,239.80934 89.833007,239.69411 90.114259,239.61598 C 90.321288,239.56130 90.633788,239.50856 91.051759,239.45778 C 91.903318,239.35622 92.530270,239.23513 92.932618,239.09450 C 92.936520,238.94997 92.938473,23!
 8.85817 92.938478,238.81911 C 92.938473,238.38942 92.838864,23!
 8.08669 
92.639649,237.91090 C 92.370114,237.67263 91.969724,237.55349 91.438478,237.55348 C 90.942381,237.55349 90.575194,237.64138 90.336915,237.81715 C 90.102538,237.98903 89.928710,238.29567 89.815431,238.73708 L 88.784181,238.59645 C 88.877930,238.15505 89.032227,237.79958 89.247071,237.53004 C 89.461914,237.25661 89.772460,237.04763 90.178712,236.90309 C 90.584960,236.75466 91.055662,236.68044 91.590821,236.68044 C 92.122067,236.68044 92.553708,236.74294 92.885743,236.86794 C 93.217769,236.99294 93.461910,237.15114 93.618165,237.34254 C 93.774409,237.53005 93.883784,237.76833 93.946290,238.05739 C 93.981440,238.23708 93.999019,238.56130 93.999024,239.03004 L 93.999024,240.43629 C 93.999019,241.41676 94.020503,242.03786 94.063478,242.29958 C 94.110347,242.55739 94.200190,242.80544 94.333009,243.04372 L 93.231446,243.04372 C 93.122066,242.82497 93.051754,242.56911 93.020509,242.27614 M 92.932618,239.92067 C 92.549801,240.07692 91.975583,240.20973 91.209962,240.31911 C 90.776366,2!
 40.38161 90.469725,240.45192 90.290040,240.53004 C 90.110351,240.60817 89.971679,240.72341 89.874024,240.87575 C 89.776367,241.02419 89.727539,241.19020 89.727540,241.37379 C 89.727539,241.65505 89.833007,241.88942 90.043946,242.07692 C 90.258788,242.26442 90.571288,242.35817 90.981446,242.35817 C 91.387693,242.35817 91.749021,242.27028 92.065431,242.09450 C 92.381833,241.91481 92.614254,241.67067 92.762696,241.36208 C 92.875973,241.12380 92.932613,240.77223 92.932618,240.30739 L 92.932618,239.92067 M 95.217774,241.18629 L 96.260743,241.02223 C 96.319335,241.44020 96.481445,241.76051 96.747071,241.98317 C 97.016600,242.20583 97.391600,242.31715 97.872071,242.31715 C 98.356443,242.31715 98.715817,242.21950 98.950196,242.02419 C 99.184567,241.82497 99.301754,241.59255 99.301759,241.32692 C 99.301754,241.08864 99.198239,240.90114 98.991212,240.76442 C 98.846677,240.67067 98.487302,240.55153 97.913087,240.40700 C 97.139647,240.21169 96.602538,240.04372 96.301759,239.90309 C 96.!
 004883,239.75856 95.778320,239.56130 95.622071,239.31129 C 95.!
 469727,2
39.05739 95.393555,238.77810 95.393556,238.47340 C 95.393555,238.19607 95.456055,237.94021 95.581056,237.70583 C 95.709961,237.46755 95.883789,237.27028 96.102540,237.11403 C 96.266601,236.99294 96.489257,236.89138 96.770509,236.80934 C 97.055663,236.72341 97.360350,236.68044 97.684571,236.68044 C 98.172849,236.68044 98.600583,236.75075 98.967774,236.89137 C 99.338864,237.03200 99.612301,237.22341 99.788087,237.46559 C 99.963863,237.70388 100.08496,238.02419 100.15137,238.42653 L 99.120118,238.56715 C 99.073239,238.24685 98.936520,237.99685 98.709962,237.81715 C 98.487302,237.63747 98.170896,237.54763 97.760743,237.54762 C 97.276366,237.54763 96.930663,237.62771 96.723634,237.78786 C 96.516601,237.94802 96.413085,238.13552 96.413087,238.35036 C 96.413085,238.48708 96.456054,238.61013 96.541993,238.71950 C 96.627929,238.83278 96.762694,238.92653 96.946290,239.00075 C 97.051757,239.03981 97.362303,239.12966 97.877931,239.27028 C 98.624021,239.46950 99.143551,239.63356 99.43652!
 4,239.76247 C 99.733395,239.88747 99.965816,240.07106 100.13379,240.31325 C 100.30175,240.55544 100.38574,240.85622 100.38574,241.21559 C 100.38574,241.56716 100.28222,241.89919 100.07520,242.21169 C 99.872066,242.52028 99.577145,242.76051 99.190431,242.93239 C 98.803708,243.10036 98.366208,243.18434 97.877931,243.18434 C 97.069335,243.18434 96.452148,243.01637 96.026368,242.68044 C 95.604492,242.34450 95.334961,241.84645 95.217774,241.18629 M 105.89941,241.03981 L 106.98926,241.17458 C 106.81738,241.81130 106.49902,242.30544 106.03418,242.65700 C 105.56933,243.00856 104.97558,243.18434 104.25293,243.18434 C 103.34277,243.18434 102.62012,242.90504 102.08496,242.34645 C 101.55371,241.78395 101.28809,240.99684 101.28809,239.98512 C 101.28809,238.93825 101.55762,238.12575 102.09668,237.54762 C 102.63574,236.96950 103.33496,236.68044 104.19434,236.68044 C 105.02636,236.68044 105.70605,236.96364 106.23340,237.53004 C 106.76074,238.09646 107.02441,238.89333 107.02441,239.92067 C !
 107.02441,239.98317 107.02245,240.07692 107.01855,240.20192 L !
 102.3779
3,240.20192 C 102.41699,240.88552 102.61035,241.40895 102.95801,241.77223 C 103.30566,242.13551 103.73925,242.31715 104.25879,242.31715 C 104.64550,242.31715 104.97558,242.21559 105.24902,242.01247 C 105.52246,241.80934 105.73925,241.48512 105.89941,241.03981 M 102.43652,239.33473 L 105.91113,239.33473 C 105.86425,238.81130 105.73144,238.41872 105.51270,238.15700 C 105.17675,237.75075 104.74121,237.54763 104.20605,237.54762 C 103.72168,237.54763 103.31347,237.70974 102.98145,238.03395 C 102.65332,238.35817 102.47168,238.79177 102.43652,239.33473 M 108.31934,243.04372 L 108.31934,236.82106 L 109.26855,236.82106 L 109.26855,237.70583 C 109.72558,237.02224 110.38574,236.68044 111.24902,236.68044 C 111.62402,236.68044 111.96777,236.74880 112.28027,236.88551 C 112.59667,237.01833 112.83300,237.19411 112.98926,237.41286 C 113.14550,237.63161 113.25488,237.89138 113.31738,238.19215 C 113.35644,238.38747 113.37597,238.72927 113.37598,239.21754 L 113.37598,243.04372 L 112.32129,243.0!
 4372 L 112.32129,239.25856 C 112.32128,238.82888 112.28027,238.50856 112.19824,238.29762 C 112.11621,238.08278 111.96972,237.91286 111.75879,237.78786 C 111.55175,237.65896 111.30761,237.59450 111.02637,237.59450 C 110.57715,237.59450 110.18847,237.73708 109.86035,238.02223 C 109.53613,238.30739 109.37402,238.84841 109.37402,239.64528 L 109.37402,243.04372 L 108.31934,243.04372 M 115.29785,243.04372 L 115.29785,241.84254 L 116.49902,241.84254 L 116.49902,243.04372 L 115.29785,243.04372 M 119.29980,243.04372 L 118.32129,243.04372 L 118.32129,234.45387 L 119.37598,234.45387 L 119.37598,237.51833 C 119.82129,236.95974 120.38965,236.68044 121.08105,236.68044 C 121.46386,236.68044 121.82519,236.75857 122.16504,236.91481 C 122.50878,237.06716 122.79003,237.28396 123.00879,237.56520 C 123.23144,237.84255 123.40527,238.17849 123.53027,238.57301 C 123.65527,238.96755 123.71777,239.38942 123.71777,239.83864 C 123.71777,240.90505 123.45410,241.72926 122.92676,242.31129 C 122.39941,242!
 .89333 121.76660,243.18434 121.02832,243.18434 C 120.29394,243!
 .18434 1
19.71777,242.87770 119.29980,242.26442 L 119.29980,243.04372 M 119.28809,239.88551 C 119.28808,240.63161 119.38965,241.17067 119.59277,241.50270 C 119.92480,242.04567 120.37402,242.31715 120.94043,242.31715 C 121.40136,242.31715 121.79980,242.11794 122.13574,241.71950 C 122.47167,241.31716 122.63964,240.71950 122.63965,239.92653 C 122.63964,239.11403 122.47753,238.51442 122.15332,238.12770 C 121.83300,237.74099 121.44433,237.54763 120.98730,237.54762 C 120.52636,237.54763 120.12793,237.74880 119.79199,238.15114 C 119.45605,238.54958 119.28808,239.12770 119.28809,239.88551 M 129.26660,241.03981 L 130.35645,241.17458 C 130.18456,241.81130 129.86621,242.30544 129.40137,242.65700 C 128.93652,243.00856 128.34277,243.18434 127.62012,243.18434 C 126.70996,243.18434 125.98730,242.90504 125.45215,242.34645 C 124.92090,241.78395 124.65527,240.99684 124.65527,239.98512 C 124.65527,238.93825 124.92480,238.12575 125.46387,237.54762 C 126.00293,236.96950 126.70215,236.68044 127.56152,236.!
 68044 C 128.39355,236.68044 129.07324,236.96364 129.60059,237.53004 C 130.12792,238.09646 130.39160,238.89333 130.39160,239.92067 C 130.39160,239.98317 130.38964,240.07692 130.38574,240.20192 L 125.74512,240.20192 C 125.78418,240.88552 125.97754,241.40895 126.32520,241.77223 C 126.67285,242.13551 127.10644,242.31715 127.62598,242.31715 C 128.01269,242.31715 128.34277,242.21559 128.61621,242.01247 C 128.88964,241.80934 129.10644,241.48512 129.26660,241.03981 M 125.80371,239.33473 L 129.27832,239.33473 C 129.23144,238.81130 129.09863,238.41872 128.87988,238.15700 C 128.54394,237.75075 128.10839,237.54763 127.57324,237.54762 C 127.08886,237.54763 126.68066,237.70974 126.34863,238.03395 C 126.02051,238.35817 125.83887,238.79177 125.80371,239.33473 M 131.67480,243.04372 L 131.67480,236.82106 L 132.62402,236.82106 L 132.62402,237.76442 C 132.86621,237.32302 133.08886,237.03200 133.29199,236.89137 C 133.49902,236.75075 133.72558,236.68044 133.97168,236.68044 C 134.32715,236.68044 !
 134.68847,236.79372 135.05566,237.02028 L 134.69238,237.99879 !
 C 134.43
457,237.84646 134.17675,237.77028 133.91895,237.77028 C 133.68847,237.77028 133.48144,237.84060 133.29785,237.98122 C 133.11426,238.11794 132.98340,238.30935 132.90527,238.55544 C 132.78808,238.93044 132.72949,239.34060 132.72949,239.78590 L 132.72949,243.04372 L 131.67480,243.04372 M 135.67090,243.04372 L 135.67090,234.45387 L 136.72559,234.45387 L 136.72559,243.04372 L 135.67090,243.04372 M 138.37207,235.66676 L 138.37207,234.45387 L 139.42676,234.45387 L 139.42676,235.66676 L 138.37207,235.66676 M 138.37207,243.04372 L 138.37207,236.82106 L 139.42676,236.82106 L 139.42676,243.04372 L 138.37207,243.04372 M 140.64551,239.93239 C 140.64551,238.78005 140.96582,237.92653 141.60645,237.37184 C 142.14160,236.91091 142.79394,236.68044 143.56348,236.68044 C 144.41894,236.68044 145.11816,236.96169 145.66113,237.52419 C 146.20410,238.08278 146.47558,238.85622 146.47559,239.84450 C 146.47558,240.64528 146.35449,241.27614 146.11230,241.73708 C 145.87402,242.19411 145.52441,242.54958 1!
 45.06348,242.80348 C 144.60644,243.05739 144.10644,243.18434 143.56348,243.18434 C 142.69238,243.18434 141.98730,242.90504 141.44824,242.34645 C 140.91309,241.78786 140.64551,240.98317 140.64551,239.93239 M 141.72949,239.93239 C 141.72949,240.72927 141.90332,241.32692 142.25098,241.72536 C 142.59863,242.11989 143.03613,242.31715 143.56348,242.31715 C 144.08691,242.31715 144.52246,242.11794 144.87012,241.71950 C 145.21777,241.32106 145.39160,240.71364 145.39160,239.89723 C 145.39160,239.12770 145.21582,238.54567 144.86426,238.15114 C 144.51660,237.75271 144.08300,237.55349 143.56348,237.55348 C 143.03613,237.55349 142.59863,237.75075 142.25098,238.14528 C 141.90332,238.53981 141.72949,239.13552 141.72949,239.93239 M 147.29590,241.18629 L 148.33887,241.02223 C 148.39746,241.44020 148.55957,241.76051 148.82520,241.98317 C 149.09472,242.20583 149.46972,242.31715 149.95020,242.31715 C 150.43457,242.31715 150.79394,242.21950 151.02832,242.02419 C 151.26269,241.82497 151.37988,241!
 .59255 151.37988,241.32692 C 151.37988,241.08864 151.27636,240!
 .90114 1
51.06934,240.76442 C 150.92480,240.67067 150.56543,240.55153 149.99121,240.40700 C 149.21777,240.21169 148.68066,240.04372 148.37988,239.90309 C 148.08301,239.75856 147.85644,239.56130 147.70020,239.31129 C 147.54785,239.05739 147.47168,238.77810 147.47168,238.47340 C 147.47168,238.19607 147.53418,237.94021 147.65918,237.70583 C 147.78809,237.46755 147.96191,237.27028 148.18066,237.11403 C 148.34473,236.99294 148.56738,236.89138 148.84863,236.80934 C 149.13379,236.72341 149.43847,236.68044 149.76270,236.68044 C 150.25097,236.68044 150.67871,236.75075 151.04590,236.89137 C 151.41699,237.03200 151.69042,237.22341 151.86621,237.46559 C 152.04199,237.70388 152.16308,238.02419 152.22949,238.42653 L 151.19824,238.56715 C 151.15136,238.24685 151.01464,237.99685 150.78809,237.81715 C 150.56543,237.63747 150.24902,237.54763 149.83887,237.54762 C 149.35449,237.54763 149.00879,237.62771 148.80176,237.78786 C 148.59472,237.94802 148.49121,238.13552 148.49121,238.35036 C 148.49121,238.48!
 708 148.53418,238.61013 148.62012,238.71950 C 148.70605,238.83278 148.84082,238.92653 149.02441,239.00075 C 149.12988,239.03981 149.44043,239.12966 149.95605,239.27028 C 150.70214,239.46950 151.22168,239.63356 151.51465,239.76247 C 151.81152,239.88747 152.04394,240.07106 152.21191,240.31325 C 152.37988,240.55544 152.46386,240.85622 152.46387,241.21559 C 152.46386,241.56716 152.36035,241.89919 152.15332,242.21169 C 151.95019,242.52028 151.65527,242.76051 151.26855,242.93239 C 150.88183,243.10036 150.44433,243.18434 149.95605,243.18434 C 149.14746,243.18434 148.53027,243.01637 148.10449,242.68044 C 147.68262,242.34450 147.41309,241.84645 147.29590,241.18629 M 154.01660,243.04372 L 154.01660,241.84254 L 155.21777,241.84254 L 155.21777,243.04372 L 154.01660,243.04372 M 161.08301,243.04372 L 161.08301,242.25856 C 160.68847,242.87575 160.10839,243.18434 159.34277,243.18434 C 158.84668,243.18434 158.38965,243.04762 157.97168,242.77419 C 157.55762,242.50075 157.23535,242.11989 157.!
 00488,241.63161 C 156.77832,241.13942 156.66504,240.57497 156.!
 66504,23
9.93825 C 156.66504,239.31716 156.76855,238.75466 156.97559,238.25075 C 157.18262,237.74294 157.49316,237.35427 157.90723,237.08473 C 158.32129,236.81521 158.78418,236.68044 159.29590,236.68044 C 159.67090,236.68044 160.00488,236.76052 160.29785,236.92067 C 160.59082,237.07693 160.82910,237.28200 161.01270,237.53590 L 161.01270,234.45387 L 162.06152,234.45387 L 162.06152,243.04372 L 161.08301,243.04372 M 157.74902,239.93825 C 157.74902,240.73512 157.91699,241.33083 158.25293,241.72536 C 158.58886,242.11989 158.98535,242.31715 159.44238,242.31715 C 159.90332,242.31715 160.29394,242.12965 160.61426,241.75465 C 160.93847,241.37575 161.10058,240.79958 161.10059,240.02614 C 161.10058,239.17458 160.93652,238.54958 160.60840,238.15114 C 160.28027,237.75271 159.87597,237.55349 159.39551,237.55348 C 158.92676,237.55349 158.53418,237.74489 158.21777,238.12770 C 157.90527,238.51052 157.74902,239.11403 157.74902,239.93825 M 167.98535,241.03981 L 169.07520,241.17458 C 168.90331,241.81130!
  168.58496,242.30544 168.12012,242.65700 C 167.65527,243.00856 167.06152,243.18434 166.33887,243.18434 C 165.42871,243.18434 164.70605,242.90504 164.17090,242.34645 C 163.63965,241.78395 163.37402,240.99684 163.37402,239.98512 C 163.37402,238.93825 163.64355,238.12575 164.18262,237.54762 C 164.72168,236.96950 165.42090,236.68044 166.28027,236.68044 C 167.11230,236.68044 167.79199,236.96364 168.31934,237.53004 C 168.84667,238.09646 169.11035,238.89333 169.11035,239.92067 C 169.11035,239.98317 169.10839,240.07692 169.10449,240.20192 L 164.46387,240.20192 C 164.50293,240.88552 164.69629,241.40895 165.04395,241.77223 C 165.39160,242.13551 165.82519,242.31715 166.34473,242.31715 C 166.73144,242.31715 167.06152,242.21559 167.33496,242.01247 C 167.60839,241.80934 167.82519,241.48512 167.98535,241.03981 M 164.52246,239.33473 L 167.99707,239.33473 C 167.95019,238.81130 167.81738,238.41872 167.59863,238.15700 C 167.26269,237.75075 166.82714,237.54763 166.29199,237.54762 C 165.80761,2!
 37.54763 165.39941,237.70974 165.06738,238.03395 C 164.73926,2!
 38.35817
 164.55762,238.79177 164.52246,239.33473" />
-  <path
-     id="text1901"
-     style="font-size:12.000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:120.00000%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Arial"
-     d="M 64.655273,219.90671 L 64.655273,218.99265 C 64.170894,219.69577 63.512692,220.04733 62.680664,220.04733 C 62.313474,220.04733 61.969724,219.97702 61.649414,219.83640 C 61.333006,219.69577 61.096678,219.51999 60.940430,219.30905 C 60.788085,219.09421 60.680663,218.83249 60.618164,218.52390 C 60.575195,218.31687 60.553710,217.98874 60.553711,217.53952 L 60.553711,213.68405 L 61.608398,213.68405 L 61.608398,217.13522 C 61.608397,217.68601 61.629881,218.05710 61.672852,218.24850 C 61.739256,218.52585 61.879881,218.74460 62.094727,218.90475 C 62.309568,219.06101 62.575193,219.13913 62.891602,219.13913 C 63.208004,219.13913 63.504879,219.05905 63.782227,218.89890 C 64.059566,218.73483 64.254878,218.51413 64.368164,218.23679 C 64.485347,217.95554 64.543941,217.54929 64.543945,217.01804 L 64.543945,213.68405 L 65.598633,213.68405 L 65.598633,219.90671 L 64.655273,219.90671 M 67.256836,219.90671 L 67.256836,213.68405 L 68.206055,213.68405 L 68.206055,214.56882 C 68.663084,!
 213.88523 69.323239,213.54343 70.186523,213.54343 C 70.561519,213.54343 70.905269,213.61179 71.217773,213.74850 C 71.534175,213.88132 71.770503,214.05710 71.926758,214.27585 C 72.083002,214.49460 72.192377,214.75437 72.254883,215.05515 C 72.293939,215.25046 72.313471,215.59226 72.313477,216.08054 L 72.313477,219.90671 L 71.258789,219.90671 L 71.258789,216.12155 C 71.258784,215.69187 71.217769,215.37156 71.135742,215.16061 C 71.053706,214.94578 70.907222,214.77585 70.696289,214.65085 C 70.489254,214.52195 70.245113,214.45749 69.963867,214.45749 C 69.514645,214.45749 69.125974,214.60007 68.797852,214.88522 C 68.473631,215.17038 68.311522,215.71140 68.311523,216.50827 L 68.311523,219.90671 L 67.256836,219.90671 M 77.973633,219.90671 L 77.973633,219.12155 C 77.579097,219.73874 76.999020,220.04733 76.233398,220.04733 C 75.737302,220.04733 75.280271,219.91061 74.862305,219.63718 C 74.448241,219.36374 74.125976,218.98288 73.895508,218.49460 C 73.668945,218.00241 73.555664,217.4379!
 6 73.555664,216.80124 C 73.555664,216.18015 73.659179,215.6176!
 5 73.866
211,215.11374 C 74.073241,214.60593 74.383788,214.21726 74.797852,213.94772 C 75.211912,213.67820 75.674802,213.54343 76.186523,213.54343 C 76.561520,213.54343 76.895504,213.62351 77.188477,213.78366 C 77.481441,213.93992 77.719722,214.14499 77.903320,214.39890 L 77.903320,211.31686 L 78.952148,211.31686 L 78.952148,219.90671 L 77.973633,219.90671 M 74.639648,216.80124 C 74.639647,217.59812 74.807616,218.19382 75.143555,218.58835 C 75.479490,218.98288 75.875974,219.18015 76.333008,219.18015 C 76.793942,219.18015 77.184566,218.99265 77.504883,218.61765 C 77.829097,218.23874 77.991206,217.66257 77.991211,216.88913 C 77.991206,216.03757 77.827144,215.41257 77.499023,215.01413 C 77.170894,214.61570 76.766598,214.41648 76.286133,214.41647 C 75.817380,214.41648 75.424802,214.60788 75.108398,214.99069 C 74.795897,215.37351 74.639647,215.97702 74.639648,216.80124 M 84.875977,217.90280 L 85.965820,218.03757 C 85.793939,218.67429 85.475580,219.16843 85.010742,219.51999 C 84.545894,219!
 .87155 83.952144,220.04733 83.229492,220.04733 C 82.319333,220.04733 81.596678,219.76804 81.061523,219.20944 C 80.530273,218.64694 80.264648,217.85983 80.264648,216.84811 C 80.264648,215.80124 80.534179,214.98874 81.073242,214.41061 C 81.612303,213.83250 82.311521,213.54343 83.170898,213.54343 C 84.002926,213.54343 84.682612,213.82664 85.209961,214.39304 C 85.737299,214.95945 86.000970,215.75632 86.000977,216.78366 C 86.000970,216.84616 85.999017,216.93991 85.995117,217.06491 L 81.354492,217.06491 C 81.393553,217.74851 81.586912,218.27194 81.934570,218.63522 C 82.282224,218.99851 82.715817,219.18015 83.235352,219.18015 C 83.622067,219.18015 83.952144,219.07858 84.225586,218.87546 C 84.499019,218.67233 84.715815,218.34812 84.875977,217.90280 M 81.413086,216.19772 L 84.887695,216.19772 C 84.840815,215.67429 84.708003,215.28171 84.489258,215.01999 C 84.153316,214.61374 83.717770,214.41062 83.182617,214.41061 C 82.698239,214.41062 82.290037,214.57273 81.958008,214.89694 C 81.62!
 9881,215.22117 81.448241,215.65476 81.413086,216.19772 M 87.28!
 4180,219
.90671 L 87.284180,213.68405 L 88.233398,213.68405 L 88.233398,214.62741 C 88.475584,214.18601 88.698240,213.89500 88.901367,213.75436 C 89.108396,213.61375 89.334958,213.54343 89.581055,213.54343 C 89.936520,213.54343 90.297848,213.65671 90.665039,213.88327 L 90.301758,214.86179 C 90.043942,214.70945 89.786130,214.63328 89.528320,214.63327 C 89.297849,214.63328 89.090818,214.70359 88.907227,214.84421 C 88.723631,214.98093 88.592771,215.17234 88.514648,215.41843 C 88.397459,215.79343 88.338865,216.20359 88.338867,216.64890 L 88.338867,219.90671 L 87.284180,219.90671 M 96.934570,218.96335 L 97.086914,219.89499 C 96.790036,219.95749 96.524411,219.98874 96.290039,219.98874 C 95.907224,219.98874 95.610350,219.92819 95.399414,219.80710 C 95.188475,219.68600 95.040038,219.52780 94.954102,219.33249 C 94.868163,219.13327 94.825194,218.71726 94.825195,218.08444 L 94.825195,214.50436 L 94.051758,214.50436 L 94.051758,213.68405 L 94.825195,213.68405 L 94.825195,212.14304 L 95.874023,21!
 1.51022 L 95.874023,213.68405 L 96.934570,213.68405 L 96.934570,214.50436 L 95.874023,214.50436 L 95.874023,218.14304 C 95.874021,218.44382 95.891600,218.63718 95.926758,218.72311 C 95.965818,218.80905 96.026365,218.87741 96.108398,218.92819 C 96.194334,218.97897 96.315427,219.00436 96.471680,219.00436 C 96.588864,219.00436 96.743161,218.99069 96.934570,218.96335 M 97.959961,219.90671 L 97.959961,211.31686 L 99.014648,211.31686 L 99.014648,214.39890 C 99.506834,213.82859 100.12793,213.54343 100.87793,213.54343 C 101.33886,213.54343 101.73925,213.63523 102.07910,213.81882 C 102.41894,213.99851 102.66113,214.24851 102.80566,214.56882 C 102.95410,214.88913 103.02831,215.35398 103.02832,215.96335 L 103.02832,219.90671 L 101.97363,219.90671 L 101.97363,215.96335 C 101.97363,215.43601 101.85839,215.05320 101.62793,214.81491 C 101.40136,214.57273 101.07910,214.45164 100.66113,214.45163 C 100.34863,214.45164 100.05371,214.53367 99.776367,214.69772 C 99.502927,214.85788 99.307615,21!
 5.07663 99.190430,215.35397 C 99.073240,215.63132 99.014647,21!
 6.01413 
99.014648,216.50241 L 99.014648,219.90671 L 97.959961,219.90671 M 108.89941,217.90280 L 109.98926,218.03757 C 109.81738,218.67429 109.49902,219.16843 109.03418,219.51999 C 108.56933,219.87155 107.97558,220.04733 107.25293,220.04733 C 106.34277,220.04733 105.62012,219.76804 105.08496,219.20944 C 104.55371,218.64694 104.28809,217.85983 104.28809,216.84811 C 104.28809,215.80124 104.55762,214.98874 105.09668,214.41061 C 105.63574,213.83250 106.33496,213.54343 107.19434,213.54343 C 108.02636,213.54343 108.70605,213.82664 109.23340,214.39304 C 109.76074,214.95945 110.02441,215.75632 110.02441,216.78366 C 110.02441,216.84616 110.02245,216.93991 110.01855,217.06491 L 105.37793,217.06491 C 105.41699,217.74851 105.61035,218.27194 105.95801,218.63522 C 106.30566,218.99851 106.73925,219.18015 107.25879,219.18015 C 107.64550,219.18015 107.97558,219.07858 108.24902,218.87546 C 108.52246,218.67233 108.73925,218.34812 108.89941,217.90280 M 105.43652,216.19772 L 108.91113,216.19772 C 108.864!
 25,215.67429 108.73144,215.28171 108.51270,215.01999 C 108.17675,214.61374 107.74121,214.41062 107.20605,214.41061 C 106.72168,214.41062 106.31347,214.57273 105.98145,214.89694 C 105.65332,215.22117 105.47168,215.65476 105.43652,216.19772 M 118.80176,216.53757 L 118.80176,215.52975 L 122.44043,215.52390 L 122.44043,218.71140 C 121.88183,219.15671 121.30566,219.49265 120.71191,219.71921 C 120.11816,219.94186 119.50878,220.05319 118.88379,220.05319 C 118.04003,220.05319 117.27246,219.87350 116.58105,219.51413 C 115.89355,219.15085 115.37402,218.62741 115.02246,217.94382 C 114.67090,217.26023 114.49512,216.49655 114.49512,215.65280 C 114.49512,214.81687 114.66894,214.03757 115.01660,213.31491 C 115.36816,212.58836 115.87207,212.04929 116.52832,211.69772 C 117.18457,211.34617 117.94043,211.17039 118.79590,211.17038 C 119.41699,211.17039 119.97753,211.27195 120.47754,211.47507 C 120.98144,211.67429 121.37597,211.95359 121.66113,212.31296 C 121.94628,212.67234 122.16308,213.14109!
  122.31152,213.71921 L 121.28613,214.00046 C 121.15722,213.562!
 96 120.9
9706,213.21921 120.80566,212.96921 C 120.61425,212.71921 120.34081,212.52000 119.98535,212.37155 C 119.62988,212.21922 119.23535,212.14304 118.80176,212.14304 C 118.28222,212.14304 117.83300,212.22312 117.45410,212.38327 C 117.07519,212.53953 116.76855,212.74656 116.53418,213.00436 C 116.30371,213.26218 116.12402,213.54539 115.99512,213.85397 C 115.77637,214.38523 115.66699,214.96140 115.66699,215.58249 C 115.66699,216.34812 115.79785,216.98874 116.05957,217.50436 C 116.32519,218.01999 116.70996,218.40280 117.21387,218.65280 C 117.71777,218.90280 118.25293,219.02780 118.81934,219.02780 C 119.31152,219.02780 119.79199,218.93405 120.26074,218.74655 C 120.72949,218.55515 121.08495,218.35202 121.32715,218.13718 L 121.32715,216.53757 L 118.80176,216.53757 M 124.11035,219.90671 L 124.11035,211.31686 L 127.35059,211.31686 C 127.92089,211.31687 128.35644,211.34422 128.65723,211.39890 C 129.07910,211.46922 129.43261,211.60398 129.71777,211.80319 C 130.00292,211.99851 130.23144,212.27!
 390 130.40332,212.62936 C 130.57909,212.98484 130.66698,213.37546 130.66699,213.80124 C 130.66698,214.53171 130.43456,215.15085 129.96973,215.65866 C 129.50488,216.16257 128.66503,216.41452 127.45020,216.41452 L 125.24707,216.41452 L 125.24707,219.90671 L 124.11035,219.90671 M 125.24707,215.40085 L 127.46777,215.40085 C 128.20214,215.40085 128.72363,215.26413 129.03223,214.99069 C 129.34081,214.71726 129.49511,214.33249 129.49512,213.83640 C 129.49511,213.47703 129.40331,213.17039 129.21973,212.91647 C 129.04003,212.65867 128.80175,212.48875 128.50488,212.40671 C 128.31347,212.35593 127.95996,212.33054 127.44434,212.33054 L 125.24707,212.33054 L 125.24707,215.40085 M 132.07910,219.90671 L 132.07910,211.31686 L 133.21582,211.31686 L 133.21582,218.89304 L 137.44629,218.89304 L 137.44629,219.90671 L 132.07910,219.90671" />
   <text
      xml:space="preserve"
-     id="text1987"
-     style="font-size:10.000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:100.00000%;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans"
-     y="173.33527"
-     x="37.657227"><tspan
-       id="tspan1989"
-       y="173.33527"
-       x="37.657227">&quot;Embetterment by Tabs&quot;</tspan></text>
+     id="text1291"
+     style="font-size:14.000000;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;line-height:100.00000%;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans"
+     y="145.53935"
+     x="86.210068"><tspan
+       id="tspan1295"
+       y="145.53935"
+       x="86.210068">Version 0.0.8</tspan></text>
+  <text
+     xml:space="preserve"
+     id="text1297"
+     style="font-size:12.000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:100.00000%;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans"
+     y="158.97377"
+     x="51.608505"><tspan
+       id="tspan2602"
+       y="158.97377"
+       x="51.608505">&quot;It's not like RPN at all&quot;</tspan></text>
+  <text
+     xml:space="preserve"
+     id="text1311"
+     style="font-size:10.000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:120.00000%;writing-mode:lr-tb;text-anchor:end;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans"
+     y="185.84258"
+     x="189.8419"><tspan
+       id="tspan1317"
+       y="185.84258"
+       x="189.8419">? 2004 -2005 by Sudrien</tspan><tspan
+       id="tspan1319"
+       y="197.84258"
+       x="189.8419">under the terms of the</tspan><tspan
+       id="tspan1321"
+       y="209.84258"
+       x="189.8419">GNU General Public License</tspan></text>
+  <text
+     xml:space="preserve"
+     id="text1323"
+     style="font-size:12.000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:100.00000%;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans"
+     y="241.07288"
+     x="26.729599"><tspan
+       id="tspan1325"
+       y="241.07288"
+       x="26.729599">http:\\darimasen.berlios.de</tspan></text>
 </svg>

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-25 05:09:32 UTC (rev 61)
+++ trunk/src/iconmodes.cpp	2005-04-26 06:46:36 UTC (rev 62)
@@ -1,321 +1,7 @@
-/* Darimasen - iconmodes.cpp - Copyright (C) 2004 - 2005 Sudrien, GPL */
-
+/* Darimasen - iconmodes.cpp - Copyright (C) 2004 - 2005 Sudrien, GPL */
+
 #include "iconmodes.h"
 
-/**********************
-
-void DaIconModes::proto_icon::run() const{
-
-  // double checking the file exists
-  Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
-  Gnome::Vfs::Handle read_handle;
-  try{
-    read_handle.open( path + FileName, Gnome::Vfs::OPEN_READ);
-    info = read_handle.get_file_info(
-      Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
-      Gnome::Vfs::FILE_INFO_FORCE_SLOW_MIME_TYPE );
-    }
-  catch(const Gnome::Vfs::exception& ex){
-    std::cout << "Does not exist.\n";
-    return;
-    }
-
-  Gnome::Vfs::Handle exec_handle;
-
-  Glib::ustring exec = getenv("HOME");
-  try{
-    exec += "/Choices/MIME-types/";
-    Glib::ustring tmp = FileMime;
-    exec += tmp.replace(tmp.find("/"),1,"_");
-    exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
-
-    exec += " \""  + path + FileName + "\"";
-    Glib::spawn_command_line_async(exec);
-
-    parent->parent->set_message(exec + " was run.");
-    return;
-
-    }
-  catch(const Gnome::Vfs::exception& ex){
-    }
-
-
-  try{
-    exec = exec.substr(0, exec.rfind("_"));
-    exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
-    exec += " \""  + path + FileName + "\"";
-    Glib::spawn_command_line_async(exec);
-
-    parent->parent->set_message(exec + " was run.");
-    return;
-    }
-  catch(const Gnome::Vfs::exception& ex){
-    }
-
-  try{
-    if (Gnome::Vfs::Mime::can_be_executable(FileMime)){
-      parent->parent->set_message( "Running " + path + FileName);
-      Glib::spawn_command_line_async( path + FileName );
-      return;
-      }
-   }
-      catch(const Glib::Error) {}
-
-  Gtk::MessageDialog dialog(
-    "This mimetype does not have any action associated with it.\n"
-    "should it be opened as text?",
-    false, Gtk::MESSAGE_ERROR, Gtk::BUTTONS_OK_CANCEL);
-
-
-  //Handle the response:
-  switch(dialog.run()) {
-    case(Gtk::RESPONSE_OK):
-      {
-        Glib::ustring exec = getenv("HOME");
-        exec += "/Choices/MIME-types/text";
-        exec += " \""  + path + FileName + "\"";
-        Glib::spawn_command_line_async(exec);
-        parent->parent->set_message(exec + " was opened as a text file.");
-        return;
-        }
-      break;
-    default:
-      parent->parent->set_message("Well, that was usefull.");
-      break;
-    }
-  }
-
-/**********************
-
-void DaIconModes::proto_icon::runAsText() const{
-
-  // double checking the file exists
-  Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
-  Gnome::Vfs::Handle read_handle;
-  try{
-    read_handle.open( path + FileName, Gnome::Vfs::OPEN_READ);
-    info = read_handle.get_file_info(
-      Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
-      Gnome::Vfs::FILE_INFO_FORCE_SLOW_MIME_TYPE );
-    }
-  catch(const Gnome::Vfs::exception& ex){
-    std::cout << "Does not exist.\n";
-    return;
-    }
-
-  Gnome::Vfs::Handle exec_handle;
-  Glib::ustring exec = getenv("HOME");
-  try{
-    exec += "/Choices/MIME-types/text";
-    exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
-    exec += " \""  + path + FileName + "\"";
-    Glib::spawn_command_line_async(exec);
-
-    parent->parent->set_message(exec + " was run.");
-    return;
-    }
-  catch(const Gnome::Vfs::exception& ex){}
-  }
-
-/**********************
-
-void DaIconModes::proto_icon::SetRunAction() const{
-
-  Gnome::Vfs::Handle read_handle;
-  Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
-  Glib::ustring exec_subtype;
-  Glib::ustring exec_mimetype;
-
-  try {
-    read_handle.open( path + FileName, Gnome::Vfs::OPEN_READ);
-    info = read_handle.get_file_info(
-        Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
-        Gnome::Vfs::FILE_INFO_FORCE_SLOW_MIME_TYPE );
-
-    exec_subtype  = info->get_mime_type();
-    exec_subtype  = exec_subtype.replace( exec_subtype.find("/"), 1, "_" );
-    exec_mimetype = exec_subtype.substr( 0, exec_subtype.rfind("_") );
-
-    ChooseActionDialogue * chooseAction;
-    chooseAction = new ChooseActionDialogue(exec_subtype);
-    chooseAction->show();
-    }
-  catch(const Gnome::Vfs::exception& ex) {
-    parent->parent->set_message("Err... Setting error?");
-    }
-  }
-
-/**********************
-
-void DaIconModes::proto_icon::SetPermissions() const{
-
-
-  Gnome::Vfs::Handle read_handle;
-  Glib::RefPtr<Gnome::Vfs::FileInfo> info;
-
-  try {
-    read_handle.open( path + FileName, Gnome::Vfs::OPEN_READ);
-    info = read_handle.get_file_info(Gnome::Vfs::FILE_INFO_GET_ACCESS_RIGHTS);
-
-    SetPermissionsDialogue * setPermissions;
-    setPermissions = new SetPermissionsDialogue(info,path);
-    setPermissions->show();
-    }
-  catch(const Gnome::Vfs::exception& ex) {
-    parent->parent->set_message("Err... Setting error?");
-    }
-  }
-
-/**********************
-
-bool DaIconModes::proto_icon::select(GdkEventButton* event){
-
-  if ((event->type == GDK_BUTTON_PRESS) && (event->button == 1)  && (parent->lastclick < event->time)){
-    parent->lastclick = event->time + 1000;
-    run();
-    return true;
-    }
-  if ((event->type == GDK_BUTTON_PRESS) && (event->button == 3)){
-
-    for( int i=5; i > 0; i--)
-      parent->prompt.items().pop_back();
-
-    parent->prompt.items().push_back(
-      Gtk::Menu_Helpers::MenuElem("Open \"" + FileName + "\"",
-        sigc::mem_fun(*this,&DaIconModes::proto_icon::run)));
-
-    parent->prompt.items().push_back(
-      Gtk::Menu_Helpers::MenuElem("Open as text ",
-        sigc::mem_fun(*this, &DaIconModes::proto_icon::runAsText)));
-
-    parent->prompt.items().push_back(
-      Gtk::Menu_Helpers::SeparatorElem());
-
-    parent->prompt.items().push_back(
-      Gtk::Menu_Helpers::MenuElem("Set Run Action...",
-        sigc::mem_fun(*this, &DaIconModes::proto_icon::SetRunAction)));
-
-    parent->prompt.items().push_back(
-      Gtk::Menu_Helpers::MenuElem("Permissions...",
-        sigc::mem_fun(*this, &DaIconModes::proto_icon::SetPermissions)));
-
-
-    parent->prompt.popup(event->button, event->time);
-    }
-
-
-
-  }
-
-/**********************
-
-DaIconModes::proto_icon::proto_icon(
-      DaIconModes& getParent,
-      Glib::ustring getPath,
-      const Glib::RefPtr<const Gnome::Vfs::FileInfo> getFile) {
-
-  path = getPath;
  parent = &getParent;
-
-  icon = parent->getIcon(getFile->get_mime_type());
-
-  FileName = getFile->get_name();
-
-  if (getFile->get_name().length() > 25){
-    int last = getFile->get_name().rfind(".");
-    if (last != -1){
-      ShortFileName = getFile->get_name().substr(0, 20) + ".." + getFile->get_name().substr(last);
-      }
-    else {
-      ShortFileName = getFile->get_name().substr(0,22) + "...";
-      }
-    }
-  else {
-  ShortFileName = getFile->get_name();
-  }
-
-  FileMime = getFile->get_mime_type();
-
-  guint size = getFile->get_size();
-  if(size < 1024)
-    FileSize = int2ustr(size) + " B";
-  else if (size < 1048576)
-    FileSize = int2ustr(size / 1024) + " KB";
-  else
-    FileSize = int2ustr(size / 1048576) + " MB";
-
-  hidden = (getFile->get_name().substr(0,1) == ".");
-  };
-
-/**********************
-
-DaIconModes::proto_icon::~proto_icon(){
-  std::cout << "proto deleted";
-  }
-
-/**********************
-
-DaIconModes::Sidecon::Sidecon(proto_icon & in){
-
-  Arrange = new Gtk::Table();
-  source = &in;
-
-  Icon = new Gtk::Image(source->icon->scale_simple(48,48,Gdk::INTERP_TILES));
-  Arrange->attach(*Icon, 0, 1, 0, 3, Gtk::FILL, Gtk::FILL, 0, 0);
-
-  ShortName = new Gtk::Label(" " + source->ShortFileName);
-  ShortName->set_alignment(0,0.5);
-  Arrange->attach(*ShortName, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-
-  Mime = new Gtk::Label(" " + source->FileMime);
-  Mime->set_alignment(0,0.5);
-  Arrange->attach(*Mime, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-
-  Size = new Gtk::Label(" " + source->FileSize);
-  Size->set_alignment(0,0.5);
-  Arrange->attach(*Size, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-
-  add(*Arrange);
-  show_all_children();
-
-  signal_button_press_event().connect(
-    sigc::mem_fun(*source, &DaIconModes::proto_icon::select));
-
-  }
-
-/**********************
-
-DaIconModes::Sidecon::~Sidecon(){
-
-  }
-
-/**********************
-
-DaIconModes::Listview::Listview(proto_icon & in){
-
-  source = &in;
-  Arrange = new Gtk::Table();
-
-  Icon = new Gtk::Image(source->icon->scale_simple(16,16,Gdk::INTERP_TILES));
-  Arrange->attach(*Icon, 0, 1, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
-
-  Name = new Gtk::Label(" " + source->ShortFileName);
-  Name->set_alignment(0,0.5);
-  Arrange->attach(*Name, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
-
-  add(*Arrange);
-  show_all_children();
-
-  signal_button_press_event().connect(
-    sigc::mem_fun(*source, &DaIconModes::proto_icon::select));
-
-  }
-
-/**********************
-
-DaIconModes::Listview::~Listview(){
-
-  }
-
 /**********************/
 
 DaIconModes::ChooseActionDialogue::ChooseActionDialogue(Glib::ustring mimeType){
@@ -689,69 +375,27 @@
 
 void DaIconModes::on_size_allocate(Gtk::Allocation& allocation){
 
-  int oldie = IconsHigh;
+ switch(mode){
+   case 0:
+     
+       m_TreeView.set_columns((filesAtPath - 1)/(allocation.get_height() / 60) + 1);
+  /*
+    // std::vector<guint> * order = new std::vector<guint>;
+     for(int i = 0; i < (allocation.get_height() / 60); i++){
+       for(int j = 0; j < filesAtPath; j += (allocation.get_height() / 60)){
+         std::cout<< i+j << "\n";//order->push_back(j+i);
+	 }
+       }
 
- // switch(mode){
-   // case 0:
-    //  IconsHigh = 
-      m_TreeView.set_columns(filesAtPath/(allocation.get_height() / 60) + 1);
-
-//std::cout << allocation.get_height() << "\n"
-//<< allocation.get_height() /57 << "\n"
-// << filesAtPath/(allocation.get_height() / 57) << "\n";
-   //   break;
-  //  case 1:
-    //  IconsHigh = allocation.get_height() / 25;
-    //  break;
-    //}
- // if ( oldie != IconsHigh ){ //if resize is needed
- //   Gtk::Widget * tmp = get_child();
-  // // redraw();
-  //  }
-//*/
+*/
+     break;
+   case 1:
+     m_TreeView.set_columns(filesAtPath/(allocation.get_height() / 30) + 1);       
+     break;
+     }   
   Gtk::EventBox::on_size_allocate(allocation);
   }
 
-/**********************
-
-void DaIconModes::redraw(){
-  Gtk::Widget * tmp = get_child();
-  
-  if (tmp)
-    delete tmp; // actually DisposableTable, but segfaulted otherwise
-
-  Gtk::Table * DisposableTable = new Gtk::Table((filesAtPath)/IconsHigh+1,IconsHigh);
-  add(*DisposableTable);
-
-  int y_pos = 0;
-  int x_pos = 0;
-
-  for(int i = 0; i < slotsUsed; i++){
-    if(  !iconlist[i]->hidden || parent->optShowHidden->get_active()){
-      switch(mode){
-        case 0:
-          Sidecon * tmpSidecon = new Sidecon(*iconlist[i]);
-          DisposableTable->attach( *tmpSidecon, x_pos, x_pos+1, y_pos, y_pos+1,Gtk::FILL, Gtk::FILL, 4, 4);
-          break;
-        case 1:/*
-          Listview * tmpListview = new Listview(*iconlist[i]);
-          DisposableTable->attach( *tmpListview, x_pos, x_pos+1, y_pos, y_pos+1,Gtk::FILL, Gtk::FILL, 4, 4);
-          break;
-        }
-
-      y_pos++; 
-      if(parent->get_mode() == 0 || parent->get_mode() == 1){
-        if ( y_pos + 1 > IconsHigh){
-          y_pos = 0;
-          x_pos++;
-          }
-        }
-      }
-    }
-  DisposableTable->show();
-  DisposableTable->show_all_children();
-  }
-
 /**********************/
 
 DaIconModes::DaIconModes(
@@ -763,51 +407,28 @@
   mode = parent->get_mode();
 
   lastclick = 0;  // a double-click detector. 
-
-
   filesAtPath = 0; // count files in directory
-/*
-  try{  //count up the files in the directory. 
-    Gnome::Vfs::DirectoryHandle handle;
-    handle.open(parent->get_history(position), Gnome::Vfs::FILE_INFO_DEFAULT);
-    bool file_exists = true;
-    while(file_exists){
-      handle.read_next(file_exists);
-      filesAtPath++;
-      }
-    }
-  catch(const Gnome::Vfs::exception&){} */
 
   set_visible_window(false);
 
 
- Gtk::ScrolledWindow * MainScroller = Gtk::manage(new Gtk::ScrolledWindow);
- MainScroller->show();
- //MainScroller->set_shadow_type(Gtk::SHADOW_NONE);
-// MainScroller->add(*MainEventBox);
- // MainEventBox->add(*foo);
+  Gtk::ScrolledWindow * MainScroller = Gtk::manage(new Gtk::ScrolledWindow);
+  MainScroller->show();
   MainScroller->set_policy(Gtk::POLICY_ALWAYS, Gtk::POLICY_NEVER);
-add(*MainScroller);
-        iconlist = new proto_icon;
-        MainScroller->add(m_TreeView);
-        m_TreeView.show();
-        m_refTreeModel = Gtk::ListStore::create(*iconlist);
-        m_TreeView.set_model(m_refTreeModel);
-   // row[iconlist->m_col_icon] 
+  add(*MainScroller);
+  iconlist = new proto_icon;
+  MainScroller->add(m_TreeView);
+  m_TreeView.show();
+  m_refTreeModel = Gtk::ListStore::create(*iconlist);
+  m_TreeView.set_model(m_refTreeModel);
 
-//  m_TreeView.append_column("", iconlist->m_col_icon);
-//  m_TreeView.append_column("Name", iconlist->m_col_name);
-//  m_TreeView.append_column("Size", iconlist->m_col_size);
-//  m_TreeView.append_column("Mime Type", iconlist->m_col_mime);
 
+
   m_TreeView.set_text_column(iconlist->m_col_all);
   m_TreeView.set_pixbuf_column(iconlist->m_col_icon);
   m_TreeView.set_orientation(Gtk::ORIENTATION_HORIZONTAL );
            m_TreeView.show_all_children();
 
-//  iconlist = new proto_icon*[filesAtPath];
-//  slotsUsed = 0;
-//  IconsHigh = 0;
   try { // make all those files into proto_icons
     Gnome::Vfs::DirectoryHandle::visit(
       parent->get_history(position),
@@ -820,7 +441,15 @@
   catch(const Gnome::Vfs::exception& ex){}
 
   m_TreeView.set_item_width( m_TreeView.get_icon_width()+ 235);
+  m_TreeView.signal_button_press_event().connect_notify(
+    sigc::bind<Glib::ustring>(
+sigc::mem_fun(*this,&DaIconModes::icon_selected), "ha!"
 
+
+// IconList->set_default_sort_func( sigc::mem_fun(*this, &DaIconModes::on_model_sort) );
+));
+
+
   }
 
 /**********************/
@@ -833,13 +462,30 @@
 
  void DaIconModes::SwitchHidden(guint pos){
 
-position = pos;
+position = pos;/*
 if (parent->optShowHidden->get_active())
     parent->set_message("Showing Hidden Files");
 else
     parent->set_message("Hidden Files are hidden again");
+*/
+  }
 
-//  redraw();
+/**********************/
+
+void DaIconModes::icon_selected(GdkEventButton* event, Glib::ustring file){
+  if( (event->type == GDK_2BUTTON_PRESS) && (event->button == 1)){
+
+    //RunFile(file);
+    //m_Menu_Popup.popup(event->button, event->time);
+
+    std::vector<Gtk::TreePath> refSelection =   m_TreeView.get_selected_items();
+    if(refSelection.size() > 0){
+      std::cout << "Running File :" << refSelection[0].to_string() << "\n";
+      Gtk::TreeModel::Row row = *(m_refTreeModel->get_iter(refSelection[0]));
+      std::cout <<  parent->get_history(position) << row[iconlist->m_col_name] << "\n";
+      }
+    }
   }
 
+
 /**********************/

Modified: trunk/src/iconmodes.h
===================================================================
--- trunk/src/iconmodes.h	2005-04-25 05:09:32 UTC (rev 61)
+++ trunk/src/iconmodes.h	2005-04-26 06:46:36 UTC (rev 62)
@@ -1,6 +1,6 @@
-/* Darimasen - iconmodes.h - Copyright (C) 2004 - 2005 Sudrien, GPL */
-
-#ifndef ICONMODES_H
+/* Darimasen - iconmodes.h - Copyright (C) 2004 - 2005 Sudrien, GPL */
+
+#ifndef ICONMODES_H
 #define ICONMODES_H
 
 
@@ -8,66 +8,15 @@
 #include <libgnomevfsmm.h>
 #include <gtkmm/table.h>
 #include <gdkmm/pixbuf.h>
-#include <gtkmm/entry.h>
+#include <gtkmm/entry.h>
 #include <gtkmm/messagedialog.h>
 #include <gtkmm/separator.h>
 #include <gtkmm/liststore.h>
-#include <gtkmm/iconview.h>
+#include <gtkmm/iconview.h>
 /**********************/
 
 class DaIconModes : public Gtk::EventBox {
 
-/*
-  class proto_icon {
-    Glib::ustring path;
    DaIconModes * parent;
-
-    void run() const;
-    void runAsText() const;
-    void SetRunAction() const;
-    void SetPermissions() const;
-
-  public:
-
-    Glib::RefPtr<Gdk::Pixbuf> icon;
-    Glib::ustring FileName;
-    Glib::ustring ShortFileName;
-    Glib::ustring FileMime;
-    Glib::ustring FileSize;
-    bool hidden;
-
-    bool select(GdkEventButton*);
-
-    proto_icon(DaIconModes&, Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>);
-    ~proto_icon();
-    };
-
-  class Sidecon : public Gtk::EventBox {
-    proto_icon * source;
-
-    Gtk::Table * Arrange;
-    Gtk::Image * Icon;
-    Gtk::Label * ShortName;
-    Gtk::Label * Mime;
-    Gtk::Label * Size;
-
-  public:
-    Sidecon(proto_icon&);
-    ~Sidecon();
-  };
-
-  class Listview : public Gtk::EventBox {
-    proto_icon * source;
-
-    Gtk::Table * Arrange;
-    Gtk::Image * Icon;
-    Gtk::Label * Name;
-
-  public:
-    Listview(proto_icon&);
-    ~Listview();
-  };
-*/
-
   class proto_icon : public Gtk::TreeModel::ColumnRecord {
   public:
 
@@ -144,32 +93,52 @@
   Glib::RefPtr<Gdk::Pixbuf> getIcon(Glib::ustring);
   bool addEntry(Glib::ustring, Glib::RefPtr<const Gnome::Vfs::FileInfo>, bool, bool);
   void on_size_allocate(Gtk::Allocation&);
-  void redraw();
 
+
   class Darimasen * parent;
-  guint position;
+  gint position;
   guint32 lastclick;
-  guint filesAtPath;
+  gint filesAtPath;
   gshort mode;
 
-
   proto_icon * iconlist;
-
-
-  guint slotsUsed;
-  guint IconsHigh;
-  Gtk::Menu prompt;
- // Gtk::TreeView m_TreeView;
   Gtk::IconView m_TreeView;
   Glib::RefPtr<Gtk::ListStore> m_refTreeModel;
 
+void icon_selected(GdkEventButton*, Glib::ustring);
+
+/*
+int on_model_sort(const Gtk::TreeModel::iterator& a, const Gtk::TreeModel::iterator& b)
+{
+  ///* We need this function because we want to sort
+   //* folders before files.
+   
+
+  Gtk::TreeModel::Row row_a = *a;
+  Gtk::TreeModel::Row row_b = *b;
+  
+  const bool a_is_dir = row_a[iconlist->is_directory];
+  const bool b_is_dir = row_b[m_columns.is_directory];
+    
+  if(!a_is_dir && b_is_dir)
+    return 1;
+  else if (a_is_dir && !b_is_dir)
+    return -1;
+  else
+  {
+    Glib::ustring name_a = row_a[m_columns.display_name];
+    return name_a.compare( row_b[m_columns.display_name] );
+  }
+}
+*/
+
 public:
-  ~DaIconModes();
+  ~DaIconModes();
   DaIconModes(guint, class Darimasen&);
 
   void SwitchHidden(guint);
 };
 
-/**********************/
-
-#endif //ICONMODES_H
+/**********************/
+
+#endif //ICONMODES_H



From darimasen-svn-admin at lists.berlios.de  Wed Apr 27 07:37:27 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Wed, 27 Apr 2005 07:37:27 +0200
Subject: [Darimasen-svn] r63 - in trunk: pixmaps src
Message-ID: <200504270537.j3R5bRgn017008@sheep.berlios.de>

Author: sudrien
Date: 2005-04-27 07:37:08 +0200 (Wed, 27 Apr 2005)
New Revision: 63

Modified:
   trunk/pixmaps/darimasenInfo.svg
   trunk/src/darimasen.cpp
   trunk/src/iconmodes.cpp
   trunk/src/iconmodes.h
Log:
menus filled in with non-iconview system

Modified: trunk/pixmaps/darimasenInfo.svg
===================================================================
--- trunk/pixmaps/darimasenInfo.svg	2005-04-26 06:46:36 UTC (rev 62)
+++ trunk/pixmaps/darimasenInfo.svg	2005-04-27 05:37:08 UTC (rev 63)
@@ -2,121 +2,174 @@
 <!-- Created with Inkscape (http://www.inkscape.org/) -->
 <svg
    xmlns:xml="http://www.w3.org/XML/1998/namespace"
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://web.resource.org/cc/"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:svg="http://www.w3.org/2000/svg"
    xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink"
-   id="svg1275"
+   xmlns:sodipodi="http://inkscape.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   sodipodi:docbase="/home/sudrien/trunk/pixmaps"
+   sodipodi:docname="darimasenInfo.svg"
+   inkscape:version="0.41+cvs"
+   sodipodi:version="0.32"
+   version="1.0"
+   x="0.0000000"
+   y="0.0000000"
+   width="198.00000"
    height="256.00000"
-   width="198.00000"
-   y="0.0000000"
-   x="0.0000000"
-   version="1.0">
+   id="svg1275">
+  <metadata
+     id="metadata27">
+    <rdf:RDF
+       id="RDF29">
+      <cc:Work
+         id="Work31"
+         rdf:about="">
+        <dc:format
+           id="format33">image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage"
+           id="type35" />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <sodipodi:namedview
+     inkscape:current-layer="svg1275"
+     inkscape:window-y="23"
+     inkscape:window-x="5"
+     inkscape:cy="56.734489"
+     inkscape:cx="104.06554"
+     inkscape:zoom="1.3398437"
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:window-width="742"
+     inkscape:window-height="512" />
   <defs
      id="defs3">
     <linearGradient
        id="linearGradient2049">
       <stop
-         id="stop2051"
+         style="stop-color:#b8b8b8;stop-opacity:1.0000000;"
          offset="0.0000000"
-         style="stop-color:#b8b8b8;stop-opacity:1.0000000;" />
+         id="stop2051" />
       <stop
-         id="stop2053"
+         style="stop-color:#ffffff;stop-opacity:1.0000000;"
          offset="1.0000000"
-         style="stop-color:#ffffff;stop-opacity:1.0000000;" />
+         id="stop2053" />
     </linearGradient>
     <linearGradient
        id="linearGradient2439">
       <stop
-         id="stop2441"
+         style="stop-color:#002200;stop-opacity:1.0000000;"
          offset="0.0000000"
-         style="stop-color:#002200;stop-opacity:1.0000000;" />
+         id="stop2441" />
       <stop
-         id="stop2443"
+         style="stop-color:#508350;stop-opacity:1.0000000;"
          offset="1.0000000"
-         style="stop-color:#508350;stop-opacity:1.0000000;" />
+         id="stop2443" />
     </linearGradient>
     <linearGradient
-       gradientTransform="matrix(0.632356,0.000000,0.000000,0.632356,-13.67091,-184.4702)"
+       x1="129.06119"
+       y1="330.76971"
+       x2="129.66743"
+       y2="444.66751"
+       id="linearGradient3207"
+       xlink:href="#linearGradient2439"
        gradientUnits="userSpaceOnUse"
-       xlink:href="#linearGradient2439"
-       id="linearGradient3207"
+       gradientTransform="matrix(0.632356,0.000000,0.000000,0.632356,-13.67091,-184.4702)" />
+    <linearGradient
+       x1="29.854227"
+       y1="70.903793"
+       x2="141.06122"
+       y2="194.05247"
+       id="linearGradient2057"
+       xlink:href="#linearGradient2049"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
        y2="444.66751"
        x2="129.66743"
        y1="330.76971"
-       x1="129.06119" />
-    <linearGradient
+       x1="129.06119"
+       gradientTransform="matrix(0.632356,0.000000,0.000000,0.632356,-13.67091,-184.4702)"
        gradientUnits="userSpaceOnUse"
-       xlink:href="#linearGradient2049"
-       id="linearGradient2057"
-       y2="194.05247"
-       x2="141.06122"
-       y1="70.903793"
-       x1="29.854227" />
+       id="linearGradient2461"
+       xlink:href="#linearGradient2439"
+       inkscape:collect="always" />
   </defs>
   <rect
-     id="rect1287"
+     width="198.00000"
+     height="256.00000"
+     rx="0.0000000"
+     ry="0.0000000"
+     x="0.0000000"
+     y="-5.3400210e-15"
      style="fill:url(#linearGradient2057);fill-opacity:1.0000000;stroke:#000000;stroke-opacity:1.0000000"
-     y="-5.3400210e-15"
-     x="0.0000000"
-     ry="0.0000000"
-     rx="0.0000000"
-     height="256.00000"
-     width="198.00000" />
+     id="rect1287" />
   <g
-     id="layer1"
-     transform="matrix(1.133614,0.000000,0.000000,1.133614,-4.525046,-12.88697)">
+     transform="matrix(1.133614,0.000000,0.000000,1.133614,3.474954,-2.886970)"
+     id="layer1">
     <rect
-       id="rect2843"
+       width="109.67054"
+       height="21.277554"
+       x="9.1647301"
+       y="86.580460"
        style="fill:#ffffff;fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000"
-       y="86.580460"
-       x="9.1647301"
-       height="21.277554"
-       width="109.67054" />
+       id="rect2843" />
     <path
-       id="rect1347"
-       style="fill:url(#linearGradient3207);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:8.8750000;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-opacity:0.79591835"
-       d="M -0.23325339,5.0000000 C -0.23325339,5.0000000 -0.23325339,15.512950 -0.23325339,20.137066 C 38.452555,20.192437 77.138362,20.256287 115.82418,20.314918 C 115.51692,27.421160 117.36607,37.396096 109.67846,41.281537 C 105.06085,45.348432 98.730022,44.236576 93.612606,41.874370 C 85.689412,38.583788 77.600479,33.142630 74.819717,24.603095 C 70.986421,24.067457 67.705354,24.306829 67.270941,28.871510 C 63.481078,36.173460 52.735150,38.563150 46.778601,32.487807 C 42.861760,30.675502 44.858595,25.544170 42.569475,23.061721 C 40.139803,22.670295 35.174287,21.275660 35.257832,24.958794 C 35.013503,32.896507 39.107446,41.206533 46.818119,44.146905 C 53.749888,47.396083 62.098151,46.619711 68.160204,41.874370 C 71.117109,38.996307 73.611001,37.842368 76.262283,41.894131 C 85.089190,50.781777 98.558889,56.168480 110.88388,52.248993 C 115.73922,49.990940 120.41084,46.526704 123.39272,42.052221 C 125.87305,36.292010 128.61715,30.440652 128.19468,23.950976 C 128.09807,17.633!
 769 128.25469,11.317184 128.15667,5.0000000 C 85.446161,5.0000000 42.477251,5.0000000 -0.23325339,5.0000000 z M 12.216279,26.203750 C 10.487101,26.185153 8.2227922,26.687581 6.8214890,26.342081 C 4.8876683,26.960152 -0.41947891,24.985742 -0.23325339,27.606795 C -0.23325339,59.718722 -0.23325339,91.830663 -0.23325339,123.94256 C 42.483834,123.94256 85.200922,123.94256 127.91803,123.94256 C 127.91803,102.00106 127.91803,80.059561 127.91803,58.118067 C 122.98432,58.118067 118.05061,58.118067 113.11690,58.118067 C 113.61470,61.902451 113.93451,66.093579 112.04979,69.520271 C 79.819297,69.520271 47.588806,69.520271 15.358315,69.520271 C 13.263154,56.236554 14.647417,42.637905 14.390014,29.227212 C 15.132456,26.761238 13.945475,26.222349 12.216279,26.203750 z M 86.696194,91.988724 C 88.697720,92.102224 90.594970,92.887462 90.865799,95.249324 C 89.764681,95.483360 88.480005,95.220441 87.348303,95.624798 C 88.012730,94.785614 86.526138,93.870435 85.708122,94.043891 C 84.396466,94.1!
 44609 84.394166,95.366120 85.609335,95.723605 C 86.955285,95.8!
 45307 88
.191464,96.205103 89.423232,96.830209 C 92.034350,98.071779 91.529538,102.13231 88.869926,102.97595 C 86.862058,103.67131 84.221920,103.84674 82.487068,102.42264 C 81.828004,101.87174 80.313684,99.694347 81.637323,99.577031 C 82.839866,99.657548 84.424058,98.813904 84.720071,100.38723 C 85.294536,101.75947 87.957298,101.54654 87.743533,99.912973 C 86.590043,98.140560 84.045058,98.854062 82.585855,97.403299 C 80.286295,95.733835 82.159213,92.076397 84.720071,92.067794 C 85.353695,91.990995 86.029022,91.950897 86.696194,91.988724 z M 50.177519,92.067794 C 50.951303,92.105038 51.897906,92.331175 52.450062,92.146824 C 52.450062,95.535778 52.450062,98.934902 52.450062,102.32383 C 52.850242,104.19702 50.115913,102.92341 49.011604,103.29213 C 49.011604,99.903181 49.011604,96.523836 49.011604,93.134883 C 48.811524,92.198299 49.403754,92.030510 50.177519,92.067794 z M 101.91230,92.067794 C 102.32993,92.246095 102.12056,93.086725 102.14943,93.609164 C 102.47996,95.146315 100.33914,94.!
 367268 99.461914,94.498416 C 98.479889,94.643432 96.337885,93.995332 96.517491,95.585262 C 97.254816,97.014358 99.102365,96.144302 100.37093,96.296675 C 101.94385,95.617884 102.02092,97.482450 101.63565,98.470408 C 100.52840,98.782831 99.220108,98.516516 98.039115,98.529681 C 96.681725,98.206023 95.898835,99.589617 96.438454,100.76271 C 98.151905,100.76271 99.862911,100.76271 101.57637,100.76271 C 103.02863,100.55480 102.06485,102.43578 102.30753,103.29213 C 99.181795,103.29213 96.046695,103.29213 92.920959,103.29213 C 92.920959,99.579239 92.920959,95.859738 92.920959,92.146824 C 95.699738,92.141679 98.482466,92.164653 101.26020,92.146824 C 101.57071,92.017566 101.77309,92.008361 101.91230,92.067794 z M 29.210913,92.087531 C 29.993356,92.141076 30.858512,92.320703 31.483435,92.146824 C 32.566789,95.025921 33.660694,97.903369 34.744029,100.78246 C 35.463049,102.33476 36.183091,103.90380 33.775746,103.29213 C 32.328321,103.73625 31.925970,102.90173 31.384629,101.73099 C 30.10!
 9115,101.16954 27.661195,101.03318 27.116216,102.73882 C 26.76!
 5126,103
.98245 24.634598,102.95515 23.559201,103.29213 C 24.868338,99.806680 26.182555,96.323930 27.491673,92.838480 C 27.736522,92.115811 28.428448,92.034007 29.210913,92.087531 z M 74.128085,92.087531 C 74.909492,92.141397 75.777281,92.321185 76.400610,92.146824 C 77.627816,95.404710 78.848976,98.670737 80.076199,101.92860 C 81.114860,103.46841 80.062904,103.43307 78.692922,103.27236 C 77.248702,103.74706 76.843666,102.89011 76.301803,101.73099 C 75.026289,101.16954 72.578385,101.03318 72.033388,102.73882 C 71.686099,103.98405 69.548381,102.95410 68.476375,103.29213 C 69.785493,99.806680 71.099749,96.323930 72.408849,92.838480 C 72.651896,92.115048 73.346682,92.033686 74.128085,92.087531 z M 113.07738,92.107309 C 113.68543,92.149477 114.34399,92.264244 114.85589,92.166602 C 114.85589,95.836482 114.85587,99.503694 114.85589,103.17355 C 113.80569,103.50109 112.67686,103.18767 111.59529,103.29213 C 110.20570,101.25479 108.81913,99.200878 107.42567,97.166169 C 107.42567,99.087153 107.!
 42567,101.01543 107.42567,102.93642 C 106.83190,103.76151 105.22577,103.07726 104.20459,103.27236 C 104.20459,100.97934 104.20459,98.688526 104.20459,96.395483 C 104.45098,95.058823 103.70136,93.010609 104.59983,92.146824 C 105.54300,92.080296 106.48285,92.227020 107.42567,92.166602 C 108.82286,94.214052 110.21459,96.267089 111.61505,98.312328 C 111.61505,96.381192 111.61505,94.433656 111.61505,92.502541 C 111.91313,92.089843 112.46933,92.065141 113.07738,92.107309 z M 17.472762,92.127067 C 18.869098,92.142644 20.247220,92.298774 21.504042,92.937288 C 23.926501,94.879196 24.174297,98.892231 22.531630,101.41482 C 20.328928,104.23001 16.379914,103.04626 13.303155,103.29213 C 13.308218,99.584473 13.285426,95.873344 13.303155,92.166602 C 14.653722,92.240245 16.076428,92.111470 17.472762,92.127067 z M 41.166427,92.127067 C 42.630747,92.119750 44.093158,92.191484 45.434841,92.621086 C 47.614491,93.947435 47.093750,97.525040 44.703673,98.332065 C 45.959604,99.639304 46.779601,101.!
 24559 47.569037,102.85739 C 47.759643,103.86795 44.884948,103.!
 00514 43
.893466,103.29213 C 42.970229,101.43530 41.999814,99.593076 40.514297,98.114711 C 40.317368,99.507204 40.211776,100.91672 40.277164,102.32383 C 40.689397,104.19602 37.923247,102.92394 36.818957,103.29213 C 36.818957,99.579239 36.818957,95.859738 36.818957,92.146824 C 38.221301,92.216588 39.702088,92.134383 41.166427,92.127067 z M 54.880680,92.146824 C 56.389138,92.146824 57.897556,92.146824 59.405994,92.146824 C 59.987728,94.396955 60.557187,96.656592 61.144983,98.905155 C 61.733985,96.657557 62.304909,94.396975 62.883969,92.146824 C 64.389885,92.146824 65.903352,92.146824 67.409268,92.146824 C 67.409268,95.292798 67.409268,98.446692 67.409268,101.59267 C 68.110669,103.79747 66.105657,103.29123 64.603190,103.29213 C 64.490603,101.30864 64.887521,99.268467 64.286999,97.344027 C 63.304419,98.835471 63.192242,100.67284 62.666589,102.34361 C 62.658707,103.97971 60.873486,103.09944 59.860511,103.27236 C 59.233621,101.30538 59.122742,99.145583 58.022715,97.363764 C 57.453594,99.10!
 2228 57.798935,100.94269 57.706525,102.73882 C 57.576637,104.00630 55.758778,102.99523 54.880680,103.27236 C 54.880680,99.567047 54.880680,95.852120 54.880680,92.146824 z M 86.518347,95.605040 C 86.678148,95.557907 87.024159,95.903393 86.459060,95.822393 C 86.429221,95.693617 86.465069,95.620738 86.518347,95.605040 z M 86.518347,98.984206 C 86.722712,99.041387 86.531275,99.465725 86.162641,99.102750 C 86.321159,99.002797 86.450214,98.965131 86.518347,98.984206 z M 67.547613,105.01135 C 67.698176,104.95354 67.830329,105.55843 67.409268,105.34728 C 67.443037,105.12717 67.497411,105.03064 67.547613,105.01135 z M 36.562074,105.24849 C 36.680632,105.14896 37.027939,105.65251 36.562074,105.58444 C 36.514043,105.36965 36.522535,105.28166 36.562074,105.24849 z " />
+       d="M -0.23325339,5.0000000 C -0.23325339,5.0000000 -0.23325339,15.512950 -0.23325339,20.137066 C 38.452555,20.192437 77.138362,20.256287 115.82418,20.314918 C 115.51692,27.421160 117.36607,37.396096 109.67846,41.281537 C 105.06085,45.348432 98.730022,44.236576 93.612606,41.874370 C 85.689412,38.583788 77.600479,33.142630 74.819717,24.603095 C 70.986421,24.067457 67.705354,24.306829 67.270941,28.871510 C 63.481078,36.173460 52.735150,38.563150 46.778601,32.487807 C 42.861760,30.675502 44.858595,25.544170 42.569475,23.061721 C 40.139803,22.670295 35.174287,21.275660 35.257832,24.958794 C 35.013503,32.896507 39.107446,41.206533 46.818119,44.146905 C 53.749888,47.396083 62.098151,46.619711 68.160204,41.874370 C 71.117109,38.996307 73.611001,37.842368 76.262283,41.894131 C 85.089190,50.781777 98.558889,56.168480 110.88388,52.248993 C 115.73922,49.990940 120.41084,46.526704 123.39272,42.052221 C 125.87305,36.292010 128.61715,30.440652 128.19468,23.950976 C 128.09807,17.633!
 769 128.25469,11.317184 128.15667,5.0000000 C 85.446161,5.0000000 42.477251,5.0000000 -0.23325339,5.0000000 z M 12.216279,26.203750 C 10.487101,26.185153 8.2227922,26.687581 6.8214890,26.342081 C 4.8876683,26.960152 -0.41947891,24.985742 -0.23325339,27.606795 C -0.23325339,59.718722 -0.23325339,91.830663 -0.23325339,123.94256 C 42.483834,123.94256 85.200922,123.94256 127.91803,123.94256 C 127.91803,102.00106 127.91803,80.059561 127.91803,58.118067 C 122.98432,58.118067 118.05061,58.118067 113.11690,58.118067 C 113.61470,61.902451 113.93451,66.093579 112.04979,69.520271 C 79.819297,69.520271 47.588806,69.520271 15.358315,69.520271 C 13.263154,56.236554 14.647417,42.637905 14.390014,29.227212 C 15.132456,26.761238 13.945475,26.222349 12.216279,26.203750 z M 86.696194,91.988724 C 88.697720,92.102224 90.594970,92.887462 90.865799,95.249324 C 89.764681,95.483360 88.480005,95.220441 87.348303,95.624798 C 88.012730,94.785614 86.526138,93.870435 85.708122,94.043891 C 84.396466,94.1!
 44609 84.394166,95.366120 85.609335,95.723605 C 86.955285,95.8!
 45307 88
.191464,96.205103 89.423232,96.830209 C 92.034350,98.071779 91.529538,102.13231 88.869926,102.97595 C 86.862058,103.67131 84.221920,103.84674 82.487068,102.42264 C 81.828004,101.87174 80.313684,99.694347 81.637323,99.577031 C 82.839866,99.657548 84.424058,98.813904 84.720071,100.38723 C 85.294536,101.75947 87.957298,101.54654 87.743533,99.912973 C 86.590043,98.140560 84.045058,98.854062 82.585855,97.403299 C 80.286295,95.733835 82.159213,92.076397 84.720071,92.067794 C 85.353695,91.990995 86.029022,91.950897 86.696194,91.988724 z M 50.177519,92.067794 C 50.951303,92.105038 51.897906,92.331175 52.450062,92.146824 C 52.450062,95.535778 52.450062,98.934902 52.450062,102.32383 C 52.850242,104.19702 50.115913,102.92341 49.011604,103.29213 C 49.011604,99.903181 49.011604,96.523836 49.011604,93.134883 C 48.811524,92.198299 49.403754,92.030510 50.177519,92.067794 z M 101.91230,92.067794 C 102.32993,92.246095 102.12056,93.086725 102.14943,93.609164 C 102.47996,95.146315 100.33914,94.!
 367268 99.461914,94.498416 C 98.479889,94.643432 96.337885,93.995332 96.517491,95.585262 C 97.254816,97.014358 99.102365,96.144302 100.37093,96.296675 C 101.94385,95.617884 102.02092,97.482450 101.63565,98.470408 C 100.52840,98.782831 99.220108,98.516516 98.039115,98.529681 C 96.681725,98.206023 95.898835,99.589617 96.438454,100.76271 C 98.151905,100.76271 99.862911,100.76271 101.57637,100.76271 C 103.02863,100.55480 102.06485,102.43578 102.30753,103.29213 C 99.181795,103.29213 96.046695,103.29213 92.920959,103.29213 C 92.920959,99.579239 92.920959,95.859738 92.920959,92.146824 C 95.699738,92.141679 98.482466,92.164653 101.26020,92.146824 C 101.57071,92.017566 101.77309,92.008361 101.91230,92.067794 z M 29.210913,92.087531 C 29.993356,92.141076 30.858512,92.320703 31.483435,92.146824 C 32.566789,95.025921 33.660694,97.903369 34.744029,100.78246 C 35.463049,102.33476 36.183091,103.90380 33.775746,103.29213 C 32.328321,103.73625 31.925970,102.90173 31.384629,101.73099 C 30.10!
 9115,101.16954 27.661195,101.03318 27.116216,102.73882 C 26.76!
 5126,103
.98245 24.634598,102.95515 23.559201,103.29213 C 24.868338,99.806680 26.182555,96.323930 27.491673,92.838480 C 27.736522,92.115811 28.428448,92.034007 29.210913,92.087531 z M 74.128085,92.087531 C 74.909492,92.141397 75.777281,92.321185 76.400610,92.146824 C 77.627816,95.404710 78.848976,98.670737 80.076199,101.92860 C 81.114860,103.46841 80.062904,103.43307 78.692922,103.27236 C 77.248702,103.74706 76.843666,102.89011 76.301803,101.73099 C 75.026289,101.16954 72.578385,101.03318 72.033388,102.73882 C 71.686099,103.98405 69.548381,102.95410 68.476375,103.29213 C 69.785493,99.806680 71.099749,96.323930 72.408849,92.838480 C 72.651896,92.115048 73.346682,92.033686 74.128085,92.087531 z M 113.07738,92.107309 C 113.68543,92.149477 114.34399,92.264244 114.85589,92.166602 C 114.85589,95.836482 114.85587,99.503694 114.85589,103.17355 C 113.80569,103.50109 112.67686,103.18767 111.59529,103.29213 C 110.20570,101.25479 108.81913,99.200878 107.42567,97.166169 C 107.42567,99.087153 107.!
 42567,101.01543 107.42567,102.93642 C 106.83190,103.76151 105.22577,103.07726 104.20459,103.27236 C 104.20459,100.97934 104.20459,98.688526 104.20459,96.395483 C 104.45098,95.058823 103.70136,93.010609 104.59983,92.146824 C 105.54300,92.080296 106.48285,92.227020 107.42567,92.166602 C 108.82286,94.214052 110.21459,96.267089 111.61505,98.312328 C 111.61505,96.381192 111.61505,94.433656 111.61505,92.502541 C 111.91313,92.089843 112.46933,92.065141 113.07738,92.107309 z M 17.472762,92.127067 C 18.869098,92.142644 20.247220,92.298774 21.504042,92.937288 C 23.926501,94.879196 24.174297,98.892231 22.531630,101.41482 C 20.328928,104.23001 16.379914,103.04626 13.303155,103.29213 C 13.308218,99.584473 13.285426,95.873344 13.303155,92.166602 C 14.653722,92.240245 16.076428,92.111470 17.472762,92.127067 z M 41.166427,92.127067 C 42.630747,92.119750 44.093158,92.191484 45.434841,92.621086 C 47.614491,93.947435 47.093750,97.525040 44.703673,98.332065 C 45.959604,99.639304 46.779601,101.!
 24559 47.569037,102.85739 C 47.759643,103.86795 44.884948,103.!
 00514 43
.893466,103.29213 C 42.970229,101.43530 41.999814,99.593076 40.514297,98.114711 C 40.317368,99.507204 40.211776,100.91672 40.277164,102.32383 C 40.689397,104.19602 37.923247,102.92394 36.818957,103.29213 C 36.818957,99.579239 36.818957,95.859738 36.818957,92.146824 C 38.221301,92.216588 39.702088,92.134383 41.166427,92.127067 z M 54.880680,92.146824 C 56.389138,92.146824 57.897556,92.146824 59.405994,92.146824 C 59.987728,94.396955 60.557187,96.656592 61.144983,98.905155 C 61.733985,96.657557 62.304909,94.396975 62.883969,92.146824 C 64.389885,92.146824 65.903352,92.146824 67.409268,92.146824 C 67.409268,95.292798 67.409268,98.446692 67.409268,101.59267 C 68.110669,103.79747 66.105657,103.29123 64.603190,103.29213 C 64.490603,101.30864 64.887521,99.268467 64.286999,97.344027 C 63.304419,98.835471 63.192242,100.67284 62.666589,102.34361 C 62.658707,103.97971 60.873486,103.09944 59.860511,103.27236 C 59.233621,101.30538 59.122742,99.145583 58.022715,97.363764 C 57.453594,99.10!
 2228 57.798935,100.94269 57.706525,102.73882 C 57.576637,104.00630 55.758778,102.99523 54.880680,103.27236 C 54.880680,99.567047 54.880680,95.852120 54.880680,92.146824 z M 86.518347,95.605040 C 86.678148,95.557907 87.024159,95.903393 86.459060,95.822393 C 86.429221,95.693617 86.465069,95.620738 86.518347,95.605040 z M 86.518347,98.984206 C 86.722712,99.041387 86.531275,99.465725 86.162641,99.102750 C 86.321159,99.002797 86.450214,98.965131 86.518347,98.984206 z M 67.547613,105.01135 C 67.698176,104.95354 67.830329,105.55843 67.409268,105.34728 C 67.443037,105.12717 67.497411,105.03064 67.547613,105.01135 z M 36.562074,105.24849 C 36.680632,105.14896 37.027939,105.65251 36.562074,105.58444 C 36.514043,105.36965 36.522535,105.28166 36.562074,105.24849 z "
+       style="fill:url(#linearGradient2461);fill-opacity:1.0000000;fill-rule:evenodd;stroke:none;stroke-width:8.8750000;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4.0000000;stroke-opacity:0.79591835"
+       id="rect1347" />
   </g>
   <text
-     xml:space="preserve"
+     sodipodi:linespacing="100.00000%"
+     x="86.210068"
+     y="153.53935"
+     style="font-size:14.000000;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;line-height:100.00000%;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans"
      id="text1291"
-     style="font-size:14.000000;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;line-height:100.00000%;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans"
-     y="145.53935"
-     x="86.210068"><tspan
-       id="tspan1295"
-       y="145.53935"
-       x="86.210068">Version 0.0.8</tspan></text>
+     xml:space="preserve"><tspan
+       x="86.210068"
+       y="153.53935"
+       id="tspan1295">Version 0.0.8</tspan></text>
   <text
-     xml:space="preserve"
+     sodipodi:linespacing="100.00000%"
+     x="51.608505"
+     y="166.97377"
+     style="font-size:12.000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:100.00000%;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans"
      id="text1297"
-     style="font-size:12.000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:100.00000%;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans"
-     y="158.97377"
-     x="51.608505"><tspan
-       id="tspan2602"
-       y="158.97377"
-       x="51.608505">&quot;It's not like RPN at all&quot;</tspan></text>
+     xml:space="preserve"><tspan
+       x="51.608505"
+       y="166.97377"
+       id="tspan2602">&quot;It's not like RPN at all&quot;</tspan></text>
   <text
-     xml:space="preserve"
+     sodipodi:linespacing="120.00000%"
+     x="189.8419"
+     y="193.84258"
+     style="font-size:10.000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:120.00000%;writing-mode:lr-tb;text-anchor:end;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans"
      id="text1311"
-     style="font-size:10.000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:120.00000%;writing-mode:lr-tb;text-anchor:end;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans"
-     y="185.84258"
-     x="189.8419"><tspan
-       id="tspan1317"
-       y="185.84258"
-       x="189.8419">? 2004 -2005 by Sudrien</tspan><tspan
-       id="tspan1319"
-       y="197.84258"
-       x="189.8419">under the terms of the</tspan><tspan
-       id="tspan1321"
-       y="209.84258"
-       x="189.8419">GNU General Public License</tspan></text>
+     xml:space="preserve"><tspan
+       x="189.8419"
+       y="193.84258"
+       id="tspan1317">? 2004 -2005 by Sudrien</tspan><tspan
+       x="189.8419"
+       y="205.84258"
+       id="tspan1319">under the terms of the</tspan><tspan
+       x="189.8419"
+       y="217.84258"
+       id="tspan1321">GNU General Public License</tspan></text>
   <text
-     xml:space="preserve"
+     sodipodi:linespacing="100.00000%"
+     x="26.729599"
+     y="249.07288"
+     style="font-size:12.000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:100.00000%;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans"
      id="text1323"
-     style="font-size:12.000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:100.00000%;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1.0000000;stroke:none;stroke-width:1.0000000px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1.0000000;font-family:Bitstream Vera Sans"
-     y="241.07288"
-     x="26.729599"><tspan
-       id="tspan1325"
-       y="241.07288"
-       x="26.729599">http:\\darimasen.berlios.de</tspan></text>
+     xml:space="preserve"><tspan
+       x="26.729599"
+       y="249.07288"
+       id="tspan1325">http:\\darimasen.berlios.de</tspan></text>
 </svg>

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-26 06:46:36 UTC (rev 62)
+++ trunk/src/darimasen.cpp	2005-04-27 05:37:08 UTC (rev 63)
@@ -99,7 +99,7 @@
   MainEventBox->show();
 
   DaIconModes * foo;
-  foo = new DaIconModes(  pos, *this);
+  foo = Gtk::manage(new class DaIconModes(  pos, *this));
 
   if ( IconModeList.size() == pos ){
     IconModeList.push_back(foo);
@@ -112,14 +112,14 @@
     EventBoxList[pos] = MainEventBox;
     }
 
- // Gtk::ScrolledWindow * MainScroller = Gtk::manage(new Gtk::ScrolledWindow);
- // MainScroller->show();
- // MainScroller->set_shadow_type(Gtk::SHADOW_NONE);
- // MainScroller->add(*MainEventBox);
+  Gtk::ScrolledWindow * MainScroller = Gtk::manage(new Gtk::ScrolledWindow);
+  MainScroller->show();
+  MainScroller->set_shadow_type(Gtk::SHADOW_NONE);
+  MainScroller->add(*MainEventBox);
   MainEventBox->add(*foo);
- // MainScroller->set_policy(Gtk::POLICY_ALWAYS, Gtk::POLICY_ALWAYS);
+  MainScroller->set_policy(Gtk::POLICY_ALWAYS, Gtk::POLICY_AUTOMATIC);
   foo->show();
-  Tabber->insert_page( *MainEventBox, *arrangement, pos);
+  Tabber->insert_page( *MainScroller, *arrangement, pos);
 
   }
 /**********************/

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-26 06:46:36 UTC (rev 62)
+++ trunk/src/iconmodes.cpp	2005-04-27 05:37:08 UTC (rev 63)
@@ -1,9 +1,345 @@
-/* Darimasen - iconmodes.cpp - Copyright (C) 2004 - 2005 Sudrien, GPL */
-
+/* Darimasen - iconmodes.cpp - Copyright (C) 2004 - 2005 Sudrien, GPL */
+
 #include "iconmodes.h"
 
 /**********************/
 
+void DaIconModes::proto_icon::run() const{
+
+  // double checking the file exists
+  Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
+  Gnome::Vfs::Handle read_handle;
+  try{
+    read_handle.open( path + FileName, Gnome::Vfs::OPEN_READ);
+    info = read_handle.get_file_info(
+      Gnome::Vfs::FILE_INFO_GET_MIME_TYPE );
+    }
+  catch(const Gnome::Vfs::exception& ex){
+    std::cout << "Does not exist.\n";
+    return;
+    }
+
+  Gnome::Vfs::Handle exec_handle;
+
+  Glib::ustring exec = getenv("HOME");
+  try{
+    exec += "/Choices/MIME-types/";
+    Glib::ustring tmp = FileMime;
+    exec += tmp.replace(tmp.find("/"),1,"_");
+    exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
+
+    exec += " \""  + path + FileName + "\"";
+    Glib::spawn_command_line_async(exec);
+
+    parent->parent->set_message(exec + " was run.");
+    return;
+
+    }
+  catch(const Gnome::Vfs::exception& ex){
+    }
+
+
+  try{
+    exec = exec.substr(0, exec.rfind("_"));
+    exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
+    exec += " \""  + path + FileName + "\"";
+    Glib::spawn_command_line_async(exec);
+
+    parent->parent->set_message(exec + " was run.");
+    return;
+    }
+  catch(const Gnome::Vfs::exception& ex){
+    }
+
+  try{
+    if (Gnome::Vfs::Mime::can_be_executable(FileMime)){
+      parent->parent->set_message( "Running " + path + FileName);
+      Glib::spawn_command_line_async( path + FileName );
+      return;
+      }
+   }
+      catch(const Glib::Error) {}
+
+  Gtk::MessageDialog dialog(
+    "This mimetype does not have any action associated with it.\n"
+    "should it be opened as text?",
+    false, Gtk::MESSAGE_ERROR, Gtk::BUTTONS_OK_CANCEL);
+
+
+  //Handle the response:
+  switch(dialog.run()) {
+    case(Gtk::RESPONSE_OK):
+      {
+        Glib::ustring exec = getenv("HOME");
+        exec += "/Choices/MIME-types/text";
+        exec += " \""  + path + FileName + "\"";
+        Glib::spawn_command_line_async(exec);
+        parent->parent->set_message(exec + " was opened as a text file.");
+        return;
+        }
+      break;
+    default:
+      parent->parent->set_message("Well, that was usefull.");
+      break;
+    }
+  }
+
+/**********************/
+
+void DaIconModes::proto_icon::runAsText() const{
+
+  // double checking the file exists
+  Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
+  Gnome::Vfs::Handle read_handle;
+  try{
+    read_handle.open( path + FileName, Gnome::Vfs::OPEN_READ);
+    info = read_handle.get_file_info(
+      Gnome::Vfs::FILE_INFO_GET_MIME_TYPE );
+    }
+  catch(const Gnome::Vfs::exception& ex){
+    std::cout << "Does not exist.\n";
+    return;
+    }
+
+  Gnome::Vfs::Handle exec_handle;
+  Glib::ustring exec = getenv("HOME");
+  try{
+    exec += "/Choices/MIME-types/text";
+    exec_handle.open(exec, Gnome::Vfs::OPEN_READ);
+    exec += " \""  + path + FileName + "\"";
+    Glib::spawn_command_line_async(exec);
+
+    parent->parent->set_message(exec + " was run.");
+    return;
+    }
+  catch(const Gnome::Vfs::exception& ex){}
+  }
+
+/**********************/
+
+void DaIconModes::proto_icon::SetRunAction() const{
+
+  Gnome::Vfs::Handle read_handle;
+  Glib::RefPtr<const Gnome::Vfs::FileInfo> info;
+  Glib::ustring exec_subtype;
+  Glib::ustring exec_mimetype;
+
+  try {
+    read_handle.open( path + FileName, Gnome::Vfs::OPEN_READ);
+    info = read_handle.get_file_info(
+        Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
+        Gnome::Vfs::FILE_INFO_FORCE_SLOW_MIME_TYPE );
+
+    exec_subtype  = info->get_mime_type();
+    exec_subtype  = exec_subtype.replace( exec_subtype.find("/"), 1, "_" );
+    exec_mimetype = exec_subtype.substr( 0, exec_subtype.rfind("_") );
+
+    ChooseActionDialogue * chooseAction;
+    chooseAction = new ChooseActionDialogue(exec_subtype);
+    chooseAction->show();
+    }
+  catch(const Gnome::Vfs::exception& ex) {
+    parent->parent->set_message("Err... Setting error?");
+    }
+  }
+
+/**********************/
+
+void DaIconModes::proto_icon::SetPermissions() const{
+
+
+  Gnome::Vfs::Handle read_handle;
+  Glib::RefPtr<Gnome::Vfs::FileInfo> info;
+
+  try {
+    read_handle.open( path + FileName, Gnome::Vfs::OPEN_READ);
+    info = read_handle.get_file_info(Gnome::Vfs::FILE_INFO_GET_ACCESS_RIGHTS);
+
+    SetPermissionsDialogue * setPermissions;
+    setPermissions = new SetPermissionsDialogue(info,path);
+    setPermissions->show();
+    }
+  catch(const Gnome::Vfs::exception& ex) {
+    parent->parent->set_message("Err... Setting error?");
+    }
+  }
+
+/**********************/
+
+void DaIconModes::proto_icon::release_select(GdkEventButton* event){
+
+  if ((event->type == GDK_BUTTON_RELEASE) && (event->button == 1)  && (parent->lastclick < event->time)){
+    parent->lastclick = event->time + 1000;
+    run();
+    }
+  }
+
+/**********************/
+
+void DaIconModes::proto_icon::press_select(GdkEventButton* event){
+  if ((event->type == GDK_BUTTON_PRESS) && (event->button == 3)){
+
+    for( int i=10; i > 0; i--)
+      parent->prompt.items().pop_back();
+
+    parent->prompt.items().push_back(
+      Gtk::Menu_Helpers::MenuElem("Open \"" + FileName + "\"",
+        sigc::mem_fun(*this,&DaIconModes::proto_icon::run)));
+
+    parent->prompt.items().push_back(
+      Gtk::Menu_Helpers::MenuElem("Open as text ",
+        sigc::mem_fun(*this, &DaIconModes::proto_icon::runAsText)));
+
+    parent->prompt.items().push_back(
+      Gtk::Menu_Helpers::SeparatorElem());
+
+    parent->prompt.items().push_back(
+      Gtk::Menu_Helpers::MenuElem("Set Run Action...",
+        sigc::mem_fun(*this, &DaIconModes::proto_icon::SetRunAction)));
+
+    parent->prompt.items().push_back(
+      Gtk::Menu_Helpers::MenuElem("Permissions...",
+        sigc::mem_fun(*this, &DaIconModes::proto_icon::SetPermissions)));
+
+
+    parent->prompt.items().push_back( Gtk::Menu_Helpers::SeparatorElem());
+
+    parent->prompt.items().push_back(
+      Gtk::Menu_Helpers::MenuElem("Copy To...",
+        sigc::mem_fun(*this, &DaIconModes::proto_icon::copy)));
+
+    parent->prompt.items().push_back(
+      Gtk::Menu_Helpers::MenuElem("Move To...",
+        sigc::mem_fun(*this, &DaIconModes::proto_icon::move)));
+
+    parent->prompt.items().push_back(
+      Gtk::Menu_Helpers::MenuElem("Link To...",
+        sigc::mem_fun(*this, &DaIconModes::proto_icon::link)));
+
+    parent->prompt.items().push_back(
+      Gtk::Menu_Helpers::MenuElem("Delete ",
+        sigc::mem_fun(*this, &DaIconModes::proto_icon::unlinkify)));
+
+
+    parent->prompt.popup(event->button, event->time);
+    }
+  }
+
+/**********************/
+
+DaIconModes::proto_icon::proto_icon(
+      DaIconModes& getParent,
+      Glib::ustring getPath,
+      const Glib::RefPtr<const Gnome::Vfs::FileInfo> getFile) {
+
+  path = getPath;
  parent = &getParent;
+
+  icon = parent->getIcon(getFile->get_mime_type());
+
+  FileName = getFile->get_name();
+
+  if (getFile->get_name().length() > 25){
+    int last = getFile->get_name().rfind(".");
+    if (last != -1){
+      ShortFileName = getFile->get_name().substr(0, 20) + ".." + getFile->get_name().substr(last);
+      }
+    else {
+      ShortFileName = getFile->get_name().substr(0,22) + "...";
+      }
+    }
+  else {
+  ShortFileName = getFile->get_name();
+  }
+
+  FileMime = getFile->get_mime_type();
+
+  guint size = getFile->get_size();
+  if(size < 1024)
+    FileSize = int2ustr(size) + " B";
+  else if (size < 1048576)
+    FileSize = int2ustr(size / 1024) + " KB";
+  else
+    FileSize = int2ustr(size / 1048576) + " MB";
+
+  hidden = (getFile->get_name().substr(0,1) == ".");
+  };
+
+/**********************/
+
+DaIconModes::proto_icon::~proto_icon(){
+  std::cout << "proto deleted";
+  }
+
+/**********************/
+
+DaIconModes::Sidecon::Sidecon(proto_icon & in){
+
+  Arrange = new Gtk::Table();
+  source = &in;
+
+  Icon = new Gtk::Image(source->icon->scale_simple(48,48,Gdk::INTERP_TILES));
+  Arrange->attach(*Icon, 0, 1, 0, 3, Gtk::FILL, Gtk::FILL, 0, 0);
+
+  ShortName = new Gtk::Label(" " + source->ShortFileName);
+  ShortName->set_alignment(0,0.5);
+  Arrange->attach(*ShortName, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+
+  Mime = new Gtk::Label(" " + source->FileMime);
+  Mime->set_alignment(0,0.5);
+  Arrange->attach(*Mime, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+
+  Size = new Gtk::Label(" " + source->FileSize);
+  Size->set_alignment(0,0.5);
+  Arrange->attach(*Size, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+
+  add(*Arrange);
+  show_all_children();
+
+  signal_button_press_event().connect_notify(
+    sigc::mem_fun(*source, &DaIconModes::proto_icon::press_select));
+  signal_button_release_event().connect_notify(
+    sigc::mem_fun(*source, &DaIconModes::proto_icon::release_select));
+
+  }
+
+/**********************/
+
+DaIconModes::Sidecon::~Sidecon(){
+
+  }
+
+/**********************/
+
+DaIconModes::Listview::Listview(proto_icon & in){
+
+  source = &in;
+  Arrange = new Gtk::Table();
+
+  Icon = new Gtk::Image(source->icon->scale_simple(16,16,Gdk::INTERP_TILES));
+  Arrange->attach(*Icon, 0, 1, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
+
+  Name = new Gtk::Label(" " + source->ShortFileName);
+  Name->set_alignment(0,0.5);
+  Arrange->attach(*Name, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
+
+  add(*Arrange);
+  show_all_children();
+
+  signal_button_press_event().connect_notify(
+    sigc::mem_fun(*source, &DaIconModes::proto_icon::press_select));
+  signal_button_release_event().connect_notify(
+    sigc::mem_fun(*source, &DaIconModes::proto_icon::release_select));
+
+  }
+
+/**********************/
+
+DaIconModes::Listview::~Listview(){
+
+  }
+
+/**********************/
+
 DaIconModes::ChooseActionDialogue::ChooseActionDialogue(Glib::ustring mimeType){
 
   mime = mimeType;
@@ -335,67 +671,75 @@
     bool recursing_will_loop,
     bool recurse) {
 
-if (info->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY){
-filesAtPath++;
-    Gtk::TreeModel::Row row = *(m_refTreeModel->append());
+  if (info->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY){
+    iconlist[slotsUsed++] = new proto_icon(*this, parent->get_history(position), info);
+    }
 
-    row[iconlist->m_col_icon] = getIcon(info->get_mime_type());
+  return true;
+  }
 
-    row[iconlist->m_col_name] = info->get_name();
+/**********************/
 
+void DaIconModes::on_size_allocate(Gtk::Allocation& allocation){
 
-	Glib::ustring sized;
-        if( info->get_size() < 1024 ){
-          sized = (int2ustr(info->get_size()) + " B");
-          }
-        else if ( info->get_size() < (1024 * 1024) ){
-          sized = (int2ustr(info->get_size() / 1024) + " KB");
-          }
-        else{
-          sized = (int2ustr(info->get_size() / 1048576) + " MB");
-          }
-          row[iconlist->m_col_size] = sized;
+  int oldie = IconsHigh;
 
-
-        row[iconlist->m_col_mime] = info->get_mime_type();
-
-
-
-        row[iconlist->m_col_all] = (info->get_name().substr(0,25) + "\n" + sized + "\n" + info->get_mime_type().substr(0,25));
-
-
-//  if (info->get_type() != Gnome::Vfs::FILE_TYPE_DIRECTORY){
-//    iconlist[slotsUsed++] = new proto_icon(*this, parent->get_history(position), info);
+  switch(mode){
+    case 0:
+      IconsHigh = allocation.get_height() / 57;
+      break;
+    case 1:
+      IconsHigh = allocation.get_height() / 25;
+      break;
     }
+  if ( oldie != IconsHigh ){ //if resize is needed
+    Gtk::Widget * tmp = get_child();
+    redraw();
+    }
 
-  return true;
+  Gtk::EventBox::on_size_allocate(allocation);
   }
 
 /**********************/
 
-void DaIconModes::on_size_allocate(Gtk::Allocation& allocation){
+void DaIconModes::redraw(){
+  Gtk::Widget * tmp = get_child();
+  
+  if (tmp)
+    delete tmp; // actually DisposableTable, but segfaulted otherwise
 
- switch(mode){
-   case 0:
-     
-       m_TreeView.set_columns((filesAtPath - 1)/(allocation.get_height() / 60) + 1);
-  /*
-    // std::vector<guint> * order = new std::vector<guint>;
-     for(int i = 0; i < (allocation.get_height() / 60); i++){
-       for(int j = 0; j < filesAtPath; j += (allocation.get_height() / 60)){
-         std::cout<< i+j << "\n";//order->push_back(j+i);
-	 }
-       }
+  Gtk::Table * DisposableTable = new Gtk::Table((filesAtPath)/IconsHigh+1,IconsHigh);
+  add(*DisposableTable);
 
-*/
-     break;
-   case 1:
-     m_TreeView.set_columns(filesAtPath/(allocation.get_height() / 30) + 1);       
-     break;
-     }   
-  Gtk::EventBox::on_size_allocate(allocation);
+  int y_pos = 0;
+  int x_pos = 0;
+
+  for(int i = 0; i < slotsUsed; i++){
+    if(  !iconlist[i]->hidden || parent->optShowHidden->get_active()){
+      switch(mode){
+        case 0:
+          Sidecon * tmpSidecon = new Sidecon(*iconlist[i]);
+          DisposableTable->attach( *tmpSidecon, x_pos, x_pos+1, y_pos, y_pos+1,Gtk::FILL, Gtk::FILL, 4, 4);
+          break;
+        case 1:
+          Listview * tmpListview = new Listview(*iconlist[i]);
+          DisposableTable->attach( *tmpListview, x_pos, x_pos+1, y_pos, y_pos+1,Gtk::FILL, Gtk::FILL, 4, 4);
+          break;
+        }
+
+      y_pos++; 
+      if(parent->get_mode() == 0 || parent->get_mode() == 1){
+        if ( y_pos + 1 > IconsHigh){
+          y_pos = 0;
+          x_pos++;
+          }
+        }
+      }
+    }
+  DisposableTable->show();
+  DisposableTable->show_all_children();
   }
-
+
 /**********************/
 
 DaIconModes::DaIconModes(
@@ -409,47 +753,32 @@
   lastclick = 0;  // a double-click detector. 
   filesAtPath = 0; // count files in directory
 
+  try{  //count up the files in the directory. 
+    Gnome::Vfs::DirectoryHandle handle;
+    handle.open(parent->get_history(position), Gnome::Vfs::FILE_INFO_DEFAULT);
+    bool file_exists = true;
+    while(file_exists){
+      handle.read_next(file_exists);
+      filesAtPath++;
+      }
+    }
+  catch(const Gnome::Vfs::exception&){}
+
   set_visible_window(false);
 
-
-  Gtk::ScrolledWindow * MainScroller = Gtk::manage(new Gtk::ScrolledWindow);
-  MainScroller->show();
-  MainScroller->set_policy(Gtk::POLICY_ALWAYS, Gtk::POLICY_NEVER);
-  add(*MainScroller);
-  iconlist = new proto_icon;
-  MainScroller->add(m_TreeView);
-  m_TreeView.show();
-  m_refTreeModel = Gtk::ListStore::create(*iconlist);
-  m_TreeView.set_model(m_refTreeModel);
-
-
-
-  m_TreeView.set_text_column(iconlist->m_col_all);
-  m_TreeView.set_pixbuf_column(iconlist->m_col_icon);
-  m_TreeView.set_orientation(Gtk::ORIENTATION_HORIZONTAL );
-           m_TreeView.show_all_children();
-
+  iconlist = new proto_icon*[filesAtPath];
+  slotsUsed = 0;
+  IconsHigh = 0;
   try { // make all those files into proto_icons
     Gnome::Vfs::DirectoryHandle::visit(
       parent->get_history(position),
       Gnome::Vfs::FILE_INFO_GET_MIME_TYPE |
-      Gnome::Vfs::FILE_INFO_FORCE_FAST_MIME_TYPE |
       Gnome::Vfs::FILE_INFO_FOLLOW_LINKS ,
       Gnome::Vfs::DIRECTORY_VISIT_LOOPCHECK,
       sigc::mem_fun(*this,&DaIconModes::addEntry));
     }
   catch(const Gnome::Vfs::exception& ex){}
 
-  m_TreeView.set_item_width( m_TreeView.get_icon_width()+ 235);
-  m_TreeView.signal_button_press_event().connect_notify(
-    sigc::bind<Glib::ustring>(
-sigc::mem_fun(*this,&DaIconModes::icon_selected), "ha!"
-
-
-// IconList->set_default_sort_func( sigc::mem_fun(*this, &DaIconModes::on_model_sort) );
-));
-
-
   }
 
 /**********************/
@@ -462,30 +791,280 @@
 
  void DaIconModes::SwitchHidden(guint pos){
 
-position = pos;/*
+position = pos;
 if (parent->optShowHidden->get_active())
     parent->set_message("Showing Hidden Files");
 else
     parent->set_message("Hidden Files are hidden again");
-*/
+
+  redraw();
   }
 
 /**********************/
+/**********************/
 
-void DaIconModes::icon_selected(GdkEventButton* event, Glib::ustring file){
-  if( (event->type == GDK_2BUTTON_PRESS) && (event->button == 1)){
+DaIconModes::CopyDialogue::CopyDialogue(Glib::ustring file, Darimasen& parent){
 
-    //RunFile(file);
-    //m_Menu_Popup.popup(event->button, event->time);
+grandparent = &parent;
+   cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
+   okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
+   label = Gtk::manage(new class Gtk::Label(file));
+   entry = Gtk::manage(new class Gtk::Entry());
 
-    std::vector<Gtk::TreePath> refSelection =   m_TreeView.get_selected_items();
-    if(refSelection.size() > 0){
-      std::cout << "Running File :" << refSelection[0].to_string() << "\n";
-      Gtk::TreeModel::Row row = *(m_refTreeModel->get_iter(refSelection[0]));
-      std::cout <<  parent->get_history(position) << row[iconlist->m_col_name] << "\n";
-      }
-    }
+   okbutton->set_flags(Gtk::CAN_FOCUS);
+   okbutton->set_flags(Gtk::CAN_DEFAULT);
+   cancelbutton->set_flags(Gtk::CAN_FOCUS);
+
+   set_title("Copy File to");
+   set_modal(true);
+
+   get_vbox()->pack_start(*label, Gtk::PACK_SHRINK, 0);
+   get_vbox()->pack_start(*entry, Gtk::PACK_SHRINK, 0);
+
+
+   entry->set_text(file);
+
+   add_action_widget(*cancelbutton, -6);
+   add_action_widget(*okbutton, -5);
+
+
+   okbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::CopyDialogue::onOk));
+   cancelbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::CopyDialogue::onCancel));
+
+
+   show_all_children();
   }
 
+/**********************/
 
+void DaIconModes::CopyDialogue::onOk(){
+//  std::cout << "copying " << label->get_text()
+//    << "\nto " << entry->get_text() << "\n\n";
+
+//rename(label->get_text().c_str(), entry->get_text().c_str());
+    Glib::spawn_command_line_async((Glib::ustring)"cp \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str()+ "\"");
+
+  grandparent->updateView(
+    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
+    entry->get_text().substr(0, entry->get_text().rfind(slash,entry->get_text().length())+1));
+
+  hide();
+  }
+
 /**********************/
+
+void DaIconModes::CopyDialogue::onCancel(){
+  hide();
+  }
+
+/**********************/
+
+DaIconModes::CopyDialogue::~CopyDialogue(){}
+
+/**********************/
+/**********************/
+
+DaIconModes::MoveDialogue::MoveDialogue(Glib::ustring file, Darimasen& parent){
+
+grandparent = &parent;
+   cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
+   okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
+   label = Gtk::manage(new class Gtk::Label(file));
+   entry = Gtk::manage(new class Gtk::Entry());
+
+   okbutton->set_flags(Gtk::CAN_FOCUS);
+   okbutton->set_flags(Gtk::CAN_DEFAULT);
+   cancelbutton->set_flags(Gtk::CAN_FOCUS);
+
+   set_title("Move File to");
+   set_modal(true);
+
+   get_vbox()->pack_start(*label, Gtk::PACK_SHRINK, 0);
+   get_vbox()->pack_start(*entry, Gtk::PACK_SHRINK, 0);
+
+
+   entry->set_text(file);
+
+   add_action_widget(*cancelbutton, -6);
+   add_action_widget(*okbutton, -5);
+
+
+   okbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::MoveDialogue::onOk));
+   cancelbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::MoveDialogue::onCancel));
+
+
+   show_all_children();
+  }
+
+/**********************/
+
+void DaIconModes::MoveDialogue::onOk(){
+//  std::cout << "moveing " << label->get_text()
+//    << "\nto " << entry->get_text() << "\n\n";
+
+ // rename(label->get_text().c_str(), entry->get_text().c_str());
+
+    Glib::spawn_command_line_async((Glib::ustring)"mv \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str()+ "\"");
+
+  grandparent->updateView(
+    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
+    entry->get_text().substr(0, entry->get_text().rfind(slash,entry->get_text().length())+1));
+
+  hide();
+  }
+
+/**********************/
+
+void DaIconModes::MoveDialogue::onCancel(){
+  hide();
+  }
+
+/**********************/
+
+DaIconModes::MoveDialogue::~MoveDialogue(){}
+
+/**********************/
+/**********************/
+
+DaIconModes::LinkDialogue::LinkDialogue(Glib::ustring file, Darimasen& parent){
+
+grandparent = &parent;
+   cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
+   okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
+   label = Gtk::manage(new class Gtk::Label(file));
+   entry = Gtk::manage(new class Gtk::Entry());
+
+   okbutton->set_flags(Gtk::CAN_FOCUS);
+   okbutton->set_flags(Gtk::CAN_DEFAULT);
+   cancelbutton->set_flags(Gtk::CAN_FOCUS);
+
+   set_title("Link File to");
+   set_modal(true);
+
+   get_vbox()->pack_start(*label, Gtk::PACK_SHRINK, 0);
+   get_vbox()->pack_start(*entry, Gtk::PACK_SHRINK, 0);
+
+
+   entry->set_text(file);
+
+   add_action_widget(*cancelbutton, -6);
+   add_action_widget(*okbutton, -5);
+
+
+   okbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::LinkDialogue::onOk));
+   cancelbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::LinkDialogue::onCancel));
+
+
+   show_all_children();
+  }
+
+/**********************/
+
+void DaIconModes::LinkDialogue::onOk(){
+//  std::cout << "linking " << label->get_text()
+ //   << "\nto " << entry->get_text() << "\n\n";
+
+  //symlink(label->get_text().c_str(), entry->get_text().c_str());
+    Glib::spawn_command_line_async((Glib::ustring)"ln -s \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str() + "\"");
+
+  grandparent->updateView(
+    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
+    entry->get_text().substr(0, entry->get_text().rfind(slash,entry->get_text().length())+1));
+
+  hide();
+  }
+
+/**********************/
+
+void DaIconModes::LinkDialogue::onCancel(){
+  hide();
+  }
+
+/**********************/
+
+DaIconModes::LinkDialogue::~LinkDialogue(){}
+
+/**********************/
+/**********************/
+
+DaIconModes::DeleteDialogue::DeleteDialogue(Glib::ustring file, Darimasen& parent){
+
+grandparent = &parent;
+   cancelbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
+   okbutton = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
+   label = Gtk::manage(new class Gtk::Label(file));
+
+   okbutton->set_flags(Gtk::CAN_FOCUS);
+   okbutton->set_flags(Gtk::CAN_DEFAULT);
+   cancelbutton->set_flags(Gtk::CAN_FOCUS);
+
+   set_title("Delete File");
+   set_modal(true);
+
+   get_vbox()->pack_start(*label, Gtk::PACK_SHRINK, 0);
+
+   add_action_widget(*cancelbutton, -6);
+   add_action_widget(*okbutton, -5);
+
+
+   okbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::DeleteDialogue::onOk));
+   cancelbutton->signal_clicked().connect_notify(sigc::mem_fun(*this, &DaIconModes::DeleteDialogue::onCancel));
+
+
+   show_all_children();
+  }
+
+/**********************/
+
+void DaIconModes::DeleteDialogue::onOk(){
+//  std::cout << "delete " << label->get_text() << "\n\n";
+
+ // unlink( label->get_text().c_str() );
+  Glib::spawn_command_line_async((Glib::ustring)"rm \""  + label->get_text().c_str() + "\"");
+
+  grandparent->updateView(
+    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
+    label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1));
+   //std::cout << label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1) ;
+  hide();
+  }
+
+/**********************/
+
+void DaIconModes::DeleteDialogue::onCancel(){
+  hide();
+  }
+
+/**********************/
+
+DaIconModes::DeleteDialogue::~DeleteDialogue(){}
+
+/**********************/
+
+void DaIconModes::proto_icon::copy() {
+  CopyDialogue * cp =  new CopyDialogue( path + FileName , *parent->parent);
+  cp->show();
+  }
+
+/**********************/
+
+void DaIconModes::proto_icon::move() {
+  MoveDialogue * mv =  new MoveDialogue( path + FileName , *parent->parent);
+  mv->show();
+  }
+
+/**********************/
+
+void DaIconModes::proto_icon::link() {
+  LinkDialogue * ln =  new LinkDialogue( path + FileName , *parent->parent);
+  ln->show();
+  }
+
+/**********************/
+
+void DaIconModes::proto_icon::unlinkify() {
+  DeleteDialogue * del =  new DeleteDialogue( path + FileName , *parent->parent);
+  del->show();
+  }
+
+/**********************/

Modified: trunk/src/iconmodes.h
===================================================================
--- trunk/src/iconmodes.h	2005-04-26 06:46:36 UTC (rev 62)
+++ trunk/src/iconmodes.h	2005-04-27 05:37:08 UTC (rev 63)
@@ -1,6 +1,6 @@
-/* Darimasen - iconmodes.h - Copyright (C) 2004 - 2005 Sudrien, GPL */
-
-#ifndef ICONMODES_H
+/* Darimasen - iconmodes.h - Copyright (C) 2004 - 2005 Sudrien, GPL */
+
+#ifndef ICONMODES_H
 #define ICONMODES_H
 
 
@@ -8,35 +8,68 @@
 #include <libgnomevfsmm.h>
 #include <gtkmm/table.h>
 #include <gdkmm/pixbuf.h>
-#include <gtkmm/entry.h>
+#include <gtkmm/entry.h>
 #include <gtkmm/messagedialog.h>
 #include <gtkmm/separator.h>
-#include <gtkmm/liststore.h>
-#include <gtkmm/iconview.h>
+
 /**********************/
 
 class DaIconModes : public Gtk::EventBox {
 
-  class proto_icon : public Gtk::TreeModel::ColumnRecord {
+  class proto_icon {
+    Glib::ustring path;
    DaIconModes * parent;
+
+    void run() const;
+    void runAsText() const;
+    void SetRunAction() const;
+    void SetPermissions() const;
+    void copy();
+    void move();
+    void link();
+    void unlinkify();
+
   public:
 
-    proto_icon(){
-      add(m_col_icon);
-      add(m_col_name);
-      add(m_col_size);
-      add(m_col_mime);
-      add(m_col_all);
-      }
+    Glib::RefPtr<Gdk::Pixbuf> icon;
+    Glib::ustring FileName;
+    Glib::ustring ShortFileName;
+    Glib::ustring FileMime;
+    Glib::ustring FileSize;
+    bool hidden;
 
-    Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > m_col_icon;
-    Gtk::TreeModelColumn<Glib::ustring> m_col_name;
-    Gtk::TreeModelColumn<Glib::ustring> m_col_size;
-    Gtk::TreeModelColumn<Glib::ustring> m_col_mime;
+    void press_select(GdkEventButton*);
+    void release_select(GdkEventButton*);
 
-    Gtk::TreeModelColumn<Glib::ustring> m_col_all;
+    proto_icon(DaIconModes&, Glib::ustring, const Glib::RefPtr<const Gnome::Vfs::FileInfo>);
+    ~proto_icon();
+    };
+
+  class Sidecon : public Gtk::EventBox {
+    proto_icon * source;
+
+    Gtk::Table * Arrange;
+    Gtk::Image * Icon;
+    Gtk::Label * ShortName;
+    Gtk::Label * Mime;
+    Gtk::Label * Size;
+
+  public:
+    Sidecon(proto_icon&);
+    ~Sidecon();
   };
 
+  class Listview : public Gtk::EventBox {
+    proto_icon * source;
 
+    Gtk::Table * Arrange;
+    Gtk::Image * Icon;
+    Gtk::Label * Name;
+
+  public:
+    Listview(proto_icon&);
+    ~Listview();
+  };
+
   class ChooseActionDialogue : public Gtk::Dialog {
     Gtk::RadioButton::Group _RadioBGroup_radiobutton1;
     Gtk::Button *cancelbutton1, *okbutton1;
@@ -70,14 +103,18 @@
     Gtk::Button * button1;
     Gtk::Button * button2;
 
-    Gtk::CheckButton * u_r, * u_w, * u_x,* g_r, * g_w, * g_x, * o_r, * o_w, * o_x;
+    Gtk::CheckButton * u_r, * u_w, * u_x;
+    Gtk::CheckButton * g_r, * g_w, * g_x;
+    Gtk::CheckButton * o_r, * o_w, * o_x;
     
     Gnome::Vfs::Handle info;
 
     Gtk::VSeparator * extra;
     Gtk::CheckButton * sticky, * GID, * UID;
 
-    Gtk::Label * user, * group, * others, * read, * write, * run, * explaination;
+    Gtk::Label * user, * group, * others;
+    Gtk::Label * read, * write, * run;
+    Gtk::Label * explaination;
 
     Gtk::Table * layout;
     void cancled();
@@ -89,56 +126,88 @@
     ~SetPermissionsDialogue();
     };
 
+  class CopyDialogue : public Gtk::Dialog {
+    class Gtk::Button * cancelbutton;
+    class Gtk::Button * okbutton;
+    class Gtk::Label * label;
+    class Gtk::Entry * entry;
+    void onOk();
+    void onCancel();
 
+    class Darimasen * grandparent;
+
+  public:
+    CopyDialogue(Glib::ustring, Darimasen&);
+    ~CopyDialogue();
+    };
+//
+  class LinkDialogue : public Gtk::Dialog {
+    class Gtk::Button * cancelbutton;
+    class Gtk::Button * okbutton;
+    class Gtk::Label * label;
+    class Gtk::Entry * entry;
+    void onOk();
+    void onCancel();
+
+    class Darimasen * grandparent;
+
+  public:
+    LinkDialogue(Glib::ustring, Darimasen&);
+    ~LinkDialogue();
+    };
+//
+  class MoveDialogue : public Gtk::Dialog {
+    class Gtk::Button * cancelbutton;
+    class Gtk::Button * okbutton;
+    class Gtk::Label * label;
+    class Gtk::Entry * entry;
+    void onOk();
+    void onCancel();
+
+    class Darimasen * grandparent;
+
+  public:
+    MoveDialogue(Glib::ustring, Darimasen&);
+    ~MoveDialogue();
+    };
+//
+  class DeleteDialogue : public Gtk::Dialog {
+    class Gtk::Button * cancelbutton;
+    class Gtk::Button * okbutton;
+    class Gtk::Label * label;
+    void onOk();
+    void onCancel();
+
+    class Darimasen * grandparent;
+
+  public:
+    DeleteDialogue(Glib::ustring, Darimasen&);
+    ~DeleteDialogue();
+    };
+
   Glib::RefPtr<Gdk::Pixbuf> getIcon(Glib::ustring);
   bool addEntry(Glib::ustring, Glib::RefPtr<const Gnome::Vfs::FileInfo>, bool, bool);
   void on_size_allocate(Gtk::Allocation&);
+  void redraw();
 
-
   class Darimasen * parent;
-  gint position;
+  guint position;
   guint32 lastclick;
-  gint filesAtPath;
+  guint filesAtPath;
   gshort mode;
+  proto_icon ** iconlist;
+  guint slotsUsed;
+  guint IconsHigh;
+  Gtk::Menu prompt;
 
-  proto_icon * iconlist;
-  Gtk::IconView m_TreeView;
-  Glib::RefPtr<Gtk::ListStore> m_refTreeModel;
 
-void icon_selected(GdkEventButton*, Glib::ustring);
-
-/*
-int on_model_sort(const Gtk::TreeModel::iterator& a, const Gtk::TreeModel::iterator& b)
-{
-  ///* We need this function because we want to sort
-   //* folders before files.
-   
-
-  Gtk::TreeModel::Row row_a = *a;
-  Gtk::TreeModel::Row row_b = *b;
-  
-  const bool a_is_dir = row_a[iconlist->is_directory];
-  const bool b_is_dir = row_b[m_columns.is_directory];
-    
-  if(!a_is_dir && b_is_dir)
-    return 1;
-  else if (a_is_dir && !b_is_dir)
-    return -1;
-  else
-  {
-    Glib::ustring name_a = row_a[m_columns.display_name];
-    return name_a.compare( row_b[m_columns.display_name] );
-  }
-}
-*/
-
 public:
-  ~DaIconModes();
+  ~DaIconModes();
   DaIconModes(guint, class Darimasen&);
 
   void SwitchHidden(guint);
 };
 
-/**********************/
-
-#endif //ICONMODES_H
+/**********************/
+
+#endif //ICONMODES_H



From darimasen-svn-admin at lists.berlios.de  Sat Apr 30 23:21:49 2005
From: darimasen-svn-admin at lists.berlios.de (darimasen-svn-admin at lists.berlios.de)
Date: Sat, 30 Apr 2005 23:21:49 +0200
Subject: [Darimasen-svn] r64 - in trunk: . src
Message-ID: <200504302121.j3ULLnX2026075@sheep.berlios.de>

Author: sudrien
Date: 2005-04-30 23:21:46 +0200 (Sat, 30 Apr 2005)
New Revision: 64

Removed:
   trunk/acinclude.m4
   trunk/src/prefix.c
   trunk/src/prefix.h
Modified:
   trunk/configure.in
   trunk/darimasen-0.0.8.ebuild
   trunk/darimasen-svn-0.1.ebuild
   trunk/src/Makefile.am
   trunk/src/darimasen.cpp
   trunk/src/iconmodes.cpp
   trunk/src/main.h
Log:
binreloc removed, 3.3 fix

Deleted: trunk/acinclude.m4
===================================================================
--- trunk/acinclude.m4	2005-04-27 05:37:08 UTC (rev 63)
+++ trunk/acinclude.m4	2005-04-30 21:21:46 UTC (rev 64)
@@ -1,77 +0,0 @@
-# Check for binary relocation support
-# Hongli Lai
-# http://autopackage.org/
-
-AC_DEFUN([AM_BINRELOC],
-[
-	AC_ARG_ENABLE(binreloc,
-		[  --enable-binreloc       compile with binary relocation support
-                          (default=enable when available)],
-		enable_binreloc=$enableval,enable_binreloc=auto)
-
-	AC_ARG_ENABLE(binreloc-threads,
-		[  --enable-binreloc-threads      compile binary relocation with threads support
-	                         (default=yes)],
-		enable_binreloc_threads=$enableval,enable_binreloc_threads=yes)
-
-	BINRELOC_CFLAGS=
-	BINRELOC_LIBS=
-	if test "x$enable_binreloc" = "xauto"; then
-		AC_CHECK_FILE([/proc/self/maps])
-		AC_CACHE_CHECK([whether everything is installed to the same prefix],
-			       [br_cv_valid_prefixes], [
-				if test "$bindir" = '${exec_prefix}/bin' -a "$sbindir" = '${exec_prefix}/sbin' -a \
-					"$datadir" = '${prefix}/share' -a "$libdir" = '${exec_prefix}/lib' -a \
-					"$libexecdir" = '${exec_prefix}/libexec' -a "$sysconfdir" = '${prefix}/etc'
-				then
-					br_cv_valid_prefixes=yes
-				else
-					br_cv_valid_prefixes=no
-				fi
-				])
-	fi
-	AC_CACHE_CHECK([whether binary relocation support should be enabled],
-		       [br_cv_binreloc],
-		       [if test "x$enable_binreloc" = "xyes"; then
-		       	       br_cv_binreloc=yes
-		       elif test "x$enable_binreloc" = "xauto"; then
-			       if test "x$br_cv_valid_prefixes" = "xyes" -a \
-			       	       "x$ac_cv_file__proc_self_maps" = "xyes"; then
-				       br_cv_binreloc=yes
-			       else
-				       br_cv_binreloc=no
-			       fi
-		       else
-			       br_cv_binreloc=no
-		       fi])
-
-	if test "x$br_cv_binreloc" = "xyes"; then
-		BINRELOC_CFLAGS="-DENABLE_BINRELOC"
-		AC_DEFINE(ENABLE_BINRELOC,,[Use binary relocation?])
-		if test "x$enable_binreloc_threads" = "xyes"; then
-			AC_CHECK_LIB([pthread], [pthread_getspecific])
-		fi
-
-		AC_CACHE_CHECK([whether binary relocation should use threads],
-			       [br_cv_binreloc_threads],
-			       [if test "x$enable_binreloc_threads" = "xyes"; then
-					if test "x$ac_cv_lib_pthread_pthread_getspecific" = "xyes"; then
-						br_cv_binreloc_threads=yes
-					else
-						br_cv_binreloc_threads=no
-					fi
-			        else
-					br_cv_binreloc_threads=no
-				fi])
-
-		if test "x$br_cv_binreloc_threads" = "xyes"; then
-			BINRELOC_LIBS="-lpthread"
-			AC_DEFINE(BR_PTHREAD,1,[Include pthread support for binary relocation?])
-		else
-			BINRELOC_CFLAGS="$BINRELOC_CFLAGS -DBR_PTHREADS=0"
-			AC_DEFINE(BR_PTHREAD,0,[Include pthread support for binary relocation?])
-		fi
-	fi
-	AC_SUBST(BINRELOC_CFLAGS)
-	AC_SUBST(BINRELOC_LIBS)
-])

Modified: trunk/configure.in
===================================================================
--- trunk/configure.in	2005-04-27 05:37:08 UTC (rev 63)
+++ trunk/configure.in	2005-04-30 21:21:46 UTC (rev 64)
@@ -13,7 +13,6 @@
 AC_PROG_CXX
 AC_PROG_CXXCPP
 AM_PROG_LIBTOOL
-AM_BINRELOC
 
 AC_LANG_CPLUSPLUS
 

Modified: trunk/darimasen-0.0.8.ebuild
===================================================================
--- trunk/darimasen-0.0.8.ebuild	2005-04-27 05:37:08 UTC (rev 63)
+++ trunk/darimasen-0.0.8.ebuild	2005-04-30 21:21:46 UTC (rev 64)
@@ -23,7 +23,7 @@
 
 src_compile() {
 
-	./configure --prefix=/usr ${myconf} || die
+	econf || die
 	emake || die
 }
 

Modified: trunk/darimasen-svn-0.1.ebuild
===================================================================
--- trunk/darimasen-svn-0.1.ebuild	2005-04-27 05:37:08 UTC (rev 63)
+++ trunk/darimasen-svn-0.1.ebuild	2005-04-30 21:21:46 UTC (rev 64)
@@ -99,7 +99,7 @@
 src_compile() {
 	export WANT_AUTOCONF=2.5
 
-	./configure --prefix=/usr ${myconf} || die
+	econf || die
 	emake || die
 }
 

Modified: trunk/src/Makefile.am
===================================================================
--- trunk/src/Makefile.am	2005-04-27 05:37:08 UTC (rev 63)
+++ trunk/src/Makefile.am	2005-04-30 21:21:46 UTC (rev 64)
@@ -7,8 +7,7 @@
 	supplimental.cpp \
         firsttime.cpp \
 	main.cpp \
-	damenu.cpp \
-        prefix.c
+	damenu.cpp 
 
 noinst_HEADERS = \
 	darimasen.h \
@@ -16,10 +15,8 @@
 	supplimental.h \
         firsttime.h \
 	main.h \
-	damenu.h \
-        prefix.h
+	damenu.h 
 
+AM_CXXFLAGS = -I../.. @PKG_CFLAGS@
 
-AM_CXXFLAGS = -I../.. @PKG_CFLAGS@ @BINRELOC_CFLAGS@
-
 darimasen_LDADD = -lpthread @LIBS@ @PKG_LIBS@ 

Modified: trunk/src/darimasen.cpp
===================================================================
--- trunk/src/darimasen.cpp	2005-04-27 05:37:08 UTC (rev 63)
+++ trunk/src/darimasen.cpp	2005-04-30 21:21:46 UTC (rev 64)
@@ -184,9 +184,14 @@
   mode = 0;
 
   try{
-    set_icon_from_file( (Glib::ustring)DATADIR + (Glib::ustring)"/icons/hicolor/48x48/apps/darimasen.png"  );
-  }
-  catch(const Glib::Error) {/*non-existant file OR folder*/}
+    set_icon_from_file( "/usr/share/icons/hicolor/48x48/apps/darimasen.png"  );
+    }
+  catch(const Glib::Error) {
+    try{
+      set_icon_from_file( "../pixmaps/48x48/darimasen.png"  );
+      }
+    catch(const Glib::Error) {}
+    }
   add(VerticalOrganizer);
   VerticalOrganizer.show();
 
@@ -336,8 +341,18 @@
 /**********************/
 
 Darimasen::aboutDa::aboutDa(){
-  image1 = new class Gtk::Image(  Gdk::Pixbuf::create_from_file( 
-    (Glib::ustring)DATADIR + (Glib::ustring)"/pixmaps/darimasenInfo.svg" ) );
+  try{
+    image1 = new class Gtk::Image(  Gdk::Pixbuf::create_from_file( 
+      "/usr/share/pixmaps/darimasenInfo.svg" ) );
+    }
+  catch(const Glib::Error) {
+    try{
+      set_icon_from_file( "../pixmaps/darimasenInfo.svg"  );
+      }
+  catch(const Glib::Error) {}
+    }
+
+
   closer = new Gtk::EventBox;
   closer->add(*image1);
   closer->signal_button_press_event().connect(

Modified: trunk/src/iconmodes.cpp
===================================================================
--- trunk/src/iconmodes.cpp	2005-04-27 05:37:08 UTC (rev 63)
+++ trunk/src/iconmodes.cpp	2005-04-30 21:21:46 UTC (rev 64)
@@ -1,5 +1,5 @@
-/* Darimasen - iconmodes.cpp - Copyright (C) 2004 - 2005 Sudrien, GPL */
-
+/* Darimasen - iconmodes.cpp - Copyright (C) 2004 - 2005 Sudrien, GPL */
+
 #include "iconmodes.h"
 
 /**********************/
@@ -232,7 +232,8 @@
       Glib::ustring getPath,
       const Glib::RefPtr<const Gnome::Vfs::FileInfo> getFile) {
 
-  path = getPath;
  parent = &getParent;
+  path = getPath;
+  parent = &getParent;
 
   icon = parent->getIcon(getFile->get_mime_type());
 
@@ -245,7 +246,7 @@
       }
     else {
       ShortFileName = getFile->get_name().substr(0,22) + "...";
-      }
+      }
     }
   else {
   ShortFileName = getFile->get_name();
@@ -705,7 +706,7 @@
 void DaIconModes::redraw(){
   Gtk::Widget * tmp = get_child();
   
-  if (tmp)
+  if (tmp)
     delete tmp; // actually DisposableTable, but segfaulted otherwise
 
   Gtk::Table * DisposableTable = new Gtk::Table((filesAtPath)/IconsHigh+1,IconsHigh);
@@ -717,13 +718,15 @@
   for(int i = 0; i < slotsUsed; i++){
     if(  !iconlist[i]->hidden || parent->optShowHidden->get_active()){
       switch(mode){
-        case 0:
+        case 0: {
           Sidecon * tmpSidecon = new Sidecon(*iconlist[i]);
           DisposableTable->attach( *tmpSidecon, x_pos, x_pos+1, y_pos, y_pos+1,Gtk::FILL, Gtk::FILL, 4, 4);
+            }
           break;
-        case 1:
+        case 1: {
           Listview * tmpListview = new Listview(*iconlist[i]);
           DisposableTable->attach( *tmpListview, x_pos, x_pos+1, y_pos, y_pos+1,Gtk::FILL, Gtk::FILL, 4, 4);
+            }
           break;
         }
 
@@ -739,7 +742,7 @@
   DisposableTable->show();
   DisposableTable->show_all_children();
   }
-
+
 /**********************/
 
 DaIconModes::DaIconModes(
@@ -838,12 +841,8 @@
 /**********************/
 
 void DaIconModes::CopyDialogue::onOk(){
-//  std::cout << "copying " << label->get_text()
-//    << "\nto " << entry->get_text() << "\n\n";
+  Glib::spawn_command_line_async((Glib::ustring)"cp \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str()+ "\"");
 
-//rename(label->get_text().c_str(), entry->get_text().c_str());
-    Glib::spawn_command_line_async((Glib::ustring)"cp \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str()+ "\"");
-
   grandparent->updateView(
     label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
     entry->get_text().substr(0, entry->get_text().rfind(slash,entry->get_text().length())+1));
@@ -899,13 +898,8 @@
 /**********************/
 
 void DaIconModes::MoveDialogue::onOk(){
-//  std::cout << "moveing " << label->get_text()
-//    << "\nto " << entry->get_text() << "\n\n";
+  Glib::spawn_command_line_async((Glib::ustring)"mv \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str()+ "\"");
 
- // rename(label->get_text().c_str(), entry->get_text().c_str());
-
-    Glib::spawn_command_line_async((Glib::ustring)"mv \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str()+ "\"");
-
   grandparent->updateView(
     label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
     entry->get_text().substr(0, entry->get_text().rfind(slash,entry->get_text().length())+1));
@@ -961,12 +955,8 @@
 /**********************/
 
 void DaIconModes::LinkDialogue::onOk(){
-//  std::cout << "linking " << label->get_text()
- //   << "\nto " << entry->get_text() << "\n\n";
+  Glib::spawn_command_line_async((Glib::ustring)"ln -s \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str() + "\"");
 
-  //symlink(label->get_text().c_str(), entry->get_text().c_str());
-    Glib::spawn_command_line_async((Glib::ustring)"ln -s \""  + label->get_text().c_str() + (Glib::ustring)"\" \"" + entry->get_text().c_str() + "\"");
-
   grandparent->updateView(
     label->get_text().substr(0, label->get_text().rfind(slash,label->get_text().length())+1),
     entry->get_text().substr(0, entry->get_text().rfind(slash,entry->get_text().length())+1));
@@ -1017,9 +1007,6 @@
 /**********************/
 
 void DaIconModes::DeleteDialogue::onOk(){
-//  std::cout << "delete " << label->get_text() << "\n\n";
-
- // unlink( label->get_text().c_str() );
   Glib::spawn_command_line_async((Glib::ustring)"rm \""  + label->get_text().c_str() + "\"");
 
   grandparent->updateView(

Modified: trunk/src/main.h
===================================================================
--- trunk/src/main.h	2005-04-27 05:37:08 UTC (rev 63)
+++ trunk/src/main.h	2005-04-30 21:21:46 UTC (rev 64)
@@ -10,7 +10,6 @@
 #include <libgnomevfsmm.h>
 #include <vector>
 #include "darimasen.h"
-#include <prefix.h>
 
 /**********************/
 

Deleted: trunk/src/prefix.c
===================================================================
--- trunk/src/prefix.c	2005-04-27 05:37:08 UTC (rev 63)
+++ trunk/src/prefix.c	2005-04-30 21:21:46 UTC (rev 64)
@@ -1,482 +0,0 @@
-/*
- * BinReloc - a library for creating relocatable executables
- * Written by: Mike Hearn <mike at theoretic.com>
- *             Hongli Lai <h.lai at chello.nl>
- * http://autopackage.org/
- * 
- * This source code is public domain. You can relicense this code
- * under whatever license you want.
- *
- * NOTE: if you're using C++ and are getting "undefined reference
- * to br_*", try renaming prefix.c to prefix.cpp
- */
-
-/* WARNING, BEFORE YOU MODIFY PREFIX.C:
- *
- * If you make changes to any of the functions in prefix.c, you MUST
- * change the BR_NAMESPACE macro (in prefix.h).
- * This way you can avoid symbol table conflicts with other libraries
- * that also happen to use BinReloc.
- *
- * Example:
- * #define BR_NAMESPACE(funcName) foobar_ ## funcName
- * --> expands br_locate to foobar_br_locate
- */
-
-#ifndef _PREFIX_C_
-#define _PREFIX_C_
-
-#ifdef HAVE_CONFIG_H
-	#include "config.h"
-#endif
-
-#ifndef BR_PTHREADS
-	/* Change 1 to 0 if you don't want pthread support */
-	#define BR_PTHREADS 1
-#endif /* BR_PTHREADS */
-
-#include <stdlib.h>
-#include <stdio.h>
-#include <limits.h>
-#include <string.h>
-#include "prefix.h"
-
-#ifdef __cplusplus
-extern "C" {
-#endif /* __cplusplus */
-
-
-#undef NULL
-#define NULL ((void *) 0)
-
-#ifdef __GNUC__
-	#define br_return_val_if_fail(expr,val) if (!(expr)) {fprintf (stderr, "** BinReloc (%s): assertion %s failed\n", __PRETTY_FUNCTION__, #expr); return val;}
-#else
-	#define br_return_val_if_fail(expr,val) if (!(expr)) return val
-#endif /* __GNUC__ */
-
-
-static br_locate_fallback_func fallback_func = NULL;
-static void *fallback_data = NULL;
-
-
-#ifdef ENABLE_BINRELOC
-#include <sys/types.h>
-#include <sys/stat.h>
-#include <sys/param.h>
-#include <unistd.h>
-
-
-/**
- * br_locate:
- * symbol: A symbol that belongs to the app/library you want to locate.
- * Returns: A newly allocated string containing the full path of the
- *	    app/library that func belongs to, or NULL on error. This
- *	    string should be freed when not when no longer needed.
- *
- * Finds out to which application or library symbol belongs, then locate
- * the full path of that application or library.
- * Note that symbol cannot be a pointer to a function. That will not work.
- *
- * Example:
- * --> main.c
- * #include "prefix.h"
- * #include "libfoo.h"
- *
- * int main (int argc, char *argv[]) {
- *	printf ("Full path of this app: %s\n", br_locate (&argc));
- *	libfoo_start ();
- *	return 0;
- * }
- *
- * --> libfoo.c starts here
- * #include "prefix.h"
- *
- * void libfoo_start () {
- *	--> "" is a symbol that belongs to libfoo (because it's called
- *	--> from libfoo_start()); that's why this works.
- *	printf ("libfoo is located in: %s\n", br_locate (""));
- * }
- */
-char *
-br_locate (void *symbol)
-{
-	char line[5000];
-	FILE *f;
-	char *path;
-
-	br_return_val_if_fail (symbol != NULL, NULL);
-
-	f = fopen ("/proc/self/maps", "r");
-	if (!f) {
-		if (fallback_func)
-			return fallback_func(symbol, fallback_data);
-		else
-			return NULL;
-	}
-
-	while (!feof (f))
-	{
-		unsigned long start, end;
-
-		if (!fgets (line, sizeof (line), f))
-			continue;
-		if (!strstr (line, " r-xp ") || !strchr (line, '/'))
-			continue;
-
-		sscanf (line, "%lx-%lx ", &start, &end);
-		if (symbol >= (void *) start && symbol < (void *) end)
-		{
-			char *tmp;
-			size_t len;
-
-			/* Extract the filename; it is always an absolute path */
-			path = strchr (line, '/');
-
-			/* Get rid of the newline */
-			tmp = strrchr (path, '\n');
-			if (tmp) *tmp = 0;
-
-			/* Get rid of "(deleted)" */
-			len = strlen (path);
-			if (len > 10 && strcmp (path + len - 10, " (deleted)") == 0)
-			{
-				tmp = path + len - 10;
-				*tmp = 0;
-			}
-
-			fclose(f);
-			return strdup (path);
-		}
-	}
-
-	fclose (f);
-	return NULL;
-}
-
-
-/**
- * br_locate_prefix:
- * symbol: A symbol that belongs to the app/library you want to locate.
- * Returns: A prefix. This string should be freed when no longer needed.
- *
- * Locates the full path of the app/library that symbol belongs to, and return
- * the prefix of that path, or NULL on error.
- * Note that symbol cannot be a pointer to a function. That will not work.
- *
- * Example:
- * --> This application is located in /usr/bin/foo
- * br_locate_prefix (&argc);   --> returns: "/usr"
- */
-char *
-br_locate_prefix (void *symbol)
-{
-	char *path, *prefix;
-
-	br_return_val_if_fail (symbol != NULL, NULL);
-
-	path = br_locate (symbol);
-	if (!path) return NULL;
-
-	prefix = br_extract_prefix (path);
-	free (path);
-	return prefix;
-}
-
-
-/**
- * br_prepend_prefix:
- * symbol: A symbol that belongs to the app/library you want to locate.
- * path: The path that you want to prepend the prefix to.
- * Returns: The new path, or NULL on error. This string should be freed when no
- *	    longer needed.
- *
- * Gets the prefix of the app/library that symbol belongs to. Prepend that prefix to path.
- * Note that symbol cannot be a pointer to a function. That will not work.
- *
- * Example:
- * --> The application is /usr/bin/foo
- * br_prepend_prefix (&argc, "/share/foo/data.png");   --> Returns "/usr/share/foo/data.png"
- */
-char *
-br_prepend_prefix (void *symbol, char *path)
-{
-	char *tmp, *newpath;
-
-	br_return_val_if_fail (symbol != NULL, NULL);
-	br_return_val_if_fail (path != NULL, NULL);
-
-	tmp = br_locate_prefix (symbol);
-	if (!tmp) return NULL;
-
-	if (strcmp (tmp, "/") == 0)
-		newpath = strdup (path);
-	else
-		newpath = br_strcat (tmp, path);
-
-	/* Get rid of compiler warning ("br_prepend_prefix never used") */
-	if (0) br_prepend_prefix (NULL, NULL);
-
-	free (tmp);
-	return newpath;
-}
-
-#endif /* ENABLE_BINRELOC */
-
-
-/* Pthread stuff for thread safetiness */
-#if BR_PTHREADS && defined(ENABLE_BINRELOC)
-
-#include <pthread.h>
-
-static pthread_key_t br_thread_key;
-static pthread_once_t br_thread_key_once = PTHREAD_ONCE_INIT;
-
-
-static void
-br_thread_local_store_fini ()
-{
-	char *specific;
-
-	specific = (char *) pthread_getspecific (br_thread_key);
-	if (specific)
-	{
-		free (specific);
-		pthread_setspecific (br_thread_key, NULL);
-	}
-	pthread_key_delete (br_thread_key);
-	br_thread_key = 0;
-}
-
-
-static void
-br_str_free (void *str)
-{
-	if (str)
-		free (str);
-}
-
-
-static void
-br_thread_local_store_init ()
-{
-	if (pthread_key_create (&br_thread_key, br_str_free) == 0)
-		atexit (br_thread_local_store_fini);
-}
-
-#else /* BR_PTHREADS */
-#ifdef ENABLE_BINRELOC
-
-static char *br_last_value = (char *) NULL;
-
-static void
-br_free_last_value ()
-{
-	if (br_last_value)
-		free (br_last_value);
-}
-
-#endif /* ENABLE_BINRELOC */
-#endif /* BR_PTHREADS */
-
-
-#ifdef ENABLE_BINRELOC
-
-/**
- * br_thread_local_store:
- * str: A dynamically allocated string.
- * Returns: str. This return value must not be freed.
- *
- * Store str in a thread-local variable and return str. The next
- * you run this function, that variable is freed too.
- * This function is created so you don't have to worry about freeing
- * strings. Just be careful about doing this sort of thing:
- *
- * some_function( BR_DATADIR("/one.png"), BR_DATADIR("/two.png") )
- *
- * Examples:
- * char *foo;
- * foo = br_thread_local_store (strdup ("hello")); --> foo == "hello"
- * foo = br_thread_local_store (strdup ("world")); --> foo == "world"; "hello" is now freed.
- */
-const char *
-br_thread_local_store (char *str)
-{
-	#if BR_PTHREADS
-		char *specific;
-
-		pthread_once (&br_thread_key_once, br_thread_local_store_init);
-
-		specific = (char *) pthread_getspecific (br_thread_key);
-		br_str_free (specific);
-		pthread_setspecific (br_thread_key, str);
-
-	#else /* BR_PTHREADS */
-		static int initialized = 0;
-
-		if (!initialized)
-		{
-			atexit (br_free_last_value);
-			initialized = 1;
-		}
-
-		if (br_last_value)
-			free (br_last_value);
-		br_last_value = str;
-	#endif /* BR_PTHREADS */
-
-	return (const char *) str;
-}
-
-#endif /* ENABLE_BINRELOC */
-
-
-/**
- * br_strcat:
- * str1: A string.
- * str2: Another string.
- * Returns: A newly-allocated string. This string should be freed when no longer needed.
- *
- * Concatenate str1 and str2 to a newly allocated string.
- */
-char *
-br_strcat (const char *str1, const char *str2)
-{
-	char *result;
-	size_t len1, len2;
-
-	if (!str1) str1 = "";
-	if (!str2) str2 = "";
-
-	len1 = strlen (str1);
-	len2 = strlen (str2);
-
-	result = (char *) malloc (len1 + len2 + 1);
-	memcpy (result, str1, len1);
-	memcpy (result + len1, str2, len2);
-	result[len1 + len2] = '\0';
-
-	return result;
-}
-
-
-/* Emulates glibc's strndup() */
-static char *
-br_strndup (char *str, size_t size)
-{
-	char *result = (char *) NULL;
-	size_t len;
-
-	br_return_val_if_fail (str != (char *) NULL, (char *) NULL);
-
-	len = strlen (str);
-	if (!len) return strdup ("");
-	if (size > len) size = len;
-
-	result = (char *) calloc (sizeof (char), len + 1);
-	memcpy (result, str, size);
-	return result;
-}
-
-
-/**
- * br_extract_dir:
- * path: A path.
- * Returns: A directory name. This string should be freed when no longer needed.
- *
- * Extracts the directory component of path. Similar to g_dirname() or the dirname
- * commandline application.
- *
- * Example:
- * br_extract_dir ("/usr/local/foobar");  --> Returns: "/usr/local"
- */
-char *
-br_extract_dir (const char *path)
-{
-	char *end, *result;
-
-	br_return_val_if_fail (path != (char *) NULL, (char *) NULL);
-
-	end = strrchr (path, '/');
-	if (!end) return strdup (".");
-
-	while (end > path && *end == '/')
-		end--;
-	result = br_strndup ((char *) path, end - path + 1);
-	if (!*result)
-	{
-		free (result);
-		return strdup ("/");
-	} else
-		return result;
-}
-
-
-/**
- * br_extract_prefix:
- * path: The full path of an executable or library.
- * Returns: The prefix, or NULL on error. This string should be freed when no longer needed.
- *
- * Extracts the prefix from path. This function assumes that your executable
- * or library is installed in an LSB-compatible directory structure.
- *
- * Example:
- * br_extract_prefix ("/usr/bin/gnome-panel");       --> Returns "/usr"
- * br_extract_prefix ("/usr/local/lib/libfoo.so");   --> Returns "/usr/local"
- * br_extract_prefix ("/usr/local/libfoo.so");       --> Returns "/usr"
- */
-char *
-br_extract_prefix (const char *path)
-{
-	char *end, *tmp, *result;
-
-	br_return_val_if_fail (path != (char *) NULL, (char *) NULL);
-
-	if (!*path) return strdup ("/");
-	end = strrchr (path, '/');
-	if (!end) return strdup (path);
-
-	tmp = br_strndup ((char *) path, end - path);
-	if (!*tmp)
-	{
-		free (tmp);
-		return strdup ("/");
-	}
-	end = strrchr (tmp, '/');
-	if (!end) return tmp;
-
-	result = br_strndup (tmp, end - tmp);
-	free (tmp);
-
-	if (!*result)
-	{
-		free (result);
-		result = strdup ("/");
-	}
-
-	return result;
-}
-
-
-/**
- * br_set_fallback_function:
- * func: A function to call to find the binary.
- * data: User data to pass to func.
- *
- * Sets a function to call to find the path to the binary, in
- * case "/proc/self/maps" can't be opened. The function set should
- * return a string that is safe to free with free().
- */
-void
-br_set_locate_fallback_func (br_locate_fallback_func func, void *data)
-{
-	fallback_func = func;
-	fallback_data = data;
-}
-
-
-#ifdef __cplusplus
-}
-#endif /* __cplusplus */
-
-#endif /* _PREFIX_C */

Deleted: trunk/src/prefix.h
===================================================================
--- trunk/src/prefix.h	2005-04-27 05:37:08 UTC (rev 63)
+++ trunk/src/prefix.h	2005-04-30 21:21:46 UTC (rev 64)
@@ -1,139 +0,0 @@
-/*
- * BinReloc - a library for creating relocatable executables
- * Written by: Mike Hearn <mike at theoretic.com>
- *             Hongli Lai <h.lai at chello.nl>
- * http://autopackage.org/
- *
- * This source code is public domain. You can relicense this code
- * under whatever license you want.
- *
- * See http://autopackage.org/docs/binreloc/ for
- * more information and how to use this.
- *
- * NOTE: if you're using C++ and are getting "undefined reference
- * to br_*", try renaming prefix.c to prefix.cpp
- */
-
-#ifndef _PREFIX_H_
-#define _PREFIX_H_
-
-#ifdef __cplusplus
-extern "C" {
-#endif /* __cplusplus */
-
-/* WARNING, BEFORE YOU MODIFY PREFIX.C:
- *
- * If you make changes to any of the functions in prefix.c, you MUST
- * change the BR_NAMESPACE macro.
- * This way you can avoid symbol table conflicts with other libraries
- * that also happen to use BinReloc.
- *
- * Example:
- * #define BR_NAMESPACE(funcName) foobar_ ## funcName
- * --> expands br_locate to foobar_br_locate
- */
-#undef BR_NAMESPACE
-#define BR_NAMESPACE(funcName) funcName
-
-
-#ifdef ENABLE_BINRELOC
-
-#define br_thread_local_store BR_NAMESPACE(br_thread_local_store)
-#define br_locate BR_NAMESPACE(br_locate)
-#define br_locate_prefix BR_NAMESPACE(br_locate_prefix)
-#define br_prepend_prefix BR_NAMESPACE(br_prepend_prefix)
-
-#ifndef BR_NO_MACROS
-	/* These are convience macros that replace the ones usually used
-	   in Autoconf/Automake projects */
-	#undef SELFPATH
-	#undef PREFIX
-	#undef PREFIXDIR
-	#undef BINDIR
-	#undef SBINDIR
-	#undef DATADIR
-	#undef LIBDIR
-	#undef LIBEXECDIR
-	#undef ETCDIR
-	#undef SYSCONFDIR
-	#undef CONFDIR
-	#undef LOCALEDIR
-
-	#define SELFPATH	(br_thread_local_store (br_locate ((void *) "")))
-	#define PREFIX		(br_thread_local_store (br_locate_prefix ((void *) "")))
-	#define PREFIXDIR	(br_thread_local_store (br_locate_prefix ((void *) "")))
-	#define BINDIR		(br_thread_local_store (br_prepend_prefix ((void *) "", "/bin")))
-	#define SBINDIR		(br_thread_local_store (br_prepend_prefix ((void *) "", "/sbin")))
-	#define DATADIR		(br_thread_local_store (br_prepend_prefix ((void *) "", "/share")))
-	#define LIBDIR		(br_thread_local_store (br_prepend_prefix ((void *) "", "/lib")))
-	#define LIBEXECDIR	(br_thread_local_store (br_prepend_prefix ((void *) "", "/libexec")))
-	#define ETCDIR		(br_thread_local_store (br_prepend_prefix ((void *) "", "/etc")))
-	#define SYSCONFDIR	(br_thread_local_store (br_prepend_prefix ((void *) "", "/etc")))
-	#define CONFDIR		(br_thread_local_store (br_prepend_prefix ((void *) "", "/etc")))
-	#define LOCALEDIR	(br_thread_local_store (br_prepend_prefix ((void *) "", "/share/locale")))
-#endif /* BR_NO_MACROS */
-
-
-/* The following functions are used internally by BinReloc
-   and shouldn't be used directly in applications. */
-
-char *br_locate		(void *symbol);
-char *br_locate_prefix	(void *symbol);
-char *br_prepend_prefix	(void *symbol, char *path);
-
-#endif /* ENABLE_BINRELOC */
-
-const char *br_thread_local_store (char *str);
-
-
-/* These macros and functions are not guarded by the ENABLE_BINRELOC
- * macro because they are portable. You can use these functions.
- */
-
-#define br_strcat BR_NAMESPACE(br_strcat)
-#define br_extract_dir BR_NAMESPACE(br_extract_dir)
-#define br_extract_prefix BR_NAMESPACE(br_extract_prefix)
-#define br_set_locate_fallback_func BR_NAMESPACE(br_set_locate_fallback_func)
-
-#ifndef BR_NO_MACROS
-  #ifndef ENABLE_BINRELOC        
-	#define BR_SELFPATH(suffix)	SELFPATH suffix
-	#define BR_PREFIX(suffix)	PREFIX suffix
-	#define BR_PREFIXDIR(suffix)	BR_PREFIX suffix
-	#define BR_BINDIR(suffix)	BINDIR suffix
-	#define BR_SBINDIR(suffix)	SBINDIR suffix
-	#define BR_DATADIR(suffix)	DATADIR suffix
-	#define BR_LIBDIR(suffix)	LIBDIR suffix
-	#define BR_LIBEXECDIR(suffix)	LIBEXECDIR suffix
-	#define BR_ETCDIR(suffix)	ETCDIR suffix
-	#define BR_SYSCONFDIR(suffix)	SYSCONFDIR suffix
-	#define BR_CONFDIR(suffix)	CONFDIR suffix
-	#define BR_LOCALEDIR(suffix)	LOCALEDIR suffix
-  #else
-	#define BR_SELFPATH(suffix)	(br_thread_local_store (br_strcat (SELFPATH, suffix)))
-	#define BR_PREFIX(suffix)	(br_thread_local_store (br_strcat (PREFIX, suffix)))
-	#define BR_PREFIXDIR(suffix)	(br_thread_local_store (br_strcat (BR_PREFIX, suffix)))
-	#define BR_BINDIR(suffix)	(br_thread_local_store (br_strcat (BINDIR, suffix)))
-	#define BR_SBINDIR(suffix)	(br_thread_local_store (br_strcat (SBINDIR, suffix)))
-	#define BR_DATADIR(suffix)	(br_thread_local_store (br_strcat (DATADIR, suffix)))
-	#define BR_LIBDIR(suffix)	(br_thread_local_store (br_strcat (LIBDIR, suffix)))
-	#define BR_LIBEXECDIR(suffix)	(br_thread_local_store (br_strcat (LIBEXECDIR, suffix)))
-	#define BR_ETCDIR(suffix)	(br_thread_local_store (br_strcat (ETCDIR, suffix)))
-	#define BR_SYSCONFDIR(suffix)	(br_thread_local_store (br_strcat (SYSCONFDIR, suffix)))
-	#define BR_CONFDIR(suffix)	(br_thread_local_store (br_strcat (CONFDIR, suffix)))
-	#define BR_LOCALEDIR(suffix)	(br_thread_local_store (br_strcat (LOCALEDIR, suffix)))        
-  #endif
-#endif
-
-char *br_strcat	(const char *str1, const char *str2);
-char *br_extract_dir	(const char *path);
-char *br_extract_prefix(const char *path);
-typedef char *(*br_locate_fallback_func) (void *symbol, void *data);
-void br_set_locate_fallback_func (br_locate_fallback_func func, void *data);
-
-
-#ifdef __cplusplus
-}
-#endif /* __cplusplus */
-
-#endif /* _PREFIX_H_ */



